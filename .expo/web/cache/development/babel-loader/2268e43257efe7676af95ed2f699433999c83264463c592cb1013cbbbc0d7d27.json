{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, doc, getDocs, setDoc, addDoc, Timestamp } from \"firebase/firestore\";\nimport { auth, db, firebase } from \"../firebase\";\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Dashboard = function Dashboard(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(5000),\n    _useState2 = _slicedToArray(_useState, 2),\n    balance = _useState2[0],\n    setBalance = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setUserInfo = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    transactions = _useState8[0],\n    setTransactions = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    fullname = _useState10[0],\n    setName = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    recipientEmail = _useState12[0],\n    setRecipientEmail = _useState12[1];\n  var _useState13 = useState(),\n    _useState14 = _slicedToArray(_useState13, 2),\n    amount = _useState14[0],\n    setAmount = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    recentContacts = _useState16[0],\n    setRecentContacts = _useState16[1];\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    ConfirmPassword = _useState18[0],\n    setPassword = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    password = _useState20[0],\n    setPin = _useState20[1];\n  var saveDataToStorage = function () {\n    var _ref2 = _asyncToGenerator(function* (recipientEmail, recentContacts) {\n      try {\n        var data = JSON.stringify({\n          recipientEmail: recipientEmail,\n          recentContacts: recentContacts\n        });\n        yield AsyncStorage.setItem('userData', data);\n        console.log('Data saved to AsyncStorage');\n      } catch (error) {\n        console.log('Error saving data to AsyncStorage:', error);\n      }\n    });\n    return function saveDataToStorage(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loadDataFromStorage = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var data = yield AsyncStorage.getItem('userData');\n        if (data) {\n          var _JSON$parse = JSON.parse(data),\n            _recipientEmail = _JSON$parse.recipientEmail,\n            _recentContacts = _JSON$parse.recentContacts;\n          setRecipientEmail(_recipientEmail);\n          setRecentContacts(_recentContacts);\n          console.log('Data loaded from AsyncStorage');\n        }\n      } catch (error) {\n        console.log('Error loading data from AsyncStorage:', error);\n      }\n    });\n    return function loadDataFromStorage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadDataFromStorage();\n  }, []);\n  useEffect(function () {\n    saveDataToStorage(recipientEmail, recentContacts);\n  }, [recipientEmail, recentContacts]);\n  var getRecipientUid = function () {\n    var _ref4 = _asyncToGenerator(function* (email) {\n      var usersRef = collection(db, 'users');\n      var q = query(usersRef, where('email', '==', email));\n      var querySnapshot = yield getDocs(q);\n      if (!querySnapshot.empty) {\n        var recipient = querySnapshot.docs[0];\n        return recipient.id;\n      }\n      throw new Error('Recipient not found');\n    });\n    return function getRecipientUid(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var ConfirmPin = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      onAuthStateChanged(auth, function () {\n        var _ref6 = _asyncToGenerator(function* (user) {\n          if (user) {\n            var uid = user.uid;\n            setEmail(user.email);\n            try {\n              if (!password) {\n                throw new Error(\"Password is required\");\n              }\n              var userCredential = yield signInWithEmailAndPassword(auth, user.email, password);\n              var userData = userCredential.user;\n              console.log(\"User password:\", userData.password, uid);\n              if (password === ConfirmPassword) {\n                transferFunds();\n              } else {\n                alert(\"Password does not match\");\n              }\n            } catch (error) {\n              console.error(\"Error fetching user data:\", error);\n            }\n          }\n        });\n        return function (_x4) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    });\n    return function ConfirmPin() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var transferFunds = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        var recipientUid = yield getRecipientUid(recipientEmail);\n        var sfDocRef = doc(db, 'users', recipientUid);\n        yield runTransaction(db, function () {\n          var _ref8 = _asyncToGenerator(function* (transaction) {\n            var sfDoc = yield transaction.get(sfDocRef);\n            if (!sfDoc.exists()) {\n              throw \"Recipient does not exist!\";\n            }\n            var recipientData = sfDoc.data();\n            var newRecipientBalance = recipientData.balance + Number(amount);\n            transaction.update(sfDocRef, {\n              balance: newRecipientBalance\n            });\n            var currentUserUid = auth.currentUser.uid;\n            var currentUserDocRef = doc(db, 'users', currentUserUid);\n            var currentUserDoc = yield transaction.get(currentUserDocRef);\n            var currentUserData = currentUserDoc.data();\n            var newCurrentUserBalance = currentUserData.balance - Number(amount);\n            transaction.update(currentUserDocRef, {\n              balance: newCurrentUserBalance\n            });\n            var timestamp = Timestamp.now();\n            var transactionData = {\n              sender: email,\n              recipient: recipientEmail,\n              amount: Number(amount),\n              timestamp: timestamp\n            };\n            yield addDoc(collection(db, 'transactions'), transactionData);\n            setAmount('');\n            setRecipientEmail('');\n            setPassword('');\n            setPin('');\n            console.log(\"Transaction completed successfully.\");\n            alert(\"Transaction completed successfully.\");\n          });\n          return function (_x5) {\n            return _ref8.apply(this, arguments);\n          };\n        }());\n      } catch (error) {\n        console.error(\"Error transferring funds:\", error);\n        alert(\"Error transferring funds. Please check the recipient email and amount.\");\n      }\n    });\n    return function transferFunds() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function handleLogout() {\n    signOut(auth).then(function () {\n      console.log(\"User signed out successfully\");\n      navigation.replace(\"Login\");\n    }).catch(function (error) {\n      console.error(\"Error signing out:\", error);\n    });\n  };\n  return _jsxs(ImageBackground, {\n    source: require(\"../assets/background1.jpg\"),\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Dashboard\"\n      }), _jsx(TouchableOpacity, {\n        onPress: handleLogout,\n        children: _jsx(Ionicons, {\n          name: \"log-out-outline\",\n          size: 24,\n          color: \"white\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.balanceContainer,\n      children: [_jsx(Text, {\n        style: styles.balanceLabel,\n        children: \"Current Balance:\"\n      }), _jsxs(Text, {\n        style: styles.balanceAmount,\n        children: [\"$ \", balance]\n      })]\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Recipient Email\",\n        onChangeText: function onChangeText(text) {\n          return setRecipientEmail(text);\n        },\n        value: recipientEmail\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Amount\",\n        onChangeText: function onChangeText(text) {\n          return setAmount(text);\n        },\n        value: amount,\n        keyboardType: \"numeric\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Your Password\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        value: ConfirmPassword,\n        secureTextEntry: true\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Your Pin\",\n        onChangeText: function onChangeText(text) {\n          return setPin(text);\n        },\n        value: password,\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: ConfirmPin,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Send\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    paddingHorizontal: 20,\n    marginTop: 40\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  balanceContainer: {\n    alignItems: \"center\",\n    marginVertical: 30\n  },\n  balanceLabel: {\n    fontSize: 18,\n    color: \"white\",\n    marginBottom: 10\n  },\n  balanceAmount: {\n    fontSize: 24,\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  formContainer: {\n    width: \"80%\"\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderRadius: 8,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    fontSize: 16,\n    color: \"white\",\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: \"#286053\",\n    borderRadius: 8,\n    paddingVertical: 12,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  }\n});\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","TextInput","ImageBackground","AsyncStorage","Ionicons","collection","query","where","onSnapshot","writeBatch","runTransaction","doc","getDocs","setDoc","addDoc","Timestamp","auth","db","firebase","onAuthStateChanged","signInWithEmailAndPassword","signOut","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","route","navigation","_useState","_useState2","_slicedToArray","balance","setBalance","_useState3","_useState4","email","setEmail","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","transactions","setTransactions","_useState9","_useState10","fullname","setName","_useState11","_useState12","recipientEmail","setRecipientEmail","_useState13","_useState14","amount","setAmount","_useState15","_useState16","recentContacts","setRecentContacts","_useState17","_useState18","ConfirmPassword","setPassword","_useState19","_useState20","password","setPin","saveDataToStorage","_ref2","_asyncToGenerator","data","JSON","stringify","setItem","console","log","error","_x","_x2","apply","arguments","loadDataFromStorage","_ref3","getItem","_JSON$parse","parse","getRecipientUid","_ref4","usersRef","q","querySnapshot","empty","recipient","docs","id","Error","_x3","ConfirmPin","_ref5","_ref6","user","uid","userCredential","userData","transferFunds","alert","_x4","_ref7","recipientUid","sfDocRef","_ref8","transaction","sfDoc","get","exists","recipientData","newRecipientBalance","Number","update","currentUserUid","currentUser","currentUserDocRef","currentUserDoc","currentUserData","newCurrentUserBalance","timestamp","now","transactionData","sender","_x5","handleLogout","then","replace","catch","source","require","style","styles","container","children","header","headerText","onPress","name","size","color","balanceContainer","balanceLabel","balanceAmount","formContainer","input","placeholder","onChangeText","text","value","keyboardType","secureTextEntry","button","buttonText","create","flex","alignItems","justifyContent","flexDirection","width","paddingHorizontal","marginTop","fontSize","fontWeight","marginVertical","marginBottom","borderWidth","borderColor","borderRadius","paddingVertical","backgroundColor"],"sources":["C:/Users/User/E-wallet-GasTracker/screens/SendCash.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, ImageBackground } from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, doc, getDocs, setDoc, addDoc, Timestamp } from \"firebase/firestore\";\r\nimport { auth, db, firebase } from \"../firebase\";\r\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\r\n\r\nconst Dashboard = ({ route, navigation }) => {\r\n  const [balance, setBalance] = useState(5000); // Initial balance\r\n  const [email, setEmail] = useState();\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [transactions, setTransactions] = useState();\r\n  const [fullname, setName] = useState();\r\n  const [recipientEmail, setRecipientEmail] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [recentContacts, setRecentContacts] = useState([]);\r\n  const [ConfirmPassword, setPassword] = useState(\"\");\r\n  const [password, setPin] = useState(\"\");\r\n  \r\n  const saveDataToStorage = async (recipientEmail, recentContacts) => {\r\n    try {\r\n      const data = JSON.stringify({ recipientEmail, recentContacts });\r\n      await AsyncStorage.setItem('userData', data);\r\n      console.log('Data saved to AsyncStorage');\r\n    } catch (error) {\r\n      console.log('Error saving data to AsyncStorage:', error);\r\n    }\r\n  };\r\n\r\n  const loadDataFromStorage = async () => {\r\n    try {\r\n      const data = await AsyncStorage.getItem('userData');\r\n      if (data) {\r\n        const { recipientEmail, recentContacts } = JSON.parse(data);\r\n        setRecipientEmail(recipientEmail);\r\n        setRecentContacts(recentContacts);\r\n        console.log('Data loaded from AsyncStorage');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error loading data from AsyncStorage:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataFromStorage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveDataToStorage(recipientEmail, recentContacts);\r\n  }, [recipientEmail, recentContacts]);\r\n\r\n  const getRecipientUid = async (email) => {\r\n    const usersRef = collection(db, 'users');\r\n    const q = query(usersRef, where('email', '==', email));\r\n    const querySnapshot = await getDocs(q);\r\n    if (!querySnapshot.empty) {\r\n      const recipient = querySnapshot.docs[0];\r\n      return recipient.id;\r\n    }\r\n    throw new Error('Recipient not found');\r\n  };\r\n\r\n  const ConfirmPin = async () => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        const uid = user.uid;\r\n        setEmail(user.email);\r\n\r\n        try {\r\n          if (!password) {\r\n            throw new Error(\"Password is required\");\r\n          }\r\n\r\n          const userCredential = await signInWithEmailAndPassword(auth, user.email, password);\r\n          const userData = userCredential.user;\r\n          console.log(\"User password:\", userData.password, uid);\r\n\r\n          if (password === ConfirmPassword) {\r\n            transferFunds();\r\n          } else {\r\n            alert(\"Password does not match\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching user data:\", error);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const transferFunds = async () => {\r\n    try {\r\n      const recipientUid = await getRecipientUid(recipientEmail);\r\n      const sfDocRef = doc(db, 'users', recipientUid);\r\n      \r\n      await runTransaction(db, async (transaction) => {\r\n        const sfDoc = await transaction.get(sfDocRef);\r\n        if (!sfDoc.exists()) {\r\n          throw \"Recipient does not exist!\";\r\n        }\r\n        \r\n        const recipientData = sfDoc.data();\r\n        const newRecipientBalance = recipientData.balance + Number(amount);\r\n        transaction.update(sfDocRef, { balance: newRecipientBalance });\r\n\r\n        const currentUserUid = auth.currentUser.uid;\r\n        const currentUserDocRef = doc(db, 'users', currentUserUid);\r\n        const currentUserDoc = await transaction.get(currentUserDocRef);\r\n        const currentUserData = currentUserDoc.data();\r\n        const newCurrentUserBalance = currentUserData.balance - Number(amount);\r\n        transaction.update(currentUserDocRef, { balance: newCurrentUserBalance });\r\n\r\n        const timestamp = Timestamp.now();\r\n        const transactionData = {\r\n          sender: email,\r\n          recipient: recipientEmail,\r\n          amount: Number(amount),\r\n          timestamp: timestamp\r\n        };\r\n        await addDoc(collection(db, 'transactions'), transactionData);\r\n\r\n        setAmount('');\r\n        setRecipientEmail('');\r\n        setPassword('');\r\n        setPin('');\r\n\r\n        console.log(\"Transaction completed successfully.\");\r\n        alert(\"Transaction completed successfully.\");\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error transferring funds:\", error);\r\n      alert(\"Error transferring funds. Please check the recipient email and amount.\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    signOut(auth)\r\n      .then(() => {\r\n        console.log(\"User signed out successfully\");\r\n        navigation.replace(\"Login\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error signing out:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ImageBackground source={require(\"../assets/background1.jpg\")} style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerText}>Dashboard</Text>\r\n        <TouchableOpacity onPress={handleLogout}>\r\n          <Ionicons name=\"log-out-outline\" size={24} color=\"white\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.balanceContainer}>\r\n        <Text style={styles.balanceLabel}>Current Balance:</Text>\r\n        <Text style={styles.balanceAmount}>$ {balance}</Text>\r\n      </View>\r\n      <View style={styles.formContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Recipient Email\"\r\n          onChangeText={(text) => setRecipientEmail(text)}\r\n          value={recipientEmail}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Amount\"\r\n          onChangeText={(text) => setAmount(text)}\r\n          value={amount}\r\n          keyboardType=\"numeric\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Your Password\"\r\n          onChangeText={(text) => setPassword(text)}\r\n          value={ConfirmPassword}\r\n          secureTextEntry\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Your Pin\"\r\n          onChangeText={(text) => setPin(text)}\r\n          value={password}\r\n          secureTextEntry\r\n        />\r\n        <TouchableOpacity style={styles.button} onPress={ConfirmPin}>\r\n          <Text style={styles.buttonText}>Send</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    paddingHorizontal: 20,\r\n    marginTop: 40,\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n  balanceContainer: {\r\n    alignItems: \"center\",\r\n    marginVertical: 30,\r\n  },\r\n  balanceLabel: {\r\n    fontSize: 18,\r\n    color: \"white\",\r\n    marginBottom: 10,\r\n  },\r\n  balanceAmount: {\r\n    fontSize: 24,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  formContainer: {\r\n    width: \"80%\",\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"white\",\r\n    borderRadius: 8,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 15,\r\n    fontSize: 16,\r\n    color: \"white\",\r\n    marginBottom: 20,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#286053\",\r\n    borderRadius: 8,\r\n    paddingVertical: 12,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}