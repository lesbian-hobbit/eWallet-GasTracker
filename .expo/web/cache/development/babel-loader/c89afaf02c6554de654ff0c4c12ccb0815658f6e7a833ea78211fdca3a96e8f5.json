{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { collection, query, where, onSnapshot, runTransaction, getDoc, doc, getDocs, addDoc, Timestamp, orderBy, limit } from \"firebase/firestore\";\nimport { auth, db, firebase } from \"../firebase\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { Color, FontFamily } from \"../GlobalStyles\";\nimport { useNavigation } from '@react-navigation/core';\nimport { encode } from 'base-64';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport AwesomeAlert from 'react-native-awesome-alerts';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Dashboard = function Dashboard(_ref) {\n  var _route$params;\n  var route = _ref.route;\n  var _useState = useState(5000),\n    _useState2 = _slicedToArray(_useState, 2),\n    balance = _useState2[0],\n    setBalance = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setUserInfo = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    fullname = _useState8[0],\n    setName = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    recipientEmail = _useState10[0],\n    setRecipientEmail = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    amount = _useState12[0],\n    setAmount = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    recentContacts = _useState14[0],\n    setRecentContacts = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    ConfirmPassword = _useState16[0],\n    setPassword = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    verificationCode = _useState18[0],\n    setVerificationCode = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    phoneNumber = _useState20[0],\n    setPhoneNumber = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    selectedAmount = _useState22[0],\n    setSelectedAmount = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    amountError = _useState24[0],\n    setAmountError = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    showProgressAlert = _useState26[0],\n    setShowProgressAlert = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    showSuccessAlert = _useState28[0],\n    setShowSuccessAlert = _useState28[1];\n  var _useState29 = useState(''),\n    _useState30 = _slicedToArray(_useState29, 2),\n    note = _useState30[0],\n    setNote = _useState30[1];\n  var navigation = useNavigation();\n  var backButton = function backButton() {\n    navigation.navigate(\"Main\");\n  };\n  var scannedData = (_route$params = route.params) == null ? void 0 : _route$params.scannedData;\n  if (!global.btoa) {\n    global.btoa = encode;\n  }\n  var getRecipientUid = function () {\n    var _ref2 = _asyncToGenerator(function* (email) {\n      var usersRef = collection(db, 'users');\n      var q = query(usersRef, where('email', '==', email));\n      var querySnapshot = yield getDocs(q);\n      if (!querySnapshot.empty) {\n        var recipient = querySnapshot.docs[0];\n        return recipient.id;\n      }\n      throw new Error('Recipient not found');\n    });\n    return function getRecipientUid(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var ConfirmPin = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var currentUserUID = auth.currentUser.uid;\n      var userRef = doc(db, 'users', currentUserUID);\n      try {\n        var userDoc = yield getDoc(userRef);\n        if (userDoc.exists()) {\n          var _userDoc$data = userDoc.data(),\n            password = _userDoc$data.password;\n          if (password == ConfirmPassword) {\n            transferFunds();\n          } else {\n            ToastAndroid.show('Invalid Action/no PIN', ToastAndroid.SHORT);\n          }\n        } else {\n          console.log('User document not found');\n        }\n      } catch (error) {\n        console.error('Error retrieving password:', error);\n      }\n    });\n    return function ConfirmPin() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var loadRecentTransactions = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var currentUserUID = auth.currentUser.uid;\n      var recentTransactionsRef = collection(db, 'users', currentUserUID, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent');\n      var phoneNumber = collection(db, 'users', currentUserUID, 'contact');\n      onSnapshot(query(recentTransactionsRef, orderBy('Timestamp', 'desc'), limit(5)), function (snapshot) {\n        var emailSet = new Set();\n        snapshot.forEach(function (doc) {\n          var _doc$data = doc.data(),\n            ReceiverEmail = _doc$data.ReceiverEmail;\n          emailSet.add(ReceiverEmail);\n        });\n        var recentContacts = Array.from(emailSet);\n        setRecentContacts(recentContacts);\n      }, function (error) {\n        console.error('Error fetching recent transactions:', error);\n      });\n    });\n    return function loadRecentTransactions() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var transferFunds = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var user = auth.currentUser;\n      if (Number(amount) < 5) {\n        setAmountError(true);\n        return;\n      }\n      if (user && user.emailVerified) {\n        setShowProgressAlert(true);\n        try {\n          var recipientUid = yield getRecipientUid(recipientEmail);\n          var sfDocRef = doc(db, 'users', recipientUid);\n          yield runTransaction(db, function () {\n            var _ref6 = _asyncToGenerator(function* (transaction) {\n              var sfDoc = yield transaction.get(sfDocRef);\n              if (!sfDoc.exists()) {\n                throw new Error('Document does not exist!');\n              }\n              var newWallet = sfDoc.data().wallet + Number(amount);\n              transaction.update(sfDocRef, {\n                wallet: newWallet\n              });\n            });\n            return function (_x2) {\n              return _ref6.apply(this, arguments);\n            };\n          }());\n          console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\n          var deduct = function () {\n            var _ref7 = _asyncToGenerator(function* () {\n              var user = auth.currentUser.uid;\n              if (user) {\n                var uid = user;\n                try {\n                  yield runTransaction(db, function () {\n                    var _ref8 = _asyncToGenerator(function* (transaction) {\n                      var userRef = firebase.firestore().collection('users').doc(uid);\n                      var sf = yield transaction.get(userRef);\n                      if (!sf.exists) {\n                        throw new Error('Document does not exist!');\n                      }\n                      var deductedWallet = sf.data().wallet - Number(amount);\n                      setShowSuccessAlert(true);\n                      transaction.update(userRef, {\n                        wallet: deductedWallet\n                      });\n                      console.log('Successfully sent â‚±' + Number(amount) + ' to ' + recipientEmail);\n                    });\n                    return function (_x3) {\n                      return _ref8.apply(this, arguments);\n                    };\n                  }());\n                } catch (error) {\n                  alert('Error updating wallet:', error);\n                  console.error('Error updating wallet:', error);\n                } finally {\n                  setShowProgressAlert(false);\n                }\n              }\n            });\n            return function deduct() {\n              return _ref7.apply(this, arguments);\n            };\n          }();\n          yield deduct();\n          var _user = auth.currentUser.uid;\n          if (_user) {\n            var uid = _user;\n            var SenderEmail = auth.currentUser.email;\n            var newTransactions = function () {\n              var _ref9 = _asyncToGenerator(function* () {\n                yield addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\n                  transactions: amount,\n                  Timestamp: new Date(),\n                  ReceiverUid: recipientUid,\n                  ReceiverEmail: recipientEmail\n                });\n              });\n              return function newTransactions() {\n                return _ref9.apply(this, arguments);\n              };\n            }();\n            yield newTransactions();\n            var sentHisNote = function () {\n              var _ref10 = _asyncToGenerator(function* () {\n                var sentRef = collection(db, 'users', uid, \"notes\", \"messages\", \"sentMessages\");\n                yield addDoc(sentRef, {\n                  transactions: amount,\n                  Timestamp: new Date(),\n                  ReceiverUid: recipientUid,\n                  ReceiverEmail: recipientEmail,\n                  Note: note\n                });\n              });\n              return function sentHisNote() {\n                return _ref10.apply(this, arguments);\n              };\n            }();\n            yield sentHisNote();\n            var receivedHisNote = function () {\n              var _ref11 = _asyncToGenerator(function* () {\n                var receivedRef = collection(db, 'users', recipientUid, \"notes\", \"messages\", \"receivedMessages\");\n                yield addDoc(receivedRef, {\n                  transactions: amount,\n                  Timestamp: new Date(),\n                  Sender: uid,\n                  SenderEmail: SenderEmail,\n                  Note: note\n                });\n              });\n              return function receivedHisNote() {\n                return _ref11.apply(this, arguments);\n              };\n            }();\n            yield receivedHisNote();\n            var receivedHis = function () {\n              var _ref12 = _asyncToGenerator(function* () {\n                yield addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\n                  transactions: amount,\n                  Timestamp: new Date(),\n                  Sender: uid,\n                  SenderEmail: SenderEmail\n                });\n              });\n              return function receivedHis() {\n                return _ref12.apply(this, arguments);\n              };\n            }();\n            yield receivedHis();\n            var isRecipientInContacts = recentContacts.includes(recipientEmail);\n            if (!isRecipientInContacts) {\n              var updatedContacts = [recipientEmail].concat(_toConsumableArray(recentContacts.slice(0, 4)));\n              setRecentContacts(updatedContacts);\n            }\n          }\n        } catch (error) {\n          console.error('Error transferring funds:', error);\n        }\n      }\n    });\n    return function transferFunds() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        var uid = user.uid;\n        setEmail(user.email);\n        var getWallet = function () {\n          var _ref13 = _asyncToGenerator(function* () {\n            var docRef = doc(db, 'users', uid);\n            var unsubscribe = onSnapshot(docRef, function (docSnap) {\n              if (docSnap.exists()) {\n                console.log('Document data:', docSnap.data());\n                var data = docSnap.data();\n                setUserInfo(data);\n              } else {\n                console.log('No such document!');\n              }\n            });\n            return unsubscribe;\n          });\n          return function getWallet() {\n            return _ref13.apply(this, arguments);\n          };\n        }();\n        var unsubscribe = getWallet();\n        return function () {\n          unsubscribe();\n        };\n      } else {\n        navigation.navigate('Login');\n      }\n    });\n  }, []);\n  useEffect(function () {\n    loadRecentTransactions();\n    setRecipientEmail(scannedData);\n  }, []);\n  var handleAmountClick = function handleAmountClick(selectedAmount) {\n    setAmount(selectedAmount);\n    setSelectedAmount(selectedAmount);\n  };\n  return _jsxs(KeyboardAwareScrollView, {\n    contentContainerStyle: styles.scrollContainer,\n    enableOnAndroid: true,\n    extraScrollHeight: Platform.OS === 'ios' ? 20 : 0,\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.purpleContainer,\n        children: [_jsx(Text, {\n          style: styles.totalBalanceText,\n          children: \"Total balance\"\n        }), _jsxs(Text, {\n          style: styles.purpleContainerText,\n          children: [\"\\u20B1 \", userInfo.wallet ? userInfo.wallet.toLocaleString(undefined, {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          }) : '0.00']\n        })]\n      }), _jsxs(View, {\n        style: styles.recentContactsContainer,\n        children: [_jsx(Text, {\n          style: styles.recentContactsText,\n          children: \"Recent Contacts:\"\n        }), _jsx(ScrollView, {\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          children: _jsx(View, {\n            style: styles.recentContactsRow,\n            children: recentContacts.map(function (contact, index) {\n              return _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return setRecipientEmail(contact);\n                },\n                style: styles.contactsContainer,\n                children: _jsxs(View, {\n                  style: styles.contactIconContainer,\n                  children: [_jsx(Ionicons, {\n                    name: \"person-circle-outline\",\n                    size: 24,\n                    color: \"white\"\n                  }), _jsx(Text, {\n                    style: styles.recentContactText,\n                    children: contact\n                  })]\n                })\n              }, index);\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          padding: 10,\n          marginTop: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: '#fff',\n            fontFamily: FontFamily.poppinsMedium\n          },\n          children: \"Recipient: \"\n        }), _jsx(Text, {\n          style: {\n            color: 'rgba(255, 255, 255, 0.15)'\n          },\n          children: \" *input email\"\n        })]\n      }), _jsx(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsxs(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          children: [_jsx(View, {\n            style: styles.pesoContainer,\n            children: _jsx(Ionicons, {\n              style: styles.personIcon,\n              name: \"person\",\n              size: 30\n            })\n          }), _jsx(View, {\n            style: {\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: _jsx(TextInput, {\n              placeholder: \"Input Recipient's Email: \",\n              placeholderTextColor: Color.gray_500,\n              style: styles.input,\n              value: recipientEmail,\n              onChangeText: setRecipientEmail\n            })\n          })]\n        })\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          padding: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: '#fff',\n            fontFamily: FontFamily.poppinsMedium\n          },\n          children: \"Amount\"\n        }), _jsx(Text, {\n          style: {\n            color: 'rgba(255, 255, 255, 0.15)'\n          },\n          children: \" *insert amount (min \\u20B15.00)\"\n        })]\n      }), _jsx(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsxs(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          children: [_jsx(View, {\n            style: styles.pesoContainer,\n            children: _jsx(Text, {\n              style: styles.pesoText,\n              children: \"\\u20B1\"\n            })\n          }), _jsx(View, {\n            style: {\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start'\n            },\n            children: _jsx(TextInput, {\n              style: styles.input,\n              keyboardType: \"number-pad\",\n              value: amount,\n              onChangeText: function onChangeText(text) {\n                setAmount(text.replace(/[^0-9.]/g, ''));\n                setAmountError(false);\n              }\n            })\n          })]\n        })\n      }), amountError && _jsx(Text, {\n        style: styles.errorText,\n        children: \"Amount should be at least \\u20B15.00\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingHorizontal: 10\n        },\n        children: [_jsx(TouchableOpacity, {\n          style: [styles.optionsContainer, selectedAmount === '50' && {\n            backgroundColor: '#7B61FF',\n            borderColor: '#7B61FF'\n          }],\n          onPress: function onPress() {\n            return handleAmountClick('50');\n          },\n          children: _jsx(Text, {\n            style: [styles.optionsText, selectedAmount === '50' && {\n              color: '#fff'\n            }],\n            children: \"\\u20B150\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.optionsContainer, selectedAmount === '100' && {\n            backgroundColor: '#7B61FF',\n            borderColor: '#7B61FF'\n          }],\n          onPress: function onPress() {\n            return handleAmountClick('100');\n          },\n          children: _jsx(Text, {\n            style: [styles.optionsText, selectedAmount === '100' && {\n              color: '#fff'\n            }],\n            children: \"\\u20B1100\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.optionsContainer, selectedAmount === '150' && {\n            backgroundColor: '#7B61FF',\n            borderColor: '#7B61FF'\n          }],\n          onPress: function onPress() {\n            return handleAmountClick('150');\n          },\n          children: _jsx(Text, {\n            style: [styles.optionsText, selectedAmount === '150' && {\n              color: '#fff'\n            }],\n            children: \"\\u20B1150\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.optionsContainer, selectedAmount === '200' && {\n            backgroundColor: '#7B61FF',\n            borderColor: '#7B61FF'\n          }],\n          onPress: function onPress() {\n            return handleAmountClick('200');\n          },\n          children: _jsx(Text, {\n            style: [styles.optionsText, selectedAmount === '200' && {\n              color: '#fff'\n            }],\n            children: \"\\u20B1200\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          padding: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: '#fff',\n            fontFamily: FontFamily.poppinsMedium\n          },\n          children: \"PIN \"\n        }), _jsx(Text, {\n          style: {\n            color: 'rgba(255, 255, 255, 0.15)'\n          },\n          children: \" *input PIN\"\n        })]\n      }), _jsx(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsxs(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          children: [_jsx(View, {\n            style: styles.pesoContainer,\n            children: _jsx(MaterialCommunityIcons, {\n              style: styles.personIcon,\n              name: \"form-textbox-password\",\n              size: 30\n            })\n          }), _jsx(View, {\n            style: {\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start'\n            },\n            children: _jsx(TextInput, {\n              placeholder: \"Enter PIN\",\n              placeholderTextColor: Color.gray_500,\n              secureTextEntry: true,\n              keyboardType: \"numeric\",\n              style: styles.input,\n              value: ConfirmPassword,\n              maxLength: 6,\n              onChangeText: function onChangeText(text) {\n                var numericValue = text.replace(/[^0-9]/g, '');\n                setPassword(numericValue);\n              }\n            })\n          })]\n        })\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          padding: 10,\n          marginTop: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: '#fff',\n            fontFamily: FontFamily.poppinsMedium\n          },\n          children: \"Notes\"\n        }), _jsx(Text, {\n          style: {\n            color: 'rgba(255, 255, 255, 0.15)'\n          },\n          children: \" *optional\"\n        })]\n      }), _jsx(View, {\n        children: _jsx(TextInput, {\n          style: styles.notesContainer,\n          placeholder: \"Your notes here .......\",\n          placeholderTextColor: Color.gray_400,\n          color: '#fff',\n          fontFamily: FontFamily.poppinsMedium,\n          fontSize: 15,\n          value: note,\n          onChangeText: setNote\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.transferButton,\n        onPress: ConfirmPin,\n        children: _jsx(Text, {\n          style: styles.transferText,\n          children: \"Send\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.transferButton,\n        onPress: backButton,\n        children: _jsx(Text, {\n          style: styles.transferText,\n          children: \"back\"\n        })\n      })]\n    }), _jsx(AwesomeAlert, {\n      show: showProgressAlert,\n      showProgress: true,\n      title: \"Sending\",\n      message: \"Please wait...\",\n      closeOnTouchOutside: true,\n      closeOnHardwareBackPress: false,\n      showCancelButton: false,\n      showConfirmButton: false,\n      contentContainerStyle: styles.progressAlertContent,\n      progressSize: 40,\n      progressColor: \"#7B61FF\"\n    }), _jsx(AwesomeAlert, {\n      show: showSuccessAlert,\n      title: \"Transfer Success!\",\n      message: \"You just sent \\u20B1\" + Number(amount) + \" to \" + recipientEmail + \"\\n\\nNotes: \" + note,\n      closeOnTouchOutside: false,\n      closeOnHardwareBackPress: false,\n      showCancelButton: false,\n      showConfirmButton: true,\n      confirmText: \"OK\",\n      confirmButtonColor: \"#7B61FF\",\n      confirmButtonStyle: {\n        backgroundColor: Color.sUNRISECoral\n      },\n      confirmButtonTextStyle: styles.buttonText,\n      onConfirmPressed: function onConfirmPressed() {\n        setShowSuccessAlert(false);\n        navigation.navigate(\"Main\");\n      },\n      contentContainerStyle: styles.successAlertContent\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    backgroundColor: Color.blackModePrimaryDark,\n    paddingHorizontal: 10\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    backgroundColor: Color.blackModePrimaryDark,\n    marginBottom: 0\n  },\n  backIcon: {\n    width: 70,\n    height: 50,\n    color: Color.gray_700\n  },\n  backImgContainer: {\n    padding: 5\n  },\n  purpleContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n    backgroundColor: '#7B61FF',\n    borderRadius: 38,\n    borderColor: Color.gray_100,\n    borderWidth: 1\n  },\n  purpleContainerText: {\n    color: '#fff',\n    fontSize: 45,\n    fontFamily: FontFamily.poppinsMedium\n  },\n  totalBalanceText: {\n    color: '#C9C9C9',\n    marginTop: 10,\n    fontSize: 15,\n    fontFamily: FontFamily.poppinsMedium\n  },\n  recentContactsContainer: {\n    alignItems: 'center'\n  },\n  contactsContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: Color.gray_400,\n    borderWidth: 2,\n    borderRadius: 15,\n    fontFamily: FontFamily.poppinsMedium,\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n    color: '#fff',\n    fontSize: 10,\n    width: 250,\n    height: 30,\n    paddingHorizontal: 10,\n    marginLeft: 5\n  },\n  recentContactsRow: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  contactIconContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 10\n  },\n  recentContactText: {\n    fontSize: 14,\n    color: '#fff',\n    marginBottom: 3\n  },\n  recentContactsText: {\n    fontSize: 15,\n    color: '#fff',\n    marginBottom: 5,\n    padding: 10,\n    fontFamily: FontFamily.poppinsBold\n  },\n  input: {\n    flex: 1,\n    borderColor: Color.gray_400,\n    borderWidth: 2,\n    borderTopRightRadius: 15,\n    borderBottomRightRadius: 15,\n    fontFamily: FontFamily.poppinsMedium,\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n    color: '#fff',\n    fontSize: 20,\n    width: 290,\n    height: 50,\n    paddingHorizontal: 15\n  },\n  pesoContainer: {\n    borderTopLeftRadius: 15,\n    borderBottomLeftRadius: 15,\n    borderColor: Color.gray_400,\n    borderWidth: 2,\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n    height: 50,\n    width: 50\n  },\n  personIcon: {\n    color: '#7B61FF',\n    padding: 10\n  },\n  pesoText: {\n    color: '#7B61FF',\n    marginLeft: 15,\n    fontSize: 30\n  },\n  optionsContainer: {\n    alignItems: 'center',\n    margin: 10,\n    backgroundColor: 'rgba(255, 255, 255, 0)',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: Color.gray_400,\n    padding: 3,\n    width: '20%'\n  },\n  optionsText: {\n    fontSize: 25,\n    color: Color.gray_500\n  },\n  errorText: {\n    color: '#d65047',\n    fontSize: 12,\n    marginTop: 5\n  },\n  notesContainer: {\n    backgroundColor: 'rgba(255, 255, 255, 0)',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: Color.gray_400,\n    padding: 10\n  },\n  transferButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 80,\n    backgroundColor: \"#7B61FF\",\n    paddingVertical: 5,\n    borderRadius: 10,\n    marginTop: 15\n  },\n  transferText: {\n    fontFamily: FontFamily.poppinsMedium,\n    fontSize: 20,\n    color: '#fff'\n  },\n  buttonText: {\n    color: Color.gray_700,\n    fontFamily: FontFamily.poppinsBold,\n    fontSize: 16,\n    textAlign: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  }\n});\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","TextInput","ScrollView","ToastAndroid","AsyncStorage","Ionicons","MaterialCommunityIcons","collection","query","where","onSnapshot","runTransaction","getDoc","doc","getDocs","addDoc","Timestamp","orderBy","limit","auth","db","firebase","onAuthStateChanged","Color","FontFamily","useNavigation","encode","KeyboardAwareScrollView","AwesomeAlert","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","_route$params","route","_useState","_useState2","_slicedToArray","balance","setBalance","_useState3","_useState4","email","setEmail","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","fullname","setName","_useState9","_useState10","recipientEmail","setRecipientEmail","_useState11","_useState12","amount","setAmount","_useState13","_useState14","recentContacts","setRecentContacts","_useState15","_useState16","ConfirmPassword","setPassword","_useState17","_useState18","verificationCode","setVerificationCode","_useState19","_useState20","phoneNumber","setPhoneNumber","_useState21","_useState22","selectedAmount","setSelectedAmount","_useState23","_useState24","amountError","setAmountError","_useState25","_useState26","showProgressAlert","setShowProgressAlert","_useState27","_useState28","showSuccessAlert","setShowSuccessAlert","_useState29","_useState30","note","setNote","navigation","backButton","navigate","scannedData","params","global","btoa","getRecipientUid","_ref2","_asyncToGenerator","usersRef","q","querySnapshot","empty","recipient","docs","id","Error","_x","apply","arguments","ConfirmPin","_ref3","currentUserUID","currentUser","uid","userRef","userDoc","exists","_userDoc$data","data","password","transferFunds","show","SHORT","console","log","error","loadRecentTransactions","_ref4","recentTransactionsRef","snapshot","emailSet","Set","forEach","_doc$data","ReceiverEmail","add","Array","from","_ref5","user","Number","emailVerified","recipientUid","sfDocRef","_ref6","transaction","sfDoc","get","newWallet","wallet","update","_x2","deduct","_ref7","_ref8","firestore","sf","deductedWallet","_x3","alert","SenderEmail","newTransactions","_ref9","transactions","Date","ReceiverUid","sentHisNote","_ref10","sentRef","Note","receivedHisNote","_ref11","receivedRef","Sender","receivedHis","_ref12","isRecipientInContacts","includes","updatedContacts","concat","_toConsumableArray","slice","getWallet","_ref13","docRef","unsubscribe","docSnap","handleAmountClick","contentContainerStyle","styles","scrollContainer","enableOnAndroid","extraScrollHeight","Platform","OS","children","style","container","purpleContainer","totalBalanceText","purpleContainerText","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","recentContactsContainer","recentContactsText","horizontal","showsHorizontalScrollIndicator","recentContactsRow","map","contact","index","onPress","contactsContainer","contactIconContainer","name","size","color","recentContactText","flexDirection","padding","marginTop","fontFamily","poppinsMedium","justifyContent","alignItems","pesoContainer","personIcon","placeholder","placeholderTextColor","gray_500","input","value","onChangeText","pesoText","keyboardType","text","replace","errorText","paddingHorizontal","optionsContainer","backgroundColor","borderColor","optionsText","secureTextEntry","maxLength","numericValue","notesContainer","gray_400","fontSize","transferButton","transferText","showProgress","title","message","closeOnTouchOutside","closeOnHardwareBackPress","showCancelButton","showConfirmButton","progressAlertContent","progressSize","progressColor","confirmText","confirmButtonColor","confirmButtonStyle","sUNRISECoral","confirmButtonTextStyle","buttonText","onConfirmPressed","successAlertContent","create","flex","blackModePrimaryDark","flexGrow","marginBottom","backIcon","width","height","gray_700","backImgContainer","borderRadius","gray_100","borderWidth","marginLeft","marginRight","poppinsBold","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","margin","marginHorizontal","paddingVertical","textAlign"],"sources":["C:/Users/User/Pictures/E-Wallet-Project/screens/SendCash.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, ScrollView, ToastAndroid} from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { collection, query, where, onSnapshot, runTransaction,getDoc, doc, getDocs, addDoc, Timestamp, orderBy, limit } from \"firebase/firestore\";\r\nimport { auth, db, firebase } from \"../firebase\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { Color, FontFamily} from \"../GlobalStyles\";\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { encode } from 'base-64';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport AwesomeAlert from 'react-native-awesome-alerts';\r\n\r\n\r\n\r\nconst Dashboard = ({ route }) => {\r\n  const [balance, setBalance] = useState(5000); // Initial balance\r\n  const [email, setEmail] = useState();\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [fullname, setName] = useState();\r\n  const [recipientEmail, setRecipientEmail] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [recentContacts, setRecentContacts] = useState([]);\r\n  const [ConfirmPassword, setPassword] = useState(\"\");\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [selectedAmount, setSelectedAmount] = useState('');\r\n  const [amountError, setAmountError] = useState(false);\r\n  const [showProgressAlert, setShowProgressAlert] = useState(false);\r\n  const [showSuccessAlert, setShowSuccessAlert] = useState(false);\r\n  const [note, setNote] = useState(''); // State for note value\r\n\r\n\r\n\r\n  const navigation = useNavigation();\r\n  const backButton = () =>{\r\n    navigation.navigate(\"Main\")\r\n  }\r\n\r\n  const scannedData = route.params?.scannedData\r\n  if (!global.btoa) {\r\n    global.btoa = encode;\r\n  }\r\n\r\n  const getRecipientUid = async (email) => {\r\n    const usersRef = collection(db, 'users');\r\n    const q = query(usersRef, where('email', '==', email));\r\n    const querySnapshot = await getDocs(q);\r\n    if (!querySnapshot.empty) {\r\n      const recipient = querySnapshot.docs[0];\r\n      return recipient.id;\r\n    }\r\n    throw new Error('Recipient not found');\r\n  };\r\n\r\n  const ConfirmPin = async () => {\r\n    const currentUserUID = auth.currentUser.uid;\r\n    const userRef = doc(db, 'users', currentUserUID);\r\n    \r\n    try {\r\n      const userDoc = await getDoc(userRef);\r\n      if (userDoc.exists()) {\r\n        const { password } = userDoc.data();\r\n        if(password == ConfirmPassword) {\r\n              transferFunds();\r\n          // console.log('Password match');\r\n        }\r\n        else {\r\n          ToastAndroid.show('Invalid Action/no PIN', \r\n          ToastAndroid.SHORT);\r\n        }  \r\n      } else {\r\n        console.log('User document not found');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error retrieving password:', error);\r\n    }\r\n  };\r\n  \r\n    const loadRecentTransactions = async () => {\r\n      const currentUserUID = auth.currentUser.uid;\r\n      const recentTransactionsRef = collection(\r\n        db,\r\n        'users',\r\n        currentUserUID,\r\n        'history',\r\n        'DUgVrFDJhas4wAuX07re',\r\n        'Sent'\r\n      );\r\n      const phoneNumber = collection(\r\n        db,\r\n        'users',\r\n        currentUserUID,\r\n        'contact'\r\n      );\r\n    \r\n      onSnapshot(\r\n        query(recentTransactionsRef, orderBy('Timestamp', 'desc'), limit(5)),\r\n        (snapshot) => {\r\n          const emailSet = new Set(); // Use a Set to store unique emails\r\n          snapshot.forEach((doc) => {\r\n            const { ReceiverEmail } = doc.data();\r\n            emailSet.add(ReceiverEmail); // Add email to the Set\r\n          });\r\n          const recentContacts = Array.from(emailSet); // Convert Set back to an array\r\n          setRecentContacts(recentContacts);\r\n        },\r\n        (error) => {\r\n          console.error('Error fetching recent transactions:', error);\r\n        }\r\n      );\r\n    };\r\n  \r\n  \r\n    const transferFunds = async () => {\r\n      const user = auth.currentUser;\r\n    if (Number(amount) < 5) {\r\n        setAmountError(true);\r\n        return;\r\n    }\r\n    if (user && user.emailVerified) {\r\n      setShowProgressAlert(true);\r\n      try {\r\n        const recipientUid = await getRecipientUid(recipientEmail);\r\n        const sfDocRef = doc(db, 'users', recipientUid);\r\n  \r\n        await runTransaction(db, async (transaction) => {\r\n          const sfDoc = await transaction.get(sfDocRef);\r\n          if (!sfDoc.exists()) {\r\n            throw new Error('Document does not exist!');\r\n          }\r\n          const newWallet = sfDoc.data().wallet + Number(amount);\r\n          transaction.update(sfDocRef, { wallet: newWallet });\r\n        });\r\n        console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\r\n  \r\n        const deduct = async () => {\r\n          const user = auth.currentUser.uid;\r\n          if (user) {\r\n            const uid = user;\r\n            try {\r\n              await runTransaction(db, async (transaction) => {\r\n                const userRef = firebase.firestore().collection('users').doc(uid);\r\n                const sf = await transaction.get(userRef);\r\n                if (!sf.exists) {\r\n                  throw new Error('Document does not exist!');\r\n                }\r\n                const deductedWallet = sf.data().wallet - Number(amount);\r\n                setShowSuccessAlert(true); // Show the success alert\r\n                transaction.update(userRef, {\r\n                  wallet: deductedWallet,\r\n                });\r\n                console.log('Successfully sent â‚±' + Number(amount) + ' to ' + recipientEmail);\r\n              });\r\n            } catch (error) {\r\n              alert('Error updating wallet:', error);\r\n              console.error('Error updating wallet:', error);\r\n            } finally {\r\n              setShowProgressAlert(false); // Hide the progress alert\r\n            }\r\n          }\r\n        };\r\n        await deduct();\r\n        const user = auth.currentUser.uid;\r\n        if (user) {\r\n          const uid = user;\r\n          const SenderEmail = auth.currentUser.email;\r\n          const newTransactions = async () => {\r\n            await addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\r\n              transactions: amount,\r\n              Timestamp: new Date(),\r\n              ReceiverUid: recipientUid,\r\n              ReceiverEmail: recipientEmail,\r\n            });\r\n          };\r\n          await newTransactions();\r\n\r\n          const sentHisNote = async () => {\r\n            const sentRef = collection(db, 'users', uid, \"notes\", \"messages\", \"sentMessages\"); // Reference to the \"Notes\" collection\r\n            await addDoc(sentRef, {\r\n              transactions: amount,\r\n              Timestamp: new Date(),\r\n              ReceiverUid: recipientUid,\r\n              ReceiverEmail: recipientEmail,\r\n              Note: note, // Add the note value to the document\r\n            });\r\n          };\r\n          await sentHisNote();\r\n  \r\n          const receivedHisNote = async () => {\r\n            const receivedRef = collection(db, 'users', recipientUid, \"notes\", \"messages\", \"receivedMessages\"); // Reference to the \"Notes\" collection\r\n            await addDoc(receivedRef, {\r\n              transactions: amount,\r\n              Timestamp: new Date(),\r\n              Sender: uid,\r\n              SenderEmail: SenderEmail,\r\n              Note: note, // Add the note value to the document\r\n            });\r\n          };\r\n          await receivedHisNote();\r\n  \r\n          const receivedHis = async () => {\r\n            await addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\r\n              transactions: amount,\r\n              Timestamp: new Date(),\r\n              Sender: uid,\r\n              SenderEmail: SenderEmail,\r\n            });\r\n          };\r\n          await receivedHis();\r\n             // Check if the recipient's email is already in the recent contacts list\r\n        const isRecipientInContacts = recentContacts.includes(recipientEmail);\r\n        if (!isRecipientInContacts) {\r\n          const updatedContacts = [recipientEmail, ...recentContacts.slice(0, 4)];\r\n          setRecentContacts(updatedContacts);\r\n        }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error transferring funds:', error);\r\n      }\r\n    }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n          const uid = user.uid;\r\n          setEmail(user.email);\r\n  \r\n          const getWallet = async () => {\r\n            const docRef = doc(db, 'users', uid);\r\n            const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n              if (docSnap.exists()) {\r\n                console.log('Document data:', docSnap.data());\r\n                const data = docSnap.data();\r\n                setUserInfo(data);\r\n              } else {\r\n                console.log('No such document!');\r\n              }\r\n            });\r\n  \r\n            return unsubscribe;\r\n          };\r\n  \r\n          const unsubscribe = getWallet();\r\n  \r\n          return () =>{\r\n            unsubscribe();\r\n          };\r\n        } else {\r\n          navigation.navigate('Login');\r\n        }\r\n      });\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      loadRecentTransactions();\r\n      setRecipientEmail(scannedData);\r\n    }, []);\r\n\r\n    const handleAmountClick = (selectedAmount) => {\r\n      setAmount(selectedAmount);\r\n      setSelectedAmount(selectedAmount);\r\n    };\r\n    \r\n\r\n  return (\r\n\r\n<KeyboardAwareScrollView\r\n  contentContainerStyle={styles.scrollContainer}\r\n  enableOnAndroid\r\n  extraScrollHeight={Platform.OS === 'ios' ? 20 : 0}\r\n>\r\n    <View style={styles.container}>\r\n      <View style={styles.purpleContainer}>\r\n        <Text style={styles.totalBalanceText}>Total balance</Text>\r\n        <Text style={styles.purpleContainerText}>â‚± {userInfo.wallet ? userInfo.wallet.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : '0.00'}</Text>\r\n      </View>\r\n\r\n      <View style={styles.recentContactsContainer}>\r\n            <Text style={styles.recentContactsText}>Recent Contacts:</Text>\r\n            <ScrollView\r\n              horizontal\r\n              showsHorizontalScrollIndicator = {false} \r\n            >\r\n            <View style={styles.recentContactsRow}>\r\n            \r\n            {recentContacts.map((contact, index) => (\r\n             <TouchableOpacity key={index} onPress={() => setRecipientEmail(contact)} style={styles.contactsContainer}>\r\n             <View style={styles.contactIconContainer}>\r\n               <Ionicons name=\"person-circle-outline\" size={24} color=\"white\" />\r\n               <Text style={styles.recentContactText}>{contact}</Text>\r\n             </View>\r\n           </TouchableOpacity>\r\n            ))}\r\n            </View>\r\n            </ScrollView>\r\n      </View>\r\n\r\n     \r\n      <View style={{flexDirection:'row', padding: 10, marginTop: 10}}>\r\n        <Text style={{color: '#fff', fontFamily: FontFamily.poppinsMedium}}>Recipient: </Text>\r\n        <Text style={{color: 'rgba(255, 255, 255, 0.15)'}}> *input email</Text>\r\n      </View>\r\n      <View style={{justifyContent: 'center', alignItems:'center'}}>\r\n      <View style={{flexDirection: 'row'}}>\r\n        <View style={styles.pesoContainer}>\r\n          <Ionicons style={styles.personIcon} name=\"person\" size={30}/>\r\n        </View>\r\n        <View style={{alignItems: 'center', justifyContent: 'center'}}>\r\n        <TextInput\r\n          placeholder=\"Input Recipient's Email: \"\r\n          placeholderTextColor={Color.gray_500}\r\n          style={styles.input}\r\n          value={recipientEmail}\r\n          onChangeText={setRecipientEmail}\r\n        />\r\n        </View>\r\n      </View>\r\n      </View>\r\n      \r\n      <View style={{flexDirection:'row', padding: 10}}>\r\n        <Text style={{color: '#fff', fontFamily: FontFamily.poppinsMedium}}>Amount</Text>\r\n        <Text style={{color: 'rgba(255, 255, 255, 0.15)'}}> *insert amount (min â‚±5.00)</Text>\r\n      </View>\r\n      <View style={{justifyContent: 'center', alignItems:'center'}}>\r\n      <View style={{flexDirection: 'row'}}>\r\n        <View style={styles.pesoContainer}>\r\n          <Text style={styles.pesoText}>â‚±</Text>\r\n        </View>\r\n        <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n        <TextInput\r\n          style={styles.input}\r\n          keyboardType=\"number-pad\"\r\n          value={amount}\r\n          onChangeText={text => {\r\n            setAmount(text.replace(/[^0-9.]/g, ''));\r\n            setAmountError(false); // Reset the error state when the value changes\r\n          }}\r\n        />\r\n        </View>\r\n      </View>\r\n      </View>\r\n      {amountError && (<Text style={styles.errorText}>Amount should be at least â‚±5.00</Text>)}\r\n\r\n      <View style={{flexDirection: 'row', justifyContent: 'center', alignItems: 'center', paddingHorizontal: 10}}>\r\n      <TouchableOpacity\r\n  style={[\r\n    styles.optionsContainer,\r\n    selectedAmount === '50' && {\r\n      backgroundColor: '#7B61FF',\r\n      borderColor: '#7B61FF',\r\n    },\r\n  ]}\r\n  onPress={() => handleAmountClick('50')}\r\n>\r\n  <Text\r\n    style={[\r\n      styles.optionsText,\r\n      selectedAmount === '50' && { color: '#fff' },\r\n    ]}\r\n  >\r\n    â‚±50\r\n  </Text>\r\n</TouchableOpacity>\r\n<TouchableOpacity\r\n  style={[\r\n    styles.optionsContainer,\r\n    selectedAmount === '100' && {\r\n      backgroundColor: '#7B61FF',\r\n      borderColor: '#7B61FF',\r\n    },\r\n  ]}\r\n  onPress={() => handleAmountClick('100')}\r\n>\r\n  <Text\r\n    style={[\r\n      styles.optionsText,\r\n      selectedAmount === '100' && { color: '#fff' },\r\n    ]}\r\n  >\r\n    â‚±100\r\n  </Text>\r\n</TouchableOpacity>\r\n<TouchableOpacity\r\n  style={[\r\n    styles.optionsContainer,\r\n    selectedAmount === '150' && {\r\n      backgroundColor: '#7B61FF',\r\n      borderColor: '#7B61FF',\r\n    },\r\n  ]}\r\n  onPress={() => handleAmountClick('150')}\r\n>\r\n  <Text\r\n    style={[\r\n      styles.optionsText,\r\n      selectedAmount === '150' && { color: '#fff' },\r\n    ]}\r\n  >\r\n    â‚±150\r\n  </Text>\r\n</TouchableOpacity>\r\n<TouchableOpacity\r\n  style={[\r\n    styles.optionsContainer,\r\n    selectedAmount === '200' && {\r\n      backgroundColor: '#7B61FF',\r\n      borderColor: '#7B61FF',\r\n    },\r\n  ]}\r\n  onPress={() => handleAmountClick('200')}\r\n>\r\n  <Text\r\n    style={[\r\n      styles.optionsText,\r\n      selectedAmount === '200' && { color: '#fff' },\r\n    ]}\r\n  >\r\n    â‚±200\r\n  </Text>\r\n</TouchableOpacity>\r\n\r\n      </View>\r\n\r\n\r\n      <View style={{flexDirection:'row', padding: 10}}>\r\n        <Text style={{color: '#fff', fontFamily: FontFamily.poppinsMedium}}>PIN </Text>\r\n        <Text style={{color: 'rgba(255, 255, 255, 0.15)'}}> *input PIN</Text>\r\n      </View>\r\n      <View style={{justifyContent: 'center', alignItems:'center'}}>\r\n      <View style={{flexDirection: 'row'}}>\r\n        <View style={styles.pesoContainer}>\r\n          <MaterialCommunityIcons style={styles.personIcon} name=\"form-textbox-password\" size={30}/>\r\n        </View>\r\n        <View style={{alignItems: 'flex-start', justifyContent: 'flex-start'}}>\r\n        <TextInput\r\n          placeholder=\"Enter PIN\"\r\n          placeholderTextColor={Color.gray_500}\r\n          secureTextEntry\r\n          keyboardType=\"numeric\"\r\n          style={styles.input}\r\n          value={ConfirmPassword}\r\n          maxLength={6}\r\n          onChangeText={(text) => {\r\n            const numericValue = text.replace(/[^0-9]/g, '');\r\n            setPassword(numericValue);\r\n          }}\r\n        />\r\n        </View>\r\n      </View>\r\n      </View>\r\n\r\n      <View style={{flexDirection:'row', padding: 10, marginTop: 10}}>\r\n        <Text style={{color: '#fff', fontFamily: FontFamily.poppinsMedium}}>Notes</Text>\r\n        <Text style={{color: 'rgba(255, 255, 255, 0.15)'}}> *optional</Text>\r\n      </View>\r\n\r\n      <View>\r\n      <TextInput\r\n        style={styles.notesContainer}\r\n        placeholder=\"Your notes here .......\"\r\n        placeholderTextColor={Color.gray_400}\r\n        color={'#fff'}\r\n        fontFamily={FontFamily.poppinsMedium}\r\n        fontSize={15}\r\n        value={note}\r\n        onChangeText={setNote}\r\n        \r\n      />\r\n\r\n      </View>\r\n\r\n      <TouchableOpacity\r\n          style={styles.transferButton}\r\n          onPress={ConfirmPin}\r\n        >\r\n          <Text style={styles.transferText}>Send</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n          style={styles.transferButton}\r\n          onPress={backButton}\r\n        >\r\n          <Text style={styles.transferText}>back</Text>\r\n      </TouchableOpacity>\r\n      \r\n    </View>\r\n      <AwesomeAlert\r\n        show={showProgressAlert}\r\n        showProgress={true}\r\n        title=\"Sending\"\r\n        message=\"Please wait...\"\r\n        closeOnTouchOutside={true}\r\n        closeOnHardwareBackPress={false}\r\n        showCancelButton={false}\r\n        showConfirmButton={false}\r\n        contentContainerStyle={styles.progressAlertContent}\r\n        progressSize={40}\r\n        progressColor=\"#7B61FF\"\r\n      />\r\n      \r\n\r\n    <AwesomeAlert\r\n        show={showSuccessAlert}\r\n        title=\"Transfer Success!\"\r\n        message={`You just sent â‚±${Number(amount)} to ${recipientEmail}\\n\\nNotes: ${note}`}\r\n        closeOnTouchOutside={false}\r\n        closeOnHardwareBackPress={false}\r\n        showCancelButton={false}\r\n        showConfirmButton={true}\r\n        confirmText=\"OK\"\r\n        confirmButtonColor=\"#7B61FF\"\r\n        confirmButtonStyle={{backgroundColor: Color.sUNRISECoral}}\r\n        confirmButtonTextStyle={styles.buttonText}\r\n        onConfirmPressed={() => {\r\n           setShowSuccessAlert(false);\r\n           navigation.navigate(\"Main\");\r\n          }\r\n        }\r\n        contentContainerStyle={styles.successAlertContent}\r\n      />\r\n    </KeyboardAwareScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'flex-start',\r\n    backgroundColor: Color.blackModePrimaryDark,\r\n    paddingHorizontal: 10\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n    backgroundColor: Color.blackModePrimaryDark,\r\n    marginBottom: 0,\r\n   \r\n  },\r\n  backIcon:{\r\n    width: 70,\r\n    height: 50,\r\n    color: Color.gray_700\r\n  },\r\n  backImgContainer:{\r\n    padding: 5,\r\n  },\r\n  purpleContainer:{\r\n    marginTop: 15,\r\n    alignItems: 'center',\r\n    backgroundColor: '#7B61FF',\r\n    borderRadius: 38,\r\n    borderColor: Color.gray_100,\r\n    borderWidth: 1\r\n  },\r\n  purpleContainerText:{\r\n    color: '#fff',\r\n    fontSize: 45,\r\n    fontFamily: FontFamily.poppinsMedium\r\n  },\r\n  totalBalanceText:{\r\n    color: '#C9C9C9',\r\n    marginTop: 10, \r\n    fontSize: 15, \r\n    fontFamily: FontFamily.poppinsMedium\r\n  },\r\n  recentContactsContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  contactsContainer:{\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    borderColor: Color.gray_400,\r\n    borderWidth: 2,\r\n    borderRadius: 15,\r\n    fontFamily: FontFamily.poppinsMedium,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n    color: '#fff',\r\n    fontSize: 10,\r\n    width: 250,\r\n    height: 30,\r\n    paddingHorizontal: 10,\r\n    marginLeft: 5\r\n  },\r\n  recentContactsRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  contactIconContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginRight: 10,\r\n  },\r\n  recentContactText: {\r\n    fontSize: 14,\r\n    color: '#fff',\r\n    marginBottom: 3,\r\n  },\r\n  recentContactsText: {\r\n    fontSize: 15,\r\n    color: '#fff',\r\n    marginBottom: 5,\r\n    padding: 10,\r\n    fontFamily: FontFamily.poppinsBold\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderColor: Color.gray_400,\r\n    borderWidth: 2,\r\n    borderTopRightRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n    fontFamily: FontFamily.poppinsMedium,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n    color: '#fff',\r\n    fontSize: 20,\r\n    width: 290,\r\n    height: 50,\r\n    paddingHorizontal: 15\r\n  },\r\n  pesoContainer:{\r\n    borderTopLeftRadius: 15,\r\n    borderBottomLeftRadius: 15,\r\n    borderColor: Color.gray_400,\r\n    borderWidth: 2,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n    height: 50,\r\n    width: 50\r\n  },\r\n  personIcon:{\r\n    color: '#7B61FF',\r\n    padding: 10\r\n  },\r\n  pesoText:{\r\n    color: '#7B61FF',\r\n    marginLeft: 15,\r\n    fontSize: 30\r\n  },\r\n  optionsContainer:{\r\n    alignItems:'center',\r\n    margin: 10,\r\n    backgroundColor: 'rgba(255, 255, 255, 0)',\r\n    borderRadius: 8,\r\n    borderWidth: 1,\r\n    borderColor: Color.gray_400,\r\n    padding: 3,\r\n    width: '20%'\r\n  },\r\n  optionsText:{\r\n    fontSize: 25,\r\n    color: Color.gray_500\r\n  },\r\n  errorText: {\r\n    color: '#d65047',\r\n    fontSize: 12,\r\n    marginTop: 5,\r\n  },\r\n  notesContainer:{\r\n    backgroundColor: 'rgba(255, 255, 255, 0)',\r\n    borderRadius: 8,\r\n    borderWidth: 1,\r\n    borderColor: Color.gray_400,\r\n    padding: 10,\r\n  },\r\n  transferButton:{\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginHorizontal: 80,\r\n    backgroundColor: \"#7B61FF\",\r\n    paddingVertical: 5,\r\n    borderRadius: 10,\r\n    marginTop: 15,\r\n  },\r\n  transferText:{\r\n    fontFamily: FontFamily.poppinsMedium,\r\n    fontSize: 20,\r\n    color: '#fff'\r\n  },\r\n  buttonText: {\r\n    color: Color.gray_700,\r\n    fontFamily: FontFamily.poppinsBold,\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center'\r\n  },\r\n});\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}