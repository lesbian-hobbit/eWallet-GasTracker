{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { SecurityLevel } from \"./LocalAuthentication.types\";\nexport default {\n  get name() {\n    return 'ExpoLocalAuthentication';\n  },\n  hasHardwareAsync: function () {\n    var _hasHardwareAsync = _asyncToGenerator(function* () {\n      return false;\n    });\n    function hasHardwareAsync() {\n      return _hasHardwareAsync.apply(this, arguments);\n    }\n    return hasHardwareAsync;\n  }(),\n  isEnrolledAsync: function () {\n    var _isEnrolledAsync = _asyncToGenerator(function* () {\n      return false;\n    });\n    function isEnrolledAsync() {\n      return _isEnrolledAsync.apply(this, arguments);\n    }\n    return isEnrolledAsync;\n  }(),\n  getEnrolledLevelAsync: function () {\n    var _getEnrolledLevelAsync = _asyncToGenerator(function* () {\n      return SecurityLevel.NONE;\n    });\n    function getEnrolledLevelAsync() {\n      return _getEnrolledLevelAsync.apply(this, arguments);\n    }\n    return getEnrolledLevelAsync;\n  }(),\n  supportedAuthenticationTypesAsync: function () {\n    var _supportedAuthenticationTypesAsync = _asyncToGenerator(function* () {\n      return [];\n    });\n    function supportedAuthenticationTypesAsync() {\n      return _supportedAuthenticationTypesAsync.apply(this, arguments);\n    }\n    return supportedAuthenticationTypesAsync;\n  }()\n};","map":{"version":3,"names":["SecurityLevel","name","hasHardwareAsync","_hasHardwareAsync","_asyncToGenerator","apply","arguments","isEnrolledAsync","_isEnrolledAsync","getEnrolledLevelAsync","_getEnrolledLevelAsync","NONE","supportedAuthenticationTypesAsync","_supportedAuthenticationTypesAsync"],"sources":["C:\\Users\\User\\Pictures\\E-Wallet-Project\\node_modules\\expo-local-authentication\\src\\ExpoLocalAuthentication.web.ts"],"sourcesContent":["import { AuthenticationType, SecurityLevel } from './LocalAuthentication.types';\n\nexport default {\n  get name(): string {\n    return 'ExpoLocalAuthentication';\n  },\n  async hasHardwareAsync(): Promise<boolean> {\n    return false;\n  },\n  async isEnrolledAsync(): Promise<boolean> {\n    return false;\n  },\n  async getEnrolledLevelAsync(): Promise<SecurityLevel> {\n    return SecurityLevel.NONE;\n  },\n  async supportedAuthenticationTypesAsync(): Promise<AuthenticationType[]> {\n    return [];\n  },\n};\n"],"mappings":";AAAA,SAA6BA,aAAa;AAE1C,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,yBAAyB;EAClC,CAAC;EACKC,gBAAgB;IAAA,IAAAC,iBAAA,GAAAC,iBAAA;MACpB,OAAO,KAAK;IACd,CAAC;IAAA,SAAAF,iBAAA;MAAA,OAAAC,iBAAA,CAAAE,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAJ,gBAAA;EAAA;EACKK,eAAe;IAAA,IAAAC,gBAAA,GAAAJ,iBAAA;MACnB,OAAO,KAAK;IACd,CAAC;IAAA,SAAAG,gBAAA;MAAA,OAAAC,gBAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,eAAA;EAAA;EACKE,qBAAqB;IAAA,IAAAC,sBAAA,GAAAN,iBAAA;MACzB,OAAOJ,aAAa,CAACW,IAAI;IAC3B,CAAC;IAAA,SAAAF,sBAAA;MAAA,OAAAC,sBAAA,CAAAL,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAG,qBAAA;EAAA;EACKG,iCAAiC;IAAA,IAAAC,kCAAA,GAAAT,iBAAA;MACrC,OAAO,EAAE;IACX,CAAC;IAAA,SAAAQ,kCAAA;MAAA,OAAAC,kCAAA,CAAAR,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAM,iCAAA;EAAA;CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}