{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport MainDashboard from \"./screens/MainDashboard\";\nimport SendCash from \"./screens/SendCash\";\nimport ScanQR from \"./screens/ScanQR\";\nimport EditProfile from \"./screens/EditProfile\";\nimport Currency from \"./screens/Currency\";\nimport Registrationpage from \"./screens/Registrationpage\";\nimport Logs from \"./screens/Logs\";\nimport ReceiveLogs from \"./screens/ReceiveLogs\";\nimport GetStarted from \"./screens/GetStarted\";\nimport Profile from \"./screens/Profile\";\nimport Notifications from \"./screens/Notifications\";\nimport { useFonts } from 'expo-font';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { AppProvider } from \"./AppContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hideSplashScreen = _React$useState2[0],\n    setHideSplashScreen = _React$useState2[1];\n  var _useFonts = useFonts({\n      Poppins_regular: require(\"./assets/fonts/Poppins_regular.ttf\"),\n      Poppins_medium: require(\"./assets/fonts/Poppins_medium.ttf\"),\n      Poppins_semibold: require(\"./assets/fonts/Poppins_semibold.ttf\"),\n      Poppins_bold: require(\"./assets/fonts/Poppins_bold.ttf\"),\n      Lato_regular: require(\"./assets/fonts/Lato_regular.ttf\"),\n      Lato_semibold: require(\"./assets/fonts/Lato_semibold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 2),\n    fontsLoaded = _useFonts2[0],\n    error = _useFonts2[1];\n  if (!fontsLoaded && !error) {\n    return null;\n  }\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsx(AppProvider, {\n        children: hideSplashScreen ? _jsxs(Stack.Navigator, {\n          children: [_jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"GetStarted\",\n            component: GetStarted\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Login\",\n            component: LoginScreen\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Main\",\n            component: MainDashboard\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Send\",\n            component: SendCash\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"ScanQR\",\n            component: ScanQR\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"EditProfile\",\n            component: EditProfile\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Currency\",\n            component: Currency\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Registrationpage\",\n            component: Registrationpage\n          }), _jsx(Stack.Screen, {\n            name: \"Logs\",\n            component: Logs\n          }), _jsx(Stack.Screen, {\n            name: \"ReceiveLogs\",\n            component: ReceiveLogs\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Profile\",\n            component: Profile\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Notifications\",\n            component: Notifications\n          })]\n        }) : null\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","LoginScreen","MainDashboard","SendCash","ScanQR","EditProfile","Currency","Registrationpage","Logs","ReceiveLogs","GetStarted","Profile","Notifications","useFonts","SafeAreaProvider","AppProvider","jsx","_jsx","jsxs","_jsxs","Stack","App","_React$useState","useState","_React$useState2","_slicedToArray","hideSplashScreen","setHideSplashScreen","_useFonts","Poppins_regular","require","Poppins_medium","Poppins_semibold","Poppins_bold","Lato_regular","Lato_semibold","_useFonts2","fontsLoaded","error","children","Navigator","Screen","options","headerShown","name","component","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/User/Pictures/E-Wallet-Project/App.js"],"sourcesContent":["import { StyleSheet} from 'react-native';\r\nimport React from 'react'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport MainDashboard from './screens/MainDashboard';\r\nimport SendCash from './screens/SendCash';\r\nimport ScanQR from './screens/ScanQR';\r\nimport EditProfile from './screens/EditProfile';\r\nimport Currency from './screens/Currency';\r\nimport Registrationpage from './screens/Registrationpage';\r\nimport Logs from './screens/Logs';\r\nimport ReceiveLogs from './screens/ReceiveLogs';\r\nimport GetStarted from './screens/GetStarted';\r\nimport Profile from './screens/Profile';\r\nimport Notifications from './screens/Notifications';\r\nimport { useFonts } from 'expo-font';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { AppProvider } from './AppContext';\r\n\r\n\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n    const [hideSplashScreen, setHideSplashScreen] = React.useState(true);\r\n    const [fontsLoaded, error] = useFonts({\r\n    Poppins_regular: require(\"./assets/fonts/Poppins_regular.ttf\"),\r\n    Poppins_medium: require(\"./assets/fonts/Poppins_medium.ttf\"),\r\n    Poppins_semibold: require(\"./assets/fonts/Poppins_semibold.ttf\"),\r\n    Poppins_bold: require(\"./assets/fonts/Poppins_bold.ttf\"),\r\n    Lato_regular: require(\"./assets/fonts/Lato_regular.ttf\"),\r\n    Lato_semibold: require(\"./assets/fonts/Lato_semibold.ttf\"),\r\n  });\r\n  if (!fontsLoaded && !error) {\r\n    return null;\r\n  }\r\n  return (\r\n    <SafeAreaProvider>\r\n    <NavigationContainer>\r\n    <AppProvider>\r\n      {hideSplashScreen ? ( \r\n      <Stack.Navigator>\r\n        <Stack.Screen options = {{headerShown: false}} name=\"GetStarted\" component={GetStarted} /> \r\n        <Stack.Screen options = {{headerShown: false}} name=\"Login\" component={LoginScreen} />\r\n        <Stack.Screen options = {{headerShown: false}} name=\"Main\" component={MainDashboard}/>\r\n        <Stack.Screen options = {{headerShown: false}} name=\"Send\" component={SendCash}/>\r\n        <Stack.Screen options = {{headerShown: false}} name=\"ScanQR\" component={ScanQR}/>\r\n        <Stack.Screen options = {{headerShown: false}} name=\"EditProfile\" component={EditProfile}/>\r\n        <Stack.Screen options = {{headerShown: false}} name=\"Currency\" component={Currency}/>\r\n        <Stack.Screen options = {{headerShown: false}} name=\"Registrationpage\" component={Registrationpage}/>\r\n        <Stack.Screen name=\"Logs\" component={Logs}/>\r\n        <Stack.Screen name=\"ReceiveLogs\" component={ReceiveLogs}/>\r\n        <Stack.Screen options = {{headerShown: false}} name=\"Profile\" component={Profile}/>\r\n        <Stack.Screen options = {{headerShown: false}} name=\"Notifications\" component={Notifications}/>\r\n      </Stack.Navigator>\r\n       ) : null}\r\n        </AppProvider>\r\n    </NavigationContainer>\r\n    </SafeAreaProvider>\r\n  );\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}