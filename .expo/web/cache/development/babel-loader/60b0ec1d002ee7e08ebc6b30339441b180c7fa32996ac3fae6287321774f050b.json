{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, doc, getDocs, setDoc, addDoc, Timestamp } from \"firebase/firestore\";\nimport { auth, db, firebase } from \"../firebase\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { sendSMSAsync } from 'expo-sms';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Dashboard = function Dashboard(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(5000),\n    _useState2 = _slicedToArray(_useState, 2),\n    balance = _useState2[0],\n    setBalance = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setUserInfo = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    transactions = _useState8[0],\n    setTransactions = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    fullname = _useState10[0],\n    setName = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    recipientEmail = _useState12[0],\n    setRecipientEmail = _useState12[1];\n  var _useState13 = useState(),\n    _useState14 = _slicedToArray(_useState13, 2),\n    amount = _useState14[0],\n    setAmount = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    recentContacts = _useState16[0],\n    setRecentContacts = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    otp = _useState18[0],\n    setOTP = _useState18[1];\n  var saveDataToStorage = function () {\n    var _ref2 = _asyncToGenerator(function* (recipientEmail, recentContacts) {\n      try {\n        var data = JSON.stringify({\n          recipientEmail: recipientEmail,\n          recentContacts: recentContacts\n        });\n        yield AsyncStorage.setItem('userData', data);\n        console.log('Data saved to AsyncStorage');\n      } catch (error) {\n        console.log('Error saving data to AsyncStorage:', error);\n      }\n    });\n    return function saveDataToStorage(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loadDataFromStorage = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var data = yield AsyncStorage.getItem('userData');\n        if (data) {\n          var _JSON$parse = JSON.parse(data),\n            _recipientEmail = _JSON$parse.recipientEmail,\n            _recentContacts = _JSON$parse.recentContacts;\n          setRecipientEmail(_recipientEmail);\n          setRecentContacts(_recentContacts);\n          console.log('Data loaded from AsyncStorage');\n        }\n      } catch (error) {\n        console.log('Error loading data from AsyncStorage:', error);\n      }\n    });\n    return function loadDataFromStorage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadDataFromStorage();\n  }, []);\n  useEffect(function () {\n    saveDataToStorage(recipientEmail, recentContacts);\n  }, [recipientEmail, recentContacts]);\n  var generateOTP = function generateOTP() {\n    var digits = '0123456789';\n    var OTP = '';\n    for (var i = 0; i < 4; i++) {\n      OTP += digits[Math.floor(Math.random() * 10)];\n    }\n    setOTP(OTP);\n  };\n  var sendSMS = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        if (otp === '') {\n          console.log('Please generate and enter the OTP');\n          return;\n        }\n        var message = \"Your verification code is: \" + otp;\n        var recipients = [];\n        var _yield$sendSMSAsync = yield sendSMSAsync({\n            recipients: recipients,\n            message: message\n          }),\n          result = _yield$sendSMSAsync.result;\n        if (result === 'sent') {\n          transferFunds();\n        } else {\n          console.log('SMS sending failed:', result);\n        }\n      } catch (error) {\n        console.error('Error sending SMS:', error);\n      }\n    });\n    return function sendSMS() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var getRecipientUid = function () {\n    var _ref5 = _asyncToGenerator(function* (email) {\n      var usersRef = collection(db, 'users');\n      var q = query(usersRef, where('email', '==', email));\n      var querySnapshot = yield getDocs(q);\n      if (!querySnapshot.empty) {\n        var recipient = querySnapshot.docs[0];\n        return recipient.id;\n      }\n      throw new Error('Recipient not found');\n    });\n    return function getRecipientUid(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var transferFunds = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var recipientUid = yield getRecipientUid(recipientEmail);\n        var sfDocRef = doc(db, 'users', recipientUid);\n        yield runTransaction(db, function () {\n          var _ref7 = _asyncToGenerator(function* (transaction) {\n            var sfDoc = yield transaction.get(sfDocRef);\n            if (!sfDoc.exists()) {\n              throw new Error('Document does not exist!');\n            }\n            var newWallet = sfDoc.data().wallet + Number(amount);\n            transaction.update(sfDocRef, {\n              wallet: newWallet\n            });\n          });\n          return function (_x4) {\n            return _ref7.apply(this, arguments);\n          };\n        }());\n        console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\n        var deduct = function () {\n          var _ref8 = _asyncToGenerator(function* () {\n            var user = auth.currentUser.uid;\n            if (user) {\n              var uid = user;\n              try {\n                yield runTransaction(db, function () {\n                  var _ref9 = _asyncToGenerator(function* (transaction) {\n                    var userRef = firebase.firestore().collection('users').doc(uid);\n                    var sf = yield transaction.get(userRef);\n                    if (!sf.exists) {\n                      throw new Error('Document does not exist!');\n                    }\n                    var deductedWallet = sf.data().wallet - Number(amount);\n                    transaction.update(userRef, {\n                      wallet: deductedWallet\n                    });\n                    alert('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\n                    console.log('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\n                  });\n                  return function (_x5) {\n                    return _ref9.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                alert('Error updating wallet:', error);\n                console.error('Error updating wallet:', error);\n              }\n            }\n          });\n          return function deduct() {\n            return _ref8.apply(this, arguments);\n          };\n        }();\n        yield deduct();\n        var user = auth.currentUser.uid;\n        if (user) {\n          var uid = user;\n          var SenderEmail = auth.currentUser.email;\n          var newTransactions = function () {\n            var _ref10 = _asyncToGenerator(function* () {\n              yield addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\n                transactions: amount,\n                Timestamp: new Date(),\n                ReceiverUid: recipientUid,\n                ReceiverEmail: recipientEmail\n              });\n            });\n            return function newTransactions() {\n              return _ref10.apply(this, arguments);\n            };\n          }();\n          yield newTransactions();\n          var recievedHis = function () {\n            var _ref11 = _asyncToGenerator(function* () {\n              yield addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\n                transactions: amount,\n                Timestamp: new Date(),\n                Sender: uid,\n                SenderEmail: SenderEmail\n              });\n            });\n            return function recievedHis() {\n              return _ref11.apply(this, arguments);\n            };\n          }();\n          yield recievedHis();\n          var updatedContacts = [recipientEmail].concat(_toConsumableArray(recentContacts.slice(0, 4)));\n          setRecentContacts(updatedContacts);\n          saveDataToStorage(recipientEmail, updatedContacts);\n        }\n      } catch (error) {\n        console.error('Error transferring funds:', error);\n      }\n    });\n    return function transferFunds() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        var uid = user.uid;\n        setEmail(user.email);\n        var getWallet = function () {\n          var _ref12 = _asyncToGenerator(function* () {\n            var docRef = doc(db, 'users', uid);\n            var unsubscribe = onSnapshot(docRef, function (docSnap) {\n              if (docSnap.exists()) {\n                console.log('Document data:', docSnap.data());\n                var data = docSnap.data();\n                setUserInfo(data);\n              } else {\n                console.log('No such document!');\n              }\n            });\n            return unsubscribe;\n          });\n          return function getWallet() {\n            return _ref12.apply(this, arguments);\n          };\n        }();\n        var unsubscribe = getWallet();\n        return function () {\n          unsubscribe();\n        };\n      } else {\n        navigation.navigate('Login');\n      }\n    });\n  }, []);\n  var handleTransferFunds = function handleTransferFunds() {\n    if (!recipientEmail || !amount) {\n      console.log('Please enter recipient email and amount');\n      return;\n    }\n    generateOTP();\n    sendSMS();\n  };\n  return _jsxs(ImageBackground, {\n    source: require(\"../assets/bg2.jpg\"),\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.headerContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.logoutButton,\n        onPress: function onPress() {\n          return signOut(auth);\n        },\n        children: _jsx(Ionicons, {\n          name: \"log-out\",\n          size: 24,\n          color: \"white\"\n        })\n      }), _jsxs(Text, {\n        style: styles.headerText,\n        children: [\"Hello, \", email]\n      })]\n    }), _jsxs(View, {\n      style: styles.balanceContainer,\n      children: [_jsx(Text, {\n        style: styles.balanceText,\n        children: \"Wallet Balance:\"\n      }), _jsxs(Text, {\n        style: styles.amountText,\n        children: [\"\\u20B1\", balance]\n      })]\n    }), _jsxs(View, {\n      style: styles.transferContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Recipient Email\",\n        onChangeText: function onChangeText(value) {\n          return setRecipientEmail(value);\n        },\n        value: recipientEmail\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Amount\",\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(value) {\n          return setAmount(value);\n        },\n        value: amount\n      }), _jsx(TouchableOpacity, {\n        style: styles.transferButton,\n        onPress: handleTransferFunds,\n        children: _jsx(Text, {\n          style: styles.transferButtonText,\n          children: \"Send Cash\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  headerContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: 40\n  },\n  logoutButton: {\n    position: \"absolute\",\n    left: 20,\n    top: 20\n  },\n  headerText: {\n    fontSize: 24,\n    color: \"white\"\n  },\n  balanceContainer: {\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  balanceText: {\n    fontSize: 18,\n    color: \"white\"\n  },\n  amountText: {\n    fontSize: 32,\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  transferContainer: {\n    alignItems: \"center\"\n  },\n  input: {\n    width: 250,\n    height: 40,\n    marginBottom: 20,\n    backgroundColor: \"white\",\n    paddingHorizontal: 10\n  },\n  transferButton: {\n    backgroundColor: \"green\",\n    padding: 10,\n    borderRadius: 5\n  },\n  transferButtonText: {\n    fontSize: 18,\n    color: \"white\"\n  }\n});\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","TextInput","ImageBackground","AsyncStorage","Ionicons","collection","query","where","onSnapshot","writeBatch","runTransaction","doc","getDocs","setDoc","addDoc","Timestamp","auth","db","firebase","onAuthStateChanged","signOut","sendSMSAsync","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","route","navigation","_useState","_useState2","_slicedToArray","balance","setBalance","_useState3","_useState4","email","setEmail","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","transactions","setTransactions","_useState9","_useState10","fullname","setName","_useState11","_useState12","recipientEmail","setRecipientEmail","_useState13","_useState14","amount","setAmount","_useState15","_useState16","recentContacts","setRecentContacts","_useState17","_useState18","otp","setOTP","saveDataToStorage","_ref2","_asyncToGenerator","data","JSON","stringify","setItem","console","log","error","_x","_x2","apply","arguments","loadDataFromStorage","_ref3","getItem","_JSON$parse","parse","generateOTP","digits","OTP","i","Math","floor","random","sendSMS","_ref4","message","recipients","_yield$sendSMSAsync","result","transferFunds","getRecipientUid","_ref5","usersRef","q","querySnapshot","empty","recipient","docs","id","Error","_x3","_ref6","recipientUid","sfDocRef","_ref7","transaction","sfDoc","get","exists","newWallet","wallet","Number","update","_x4","deduct","_ref8","user","currentUser","uid","_ref9","userRef","firestore","sf","deductedWallet","alert","_x5","SenderEmail","newTransactions","_ref10","Date","ReceiverUid","ReceiverEmail","recievedHis","_ref11","Sender","updatedContacts","concat","_toConsumableArray","slice","getWallet","_ref12","docRef","unsubscribe","docSnap","navigate","handleTransferFunds","source","require","style","styles","container","children","headerContainer","logoutButton","onPress","name","size","color","headerText","balanceContainer","balanceText","amountText","transferContainer","input","placeholder","onChangeText","value","keyboardType","transferButton","transferButtonText","create","flex","alignItems","justifyContent","flexDirection","marginBottom","position","left","top","fontSize","fontWeight","width","height","backgroundColor","paddingHorizontal","padding","borderRadius"],"sources":["C:/Users/User/E-wallet-GasTracker/screens/SendCash.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, ImageBackground } from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, doc, getDocs, setDoc, addDoc, Timestamp } from \"firebase/firestore\";\r\nimport { auth, db, firebase } from \"../firebase\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport { sendSMSAsync } from 'expo-sms';\r\n\r\nconst Dashboard = ({ route, navigation }) => {\r\n  const [balance, setBalance] = useState(5000); // Initial balance\r\n  const [email, setEmail] = useState();\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [transactions, setTransactions] = useState();\r\n  const [fullname, setName] = useState();\r\n  const [recipientEmail, setRecipientEmail] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [recentContacts, setRecentContacts] = useState([]);\r\n  const [otp, setOTP] = useState('');\r\n\r\n  const saveDataToStorage = async (recipientEmail, recentContacts) => {\r\n    try {\r\n      const data = JSON.stringify({ recipientEmail, recentContacts });\r\n      await AsyncStorage.setItem('userData', data);\r\n      console.log('Data saved to AsyncStorage');\r\n    } catch (error) {\r\n      console.log('Error saving data to AsyncStorage:', error);\r\n    }\r\n  };\r\n\r\n  const loadDataFromStorage = async () => {\r\n    try {\r\n      const data = await AsyncStorage.getItem('userData');\r\n      if (data) {\r\n        const { recipientEmail, recentContacts } = JSON.parse(data);\r\n        setRecipientEmail(recipientEmail);\r\n        setRecentContacts(recentContacts);\r\n        console.log('Data loaded from AsyncStorage');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error loading data from AsyncStorage:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataFromStorage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveDataToStorage(recipientEmail, recentContacts);\r\n  }, [recipientEmail, recentContacts]);\r\n\r\n  const generateOTP = () => {\r\n    const digits = '0123456789';\r\n    let OTP = '';\r\n    for (let i = 0; i < 4; i++) {\r\n      OTP += digits[Math.floor(Math.random() * 10)];\r\n    }\r\n    setOTP(OTP);\r\n  };\r\n\r\n  const sendSMS = async () => {\r\n    try {\r\n      if (otp === '') {\r\n        console.log('Please generate and enter the OTP');\r\n        // TODO: Add your error handling logic here\r\n        return;\r\n      }\r\n\r\n      const message = `Your verification code is: ${otp}`;\r\n      const recipients = [/* Recipient phone number */];\r\n\r\n      const { result } = await sendSMSAsync({ recipients, message });\r\n\r\n      if (result === 'sent') {\r\n        transferFunds();\r\n      } else {\r\n        console.log('SMS sending failed:', result);\r\n        // TODO: Add your error handling logic here\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending SMS:', error);\r\n      // TODO: Add your error handling logic here\r\n    }\r\n  };\r\n\r\n  const getRecipientUid = async (email) => {\r\n    const usersRef = collection(db, 'users');\r\n    const q = query(usersRef, where('email', '==', email));\r\n    const querySnapshot = await getDocs(q);\r\n    if (!querySnapshot.empty) {\r\n      const recipient = querySnapshot.docs[0];\r\n      return recipient.id;\r\n    }\r\n    throw new Error('Recipient not found');\r\n  };\r\n\r\n  const transferFunds = async () => {\r\n    try {\r\n      const recipientUid = await getRecipientUid(recipientEmail);\r\n\r\n      const sfDocRef = doc(db, 'users', recipientUid);\r\n\r\n      await runTransaction(db, async (transaction) => {\r\n        const sfDoc = await transaction.get(sfDocRef);\r\n        if (!sfDoc.exists()) {\r\n          throw new Error('Document does not exist!');\r\n        }\r\n        const newWallet = sfDoc.data().wallet + Number(amount);\r\n        transaction.update(sfDocRef, { wallet: newWallet });\r\n      });\r\n      console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\r\n\r\n      const deduct = async () => {\r\n        const user = auth.currentUser.uid;\r\n        if (user) {\r\n          const uid = user;\r\n          try {\r\n            await runTransaction(db, async (transaction) => {\r\n              const userRef = firebase.firestore().collection('users').doc(uid);\r\n              const sf = await transaction.get(userRef);\r\n              if (!sf.exists) {\r\n                throw new Error('Document does not exist!');\r\n              }\r\n              const deductedWallet = sf.data().wallet - Number(amount);\r\n              transaction.update(userRef, {\r\n                wallet: deductedWallet,\r\n              });\r\n              alert('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\r\n              console.log('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\r\n            });\r\n          } catch (error) {\r\n            alert('Error updating wallet:', error);\r\n            console.error('Error updating wallet:', error);\r\n          }\r\n        }\r\n      };\r\n      await deduct();\r\n\r\n      const user = auth.currentUser.uid;\r\n      if (user) {\r\n        const uid = user;\r\n        const SenderEmail = auth.currentUser.email;\r\n        const newTransactions = async () => {\r\n          await addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\r\n            transactions: amount,\r\n            Timestamp: new Date(),\r\n            ReceiverUid: recipientUid,\r\n            ReceiverEmail: recipientEmail,\r\n          });\r\n        };\r\n        await newTransactions();\r\n\r\n        const recievedHis = async () => {\r\n          await addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\r\n            transactions: amount,\r\n            Timestamp: new Date(),\r\n            Sender: uid,\r\n            SenderEmail: SenderEmail,\r\n          });\r\n        };\r\n        await recievedHis();\r\n\r\n        const updatedContacts = [recipientEmail, ...recentContacts.slice(0, 4)];\r\n        setRecentContacts(updatedContacts);\r\n        saveDataToStorage(recipientEmail, updatedContacts);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error transferring funds:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        const uid = user.uid;\r\n        setEmail(user.email);\r\n\r\n        const getWallet = async () => {\r\n          const docRef = doc(db, 'users', uid);\r\n          const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n              console.log('Document data:', docSnap.data());\r\n              const data = docSnap.data();\r\n              setUserInfo(data);\r\n            } else {\r\n              console.log('No such document!');\r\n            }\r\n          });\r\n\r\n          return unsubscribe;\r\n        };\r\n\r\n        const unsubscribe = getWallet();\r\n\r\n        return () => {\r\n          unsubscribe();\r\n        };\r\n      } else {\r\n        navigation.navigate('Login');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleTransferFunds = () => {\r\n    if (!recipientEmail || !amount) {\r\n      console.log('Please enter recipient email and amount');\r\n      // TODO: Add your error handling logic here\r\n      return;\r\n    }\r\n\r\n    generateOTP();\r\n    sendSMS();\r\n  };\r\n\r\n  return (\r\n    <ImageBackground source={require('../assets/bg2.jpg')} style={styles.container}>\r\n      <View style={styles.headerContainer}>\r\n        <TouchableOpacity style={styles.logoutButton} onPress={() => signOut(auth)}>\r\n          <Ionicons name=\"log-out\" size={24} color=\"white\" />\r\n        </TouchableOpacity>\r\n        <Text style={styles.headerText}>Hello, {email}</Text>\r\n      </View>\r\n      <View style={styles.balanceContainer}>\r\n        <Text style={styles.balanceText}>Wallet Balance:</Text>\r\n        <Text style={styles.amountText}>₱{balance}</Text>\r\n      </View>\r\n      <View style={styles.transferContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Recipient Email\"\r\n          onChangeText={(value) => setRecipientEmail(value)}\r\n          value={recipientEmail}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Amount\"\r\n          keyboardType=\"numeric\"\r\n          onChangeText={(value) => setAmount(value)}\r\n          value={amount}\r\n        />\r\n        <TouchableOpacity style={styles.transferButton} onPress={handleTransferFunds}>\r\n          <Text style={styles.transferButtonText}>Send Cash</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  headerContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 40,\r\n  },\r\n  logoutButton: {\r\n    position: \"absolute\",\r\n    left: 20,\r\n    top: 20,\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n    color: \"white\",\r\n  },\r\n  balanceContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n  balanceText: {\r\n    fontSize: 18,\r\n    color: \"white\",\r\n  },\r\n  amountText: {\r\n    fontSize: 32,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  transferContainer: {\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    width: 250,\r\n    height: 40,\r\n    marginBottom: 20,\r\n    backgroundColor: \"white\",\r\n    paddingHorizontal: 10,\r\n  },\r\n  transferButton: {\r\n    backgroundColor: \"green\",\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  transferButtonText: {\r\n    fontSize: 18,\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}