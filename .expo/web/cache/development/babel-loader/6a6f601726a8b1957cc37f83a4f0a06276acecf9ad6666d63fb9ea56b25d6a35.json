{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, doc, getDocs, setDoc, addDoc, Timestamp } from \"firebase/firestore\";\nimport { auth, db, firebase } from \"../firebase\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Dashboard = function Dashboard(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(5000),\n    _useState2 = _slicedToArray(_useState, 2),\n    balance = _useState2[0],\n    setBalance = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setUserInfo = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    transactions = _useState8[0],\n    setTransactions = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    fullname = _useState10[0],\n    setName = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    recipientEmail = _useState12[0],\n    setRecipientEmail = _useState12[1];\n  var _useState13 = useState(),\n    _useState14 = _slicedToArray(_useState13, 2),\n    amount = _useState14[0],\n    setAmount = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    recentContacts = _useState16[0],\n    setRecentContacts = _useState16[1];\n  var saveDataToStorage = function () {\n    var _ref2 = _asyncToGenerator(function* (recipientEmail, recentContacts) {\n      try {\n        var data = JSON.stringify({\n          recipientEmail: recipientEmail,\n          recentContacts: recentContacts\n        });\n        yield AsyncStorage.setItem('userData', data);\n        console.log('Data saved to AsyncStorage');\n      } catch (error) {\n        console.log('Error saving data to AsyncStorage:', error);\n      }\n    });\n    return function saveDataToStorage(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loadDataFromStorage = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var data = yield AsyncStorage.getItem('userData');\n        if (data) {\n          var _JSON$parse = JSON.parse(data),\n            _recipientEmail = _JSON$parse.recipientEmail,\n            _recentContacts = _JSON$parse.recentContacts;\n          setRecipientEmail(_recipientEmail);\n          setRecentContacts(_recentContacts);\n          console.log('Data loaded from AsyncStorage');\n        }\n      } catch (error) {\n        console.log('Error loading data from AsyncStorage:', error);\n      }\n    });\n    return function loadDataFromStorage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadDataFromStorage();\n  }, []);\n  useEffect(function () {\n    saveDataToStorage(recipientEmail, recentContacts);\n  }, [recipientEmail, recentContacts]);\n  var getRecipientUid = function () {\n    var _ref4 = _asyncToGenerator(function* (email) {\n      var usersRef = collection(db, 'users');\n      var q = query(usersRef, where('email', '==', email));\n      var querySnapshot = yield getDocs(q);\n      if (!querySnapshot.empty) {\n        var recipient = querySnapshot.docs[0];\n        return recipient.id;\n      }\n      throw new Error('Recipient not found');\n    });\n    return function getRecipientUid(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var transferFunds = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        var recipientUid = yield getRecipientUid(recipientEmail);\n        var sfDocRef = doc(db, 'users', recipientUid);\n        yield runTransaction(db, function () {\n          var _ref6 = _asyncToGenerator(function* (transaction) {\n            var sfDoc = yield transaction.get(sfDocRef);\n            if (!sfDoc.exists()) {\n              throw new Error('Document does not exist!');\n            }\n            var newWallet = sfDoc.data().wallet + Number(amount);\n            transaction.update(sfDocRef, {\n              wallet: newWallet\n            });\n          });\n          return function (_x4) {\n            return _ref6.apply(this, arguments);\n          };\n        }());\n        console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\n        var deduct = function () {\n          var _ref7 = _asyncToGenerator(function* () {\n            var user = auth.currentUser.uid;\n            if (user) {\n              var uid = user;\n              try {\n                yield runTransaction(db, function () {\n                  var _ref8 = _asyncToGenerator(function* (transaction) {\n                    var userRef = firebase.firestore().collection('users').doc(uid);\n                    var sf = yield transaction.get(userRef);\n                    if (!sf.exists) {\n                      throw new Error('Document does not exist!');\n                    }\n                    var deductedWallet = sf.data().wallet - Number(amount);\n                    transaction.update(userRef, {\n                      wallet: deductedWallet\n                    });\n                    alert('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\n                    console.log('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\n                  });\n                  return function (_x5) {\n                    return _ref8.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                alert('Error updating wallet:', error);\n                console.error('Error updating wallet:', error);\n              }\n            }\n          });\n          return function deduct() {\n            return _ref7.apply(this, arguments);\n          };\n        }();\n        yield deduct();\n        var user = auth.currentUser.uid;\n        if (user) {\n          var uid = user;\n          var SenderEmail = auth.currentUser.email;\n          var newTransactions = function () {\n            var _ref9 = _asyncToGenerator(function* () {\n              yield addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\n                transactions: amount,\n                Timestamp: new Date(),\n                ReceiverUid: recipientUid,\n                ReceiverEmail: recipientEmail\n              });\n            });\n            return function newTransactions() {\n              return _ref9.apply(this, arguments);\n            };\n          }();\n          yield newTransactions();\n          var recievedHis = function () {\n            var _ref10 = _asyncToGenerator(function* () {\n              yield addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\n                transactions: amount,\n                Timestamp: new Date(),\n                Sender: uid,\n                SenderEmail: SenderEmail\n              });\n            });\n            return function recievedHis() {\n              return _ref10.apply(this, arguments);\n            };\n          }();\n          yield recievedHis();\n          var updatedContacts = [recipientEmail].concat(_toConsumableArray(recentContacts.slice(0, 4)));\n          setRecentContacts(updatedContacts);\n          saveDataToStorage(recipientEmail, updatedContacts);\n        }\n      } catch (error) {\n        console.error('Error transferring funds:', error);\n      }\n    });\n    return function transferFunds() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        var uid = user.uid;\n        setEmail(user.email);\n        var getWallet = function () {\n          var _ref11 = _asyncToGenerator(function* () {\n            var docRef = doc(db, 'users', uid);\n            var unsubscribe = onSnapshot(docRef, function (docSnap) {\n              if (docSnap.exists()) {\n                console.log('Document data:', docSnap.data());\n                var data = docSnap.data();\n                setUserInfo(data);\n              } else {\n                console.log('No such document!');\n              }\n            });\n            return unsubscribe;\n          });\n          return function getWallet() {\n            return _ref11.apply(this, arguments);\n          };\n        }();\n        var unsubscribe = getWallet();\n        return function () {\n          unsubscribe();\n        };\n      } else {\n        navigation.navigate('Login');\n      }\n    });\n  }, []);\n  var handleTransferFunds = function handleTransferFunds() {\n    setBalance(balance - 100);\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background1.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: [_jsxs(View, {\n        style: styles.balanceContainer,\n        children: [_jsx(Text, {\n          style: styles.balanceText,\n          children: \"Current Balance\"\n        }), _jsx(View, {\n          style: styles.currentBalanceContainer,\n          children: _jsxs(Text, {\n            style: styles.amountText,\n            children: [\"\\u20B1 \", userInfo.wallet]\n          })\n        }), _jsxs(View, {\n          style: styles.recentContactsContainer,\n          children: [_jsx(Text, {\n            style: styles.recentContactsText,\n            children: \"Recent Contacts:\"\n          }), _jsx(View, {\n            style: styles.recentContactsRow\n          }), recentContacts.map(function (contact, index) {\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setRecipientEmail(contact);\n              },\n              children: _jsxs(View, {\n                style: styles.contactIconContainer,\n                children: [_jsx(Ionicons, {\n                  name: \"person-circle-outline\",\n                  size: 24,\n                  color: \"white\"\n                }), _jsx(Text, {\n                  style: styles.recentContactText,\n                  children: contact\n                })]\n              })\n            }, index);\n          })]\n        })]\n      }), _jsxs(View, {\n        style: {\n          padding: 20\n        },\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Input Recipient's Email: \",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          value: recipientEmail,\n          onChangeText: setRecipientEmail\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Input Amount: \",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          value: amount,\n          onChangeText: setAmount\n        }), _jsx(TouchableOpacity, {\n          style: styles.transferButton,\n          onPress: transferFunds,\n          children: _jsx(Text, {\n            style: styles.transferButtonText,\n            children: \"Send Funds\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  balanceContainer: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  balanceText: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#fff',\n    fontFamily: 'Roboto'\n  },\n  currentBalanceContainer: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  amountText: {\n    fontSize: 23,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  recentContactsContainer: {\n    alignItems: 'center'\n  },\n  recentContactsText: {\n    fontSize: 16,\n    color: '#fff',\n    marginBottom: 5\n  },\n  recentContactText: {\n    fontSize: 14,\n    color: '#fff',\n    marginBottom: 3\n  },\n  input: {\n    height: 40,\n    borderColor: \"black\",\n    borderWidth: 2,\n    borderRadius: 5,\n    marginBottom: 10,\n    padding: 10,\n    margin: 10,\n    fontFamily: 'Roboto',\n    backgroundColor: 'white'\n  },\n  transferButton: {\n    marginHorizontal: 80,\n    backgroundColor: \"#111827\",\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  transferButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  recentContactsRow: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  contactIconContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 10\n  }\n});\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","TextInput","ImageBackground","AsyncStorage","Ionicons","collection","query","where","onSnapshot","writeBatch","runTransaction","doc","getDocs","setDoc","addDoc","Timestamp","auth","db","firebase","onAuthStateChanged","signOut","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","route","navigation","_useState","_useState2","_slicedToArray","balance","setBalance","_useState3","_useState4","email","setEmail","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","transactions","setTransactions","_useState9","_useState10","fullname","setName","_useState11","_useState12","recipientEmail","setRecipientEmail","_useState13","_useState14","amount","setAmount","_useState15","_useState16","recentContacts","setRecentContacts","saveDataToStorage","_ref2","_asyncToGenerator","data","JSON","stringify","setItem","console","log","error","_x","_x2","apply","arguments","loadDataFromStorage","_ref3","getItem","_JSON$parse","parse","getRecipientUid","_ref4","usersRef","q","querySnapshot","empty","recipient","docs","id","Error","_x3","transferFunds","_ref5","recipientUid","sfDocRef","_ref6","transaction","sfDoc","get","exists","newWallet","wallet","Number","update","_x4","deduct","_ref7","user","currentUser","uid","_ref8","userRef","firestore","sf","deductedWallet","alert","_x5","SenderEmail","newTransactions","_ref9","Date","ReceiverUid","ReceiverEmail","recievedHis","_ref10","Sender","updatedContacts","concat","_toConsumableArray","slice","getWallet","_ref11","docRef","unsubscribe","docSnap","navigate","handleTransferFunds","style","flex","justifyContent","children","source","require","resizeMode","styles","image","balanceContainer","balanceText","currentBalanceContainer","amountText","recentContactsContainer","recentContactsText","recentContactsRow","map","contact","index","onPress","contactIconContainer","name","size","color","recentContactText","padding","input","placeholder","placeholderTextColor","value","onChangeText","transferButton","transferButtonText","create","alignItems","marginBottom","fontSize","fontWeight","fontFamily","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","height","borderColor","borderWidth","margin","marginHorizontal","marginTop","flexDirection","marginRight"],"sources":["C:/Users/User/E-wallet-GasTracker/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, ImageBackground } from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, doc, getDocs, setDoc, addDoc, Timestamp } from \"firebase/firestore\";\r\nimport { auth, db, firebase } from \"../firebase\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\n\r\n\r\nconst Dashboard = ({ route, navigation }) => {\r\n  const [balance, setBalance] = useState(5000); // Initial balance\r\n  const [email, setEmail] = useState();\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [transactions, setTransactions] = useState();\r\n  const [fullname, setName] = useState();\r\n  const [recipientEmail, setRecipientEmail] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [recentContacts, setRecentContacts] = useState([]);\r\n\r\n  const saveDataToStorage = async (recipientEmail, recentContacts) => {\r\n    try {\r\n      const data = JSON.stringify({ recipientEmail, recentContacts });\r\n      await AsyncStorage.setItem('userData', data);\r\n      console.log('Data saved to AsyncStorage');\r\n    } catch (error) {\r\n      console.log('Error saving data to AsyncStorage:', error);\r\n    }\r\n  };\r\n\r\n  const loadDataFromStorage = async () => {\r\n    try {\r\n      const data = await AsyncStorage.getItem('userData');\r\n      if (data) {\r\n        const { recipientEmail, recentContacts } = JSON.parse(data);\r\n        setRecipientEmail(recipientEmail);\r\n        setRecentContacts(recentContacts);\r\n        console.log('Data loaded from AsyncStorage');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error loading data from AsyncStorage:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataFromStorage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveDataToStorage(recipientEmail, recentContacts);\r\n  }, [recipientEmail, recentContacts]);\r\n\r\n  const getRecipientUid = async (email) => {\r\n    const usersRef = collection(db, 'users');\r\n    const q = query(usersRef, where('email', '==', email));\r\n    const querySnapshot = await getDocs(q);\r\n    if (!querySnapshot.empty) {\r\n      const recipient = querySnapshot.docs[0];\r\n      return recipient.id;\r\n    }\r\n    throw new Error('Recipient not found');\r\n  };\r\n\r\n  const transferFunds = async () => {\r\n    try {\r\n      const recipientUid = await getRecipientUid(recipientEmail);\r\n      \r\n\r\n      const sfDocRef = doc(db, 'users', recipientUid);\r\n      \r\n      await runTransaction(db, async (transaction) => {\r\n        const sfDoc = await transaction.get(sfDocRef);\r\n        if (!sfDoc.exists()) {\r\n          throw new Error('Document does not exist!');\r\n        }\r\n        const newWallet = sfDoc.data().wallet + Number(amount);\r\n        transaction.update(sfDocRef, { wallet: newWallet });\r\n      });\r\n      console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\r\n\r\n      const deduct = async () => {\r\n        const user = auth.currentUser.uid;\r\n        if (user) {\r\n          const uid = user;\r\n          try {\r\n            await runTransaction(db, async (transaction) => {\r\n              const userRef = firebase.firestore().collection('users').doc(uid);\r\n              const sf = await transaction.get(userRef);\r\n              if (!sf.exists) {\r\n                throw new Error('Document does not exist!');\r\n              }\r\n              const deductedWallet = sf.data().wallet - Number(amount);\r\n              transaction.update(userRef, {\r\n                wallet: deductedWallet,\r\n              });\r\n              alert('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\r\n              console.log('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\r\n            });\r\n          } catch (error) {\r\n            alert('Error updating wallet:', error);\r\n            console.error('Error updating wallet:', error);\r\n          }\r\n        }\r\n      };\r\n      await deduct();\r\n\r\n      const user = auth.currentUser.uid;\r\n      if (user) {\r\n        const uid = user;\r\n        const SenderEmail = auth.currentUser.email;\r\n        const newTransactions = async () => {\r\n          await addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\r\n            transactions: amount,\r\n            Timestamp: new Date(),\r\n            ReceiverUid: recipientUid,\r\n            ReceiverEmail: recipientEmail,\r\n          });\r\n        };\r\n        await newTransactions();\r\n\r\n        const recievedHis = async () => {\r\n          await addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\r\n            transactions: amount,\r\n            Timestamp: new Date(),\r\n            Sender: uid,\r\n            SenderEmail: SenderEmail,\r\n          });\r\n        };\r\n        await recievedHis();\r\n\r\n        const updatedContacts = [recipientEmail, ...recentContacts.slice(0, 4)];\r\n        setRecentContacts(updatedContacts);\r\n        saveDataToStorage(recipientEmail, updatedContacts);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error transferring funds:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        const uid = user.uid;\r\n        setEmail(user.email);\r\n\r\n        const getWallet = async () => {\r\n          const docRef = doc(db, 'users', uid);\r\n          const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n              console.log('Document data:', docSnap.data());\r\n              const data = docSnap.data();\r\n              setUserInfo(data);\r\n            } else {\r\n              console.log('No such document!');\r\n            }\r\n          });\r\n\r\n          return unsubscribe;\r\n        };\r\n\r\n        const unsubscribe = getWallet();\r\n\r\n        return () => {\r\n          unsubscribe();\r\n        };\r\n      } else {\r\n        navigation.navigate('Login');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleTransferFunds = () => {\r\n    setBalance(balance - 100);\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center' }}>\r\n      <ImageBackground source={require('../assets/background1.jpg')} resizeMode=\"cover\" style={styles.image}>\r\n        <View style={styles.balanceContainer}>\r\n          <Text style={styles.balanceText}>Current Balance</Text>\r\n          <View style={styles.currentBalanceContainer}>\r\n            <Text style={styles.amountText}>₱ {userInfo.wallet}</Text>\r\n          </View>\r\n          <View style={styles.recentContactsContainer}>\r\n            <Text style={styles.recentContactsText}>Recent Contacts:</Text>\r\n            <View style={styles.recentContactsRow}></View>\r\n            {recentContacts.map((contact, index) => (\r\n             <TouchableOpacity key={index} onPress={() => setRecipientEmail(contact)}>\r\n             <View style={styles.contactIconContainer}>\r\n               <Ionicons name=\"person-circle-outline\" size={24} color=\"white\" />\r\n               <Text style={styles.recentContactText}>{contact}</Text>\r\n             </View>\r\n           </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        </View>\r\n        <View style={{padding: 20}}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Input Recipient's Email: \"\r\n          placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n          value={recipientEmail}\r\n          onChangeText={setRecipientEmail}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Input Amount: \"\r\n          placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n          value={amount}\r\n          onChangeText={setAmount}\r\n        />\r\n        \r\n        <TouchableOpacity\r\n          style={styles.transferButton}\r\n          onPress={transferFunds}\r\n        >\r\n          <Text style={styles.transferButtonText}>Send Funds</Text>\r\n        </TouchableOpacity>\r\n        </View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  balanceContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 30,\r\n  },\r\n  balanceText: {\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: '#fff',\r\n    fontFamily: 'Roboto',\r\n  },\r\n  currentBalanceContainer: {\r\n    backgroundColor: '#fff',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  amountText: {\r\n    fontSize: 23,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  recentContactsContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  recentContactsText: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n    marginBottom: 5,\r\n  },\r\n  recentContactText: {\r\n    fontSize: 14,\r\n    color: '#fff',\r\n    marginBottom: 3,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"black\",\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n    margin: 10,\r\n    fontFamily: 'Roboto',\r\n    backgroundColor: 'white'\r\n  },\r\n  transferButton: {\r\n    marginHorizontal: 80,\r\n    backgroundColor: \"#111827\",\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginTop: 15,\r\n    alignItems: 'center'\r\n  },\r\n  transferButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  recentContactsRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  contactIconContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginRight: 10,\r\n  },\r\n  \r\n});\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}