{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/core';\nimport { auth, firebase } from \"../firebase\";\nimport { collection, query, setDoc, doc, getDoc, querySnapshot, documentSnapshot, getDocs, snapshotEqual, onSnapshot } from 'firebase/firestore';\nimport { db } from \"../firebase\";\nimport { getAuth } from 'firebase/auth';\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Logs = function Logs() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    logInfo = _useState2[0],\n    setLogs = _useState2[1];\n  var navigation = useNavigation();\n  var onPress = function onPress() {\n    navigation.navigate(\"receiveLogs\");\n  };\n  useEffect(function () {\n    var user = auth.currentUser.uid;\n    if (user) {\n      var uid = user;\n      var todoRef = firebase.firestore().collection(\"users\").doc(uid).collection(\"history\").doc(\"DUgVrFDJhas4wAuX07re\").collection(\"Sent\");\n      var unsubscribe = onSnapshot(todoRef, function (querySnapshot) {\n        var logs = querySnapshot.docs.map(function (doc) {\n          var _doc$data = doc.data(),\n            ReceiverUid = _doc$data.ReceiverUid,\n            Timestamp = _doc$data.Timestamp,\n            transactions = _doc$data.transactions,\n            Sender = _doc$data.Sender;\n          var formattedTimestamp = \"\";\n          if (Timestamp && Timestamp.toDate) {\n            formattedTimestamp = Timestamp.toDate().toLocaleString();\n          }\n          return {\n            id: doc.id,\n            ReceiverUid: ReceiverUid,\n            Timestamp: formattedTimestamp,\n            transactions: transactions\n          };\n        });\n        setLogs(logs);\n        console.log(logs);\n      });\n      return function () {\n        return unsubscribe();\n      };\n    }\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: logInfo,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n          index = _ref.index;\n        return _jsxs(View, {\n          style: [styles.logItem, index === 0 && styles.highlightedLog],\n          children: [_jsxs(Text, {\n            children: [\"You have just sent $\", item.transactions, \" to \", item.ReceiverUid, \" in \", item.Timestamp]\n          }, index), _jsx(Text, {\n            style: styles.timestampText,\n            children: item.Timestamp\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      contentContainerStyle: styles.listContainer\n    }), _jsx(View, {\n      style: styles.receivedButton,\n      children: _jsx(TouchableOpacity, {\n        style: styles.ButtonContainer,\n        onPress: onPress,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Recieved History\"\n        })\n      })\n    })]\n  });\n};\nexport default Logs;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n    paddingHorizontal: 16,\n    paddingTop: 16\n  },\n  ButtonContainer: {\n    marginHorizontal: 80,\n    backgroundColor: \"black\",\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginTop: 15\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  receivedButton: {\n    padding: 10,\n    marginBottom: 10\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  listContainer: {\n    paddingBottom: 16\n  },\n  logItem: {\n    backgroundColor: '#FFFFFF',\n    padding: 16,\n    marginBottom: 8,\n    borderRadius: 8,\n    elevation: 2\n  },\n  highlightedLog: {\n    backgroundColor: '#FFD700',\n    borderWidth: 2,\n    borderColor: '#FFA500'\n  },\n  logText: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: 'bold'\n  },\n  timestampText: {\n    fontSize: 12,\n    color: '#888888'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useNavigation","auth","firebase","collection","query","setDoc","doc","getDoc","querySnapshot","documentSnapshot","getDocs","snapshotEqual","onSnapshot","db","getAuth","onAuthStateChanged","signOut","Ionicons","jsxs","_jsxs","jsx","_jsx","Logs","_useState","_useState2","_slicedToArray","logInfo","setLogs","navigation","onPress","navigate","user","currentUser","uid","todoRef","firestore","unsubscribe","logs","docs","map","_doc$data","data","ReceiverUid","Timestamp","transactions","Sender","formattedTimestamp","toDate","toLocaleString","id","console","log","View","style","styles","container","children","FlatList","renderItem","_ref","item","index","logItem","highlightedLog","Text","timestampText","keyExtractor","contentContainerStyle","listContainer","receivedButton","TouchableOpacity","ButtonContainer","buttonText","StyleSheet","create","flex","backgroundColor","paddingHorizontal","paddingTop","marginHorizontal","paddingVertical","borderRadius","marginTop","color","fontSize","fontWeight","textAlign","padding","marginBottom","loadingContainer","justifyContent","alignItems","paddingBottom","elevation","borderWidth","borderColor","logText"],"sources":["C:/Users/mamit/OneDrive/Desktop/mobile_Team_Progress_june15/screens/Logs.js"],"sourcesContent":["import { View, Text, FlatList,ActivityIndicator, StyleSheet,Alert, Pressable, TextInput, Button, Touchable, TouchableOpacity, KeyboardAvoidingView } from 'react-native';\r\nimport React ,{useState, useEffect} from 'react';\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { auth, firebase } from '../firebase';\r\nimport {collection,query, setDoc, doc, getDoc, querySnapshot, documentSnapshot, getDocs, snapshotEqual, onSnapshot} from 'firebase/firestore'\r\nimport { db } from '../firebase'\r\nimport { getAuth } from 'firebase/auth';\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\n\r\nconst Logs = () => {\r\n  const [logInfo, setLogs] = useState([]);\r\n  //const [loading, setLoading] = useState(true);\r\n  const navigation = useNavigation()\r\n\r\n  const onPress = () => {\r\n    navigation.navigate(\"receiveLogs\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    const user = auth.currentUser.uid;\r\n    if (user) {\r\n      const uid = user;\r\n      const todoRef = firebase.firestore().collection(\"users\").doc(uid).collection(\"history\").doc(\"DUgVrFDJhas4wAuX07re\").collection(\"Sent\");\r\n      const unsubscribe = onSnapshot(todoRef, (querySnapshot) => {\r\n        const logs = querySnapshot.docs.map((doc) => {\r\n          const { ReceiverUid, Timestamp, transactions, Sender } = doc.data();\r\n          let formattedTimestamp = \"\";\r\n          if (Timestamp && Timestamp.toDate) {\r\n            formattedTimestamp = Timestamp.toDate().toLocaleString();\r\n          }\r\n          return {\r\n            id: doc.id,\r\n            ReceiverUid,\r\n            Timestamp: formattedTimestamp,\r\n            transactions,\r\n            \r\n          };\r\n        });\r\n        setLogs(logs);\r\n        console.log(logs);\r\n      });\r\n\r\n      return () => unsubscribe();\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={logInfo}\r\n        renderItem={({ item, index }) => (\r\n          <View style={[styles.logItem, index === 0 && styles.highlightedLog]}>\r\n\r\n            <Text key={index}>\r\n          You have just sent ${item.transactions} to {item.ReceiverUid} in {item.Timestamp}\r\n            </Text>\r\n\r\n            <Text style={styles.timestampText}>{item.Timestamp}</Text>\r\n          </View>\r\n        )}\r\n        keyExtractor={(item) => item.id}\r\n        contentContainerStyle={styles.listContainer}\r\n      />\r\n        <View style={styles.receivedButton}>\r\n          <TouchableOpacity style={styles.ButtonContainer} onPress={onPress}>\r\n            <Text style={styles.buttonText}>Recieved History</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Logs;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n    paddingHorizontal: 16,\r\n    paddingTop: 16,\r\n  },\r\n  ButtonContainer:{\r\n    marginHorizontal: 80,\r\n    backgroundColor: \"black\",\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginTop: 15,\r\n  },\r\n  buttonText:{\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  receivedButton:{\r\n    padding: 10,\r\n    marginBottom: 10\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  listContainer: {\r\n    paddingBottom: 16,\r\n  },\r\n  logItem: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: 16,\r\n    marginBottom: 8,\r\n    borderRadius: 8,\r\n    elevation: 2,\r\n  },\r\n  highlightedLog: {\r\n    backgroundColor: '#FFD700',\r\n    borderWidth: 2,\r\n    borderColor: '#FFA500',\r\n  },\r\n  logText: {\r\n    fontSize: 16,\r\n    marginBottom: 8,\r\n    fontWeight: 'bold',\r\n  },\r\n  timestampText: {\r\n    fontSize: 12,\r\n    color: '#888888',\r\n  },\r\n});\r\n"],"mappings":";;;;;;;;;;;;;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,IAAI,EAAEC,QAAQ;AACvB,SAAQC,UAAU,EAACC,KAAK,EAAEC,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAEC,aAAa,EAAEC,gBAAgB,EAAEC,OAAO,EAAEC,aAAa,EAAEC,UAAU,QAAO,oBAAoB;AAC7I,SAASC,EAAE;AACX,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,kBAAkB,EAAEC,OAAO,QAAQ,eAAe;AAC3D,SAASC,QAAQ,QAAQ,oBAAoB;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE7C,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EACjB,IAAAC,SAAA,GAA2BzB,QAAQ,CAAC,EAAE,CAAC;IAAA0B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhCG,OAAO,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEvB,IAAMI,UAAU,GAAG5B,aAAa,CAAC,CAAC;EAElC,IAAM6B,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBD,UAAU,CAACE,QAAQ,CAAC,aAAa,CAAC;EACpC,CAAC;EAED/B,SAAS,CAAC,YAAM;IACd,IAAMgC,IAAI,GAAG9B,IAAI,CAAC+B,WAAW,CAACC,GAAG;IACjC,IAAIF,IAAI,EAAE;MACR,IAAME,GAAG,GAAGF,IAAI;MAChB,IAAMG,OAAO,GAAGhC,QAAQ,CAACiC,SAAS,CAAC,CAAC,CAAChC,UAAU,CAAC,OAAO,CAAC,CAACG,GAAG,CAAC2B,GAAG,CAAC,CAAC9B,UAAU,CAAC,SAAS,CAAC,CAACG,GAAG,CAAC,sBAAsB,CAAC,CAACH,UAAU,CAAC,MAAM,CAAC;MACtI,IAAMiC,WAAW,GAAGxB,UAAU,CAACsB,OAAO,EAAE,UAAC1B,aAAa,EAAK;QACzD,IAAM6B,IAAI,GAAG7B,aAAa,CAAC8B,IAAI,CAACC,GAAG,CAAC,UAACjC,GAAG,EAAK;UAC3C,IAAAkC,SAAA,GAAyDlC,GAAG,CAACmC,IAAI,CAAC,CAAC;YAA3DC,WAAW,GAAAF,SAAA,CAAXE,WAAW;YAAEC,SAAS,GAAAH,SAAA,CAATG,SAAS;YAAEC,YAAY,GAAAJ,SAAA,CAAZI,YAAY;YAAEC,MAAM,GAAAL,SAAA,CAANK,MAAM;UACpD,IAAIC,kBAAkB,GAAG,EAAE;UAC3B,IAAIH,SAAS,IAAIA,SAAS,CAACI,MAAM,EAAE;YACjCD,kBAAkB,GAAGH,SAAS,CAACI,MAAM,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;UAC1D;UACA,OAAO;YACLC,EAAE,EAAE3C,GAAG,CAAC2C,EAAE;YACVP,WAAW,EAAXA,WAAW;YACXC,SAAS,EAAEG,kBAAkB;YAC7BF,YAAY,EAAZA;UAEF,CAAC;QACH,CAAC,CAAC;QACFjB,OAAO,CAACU,IAAI,CAAC;QACba,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;MACnB,CAAC,CAAC;MAEF,OAAO;QAAA,OAAMD,WAAW,CAAC,CAAC;MAAA;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,OACEjB,KAAA,CAACiC,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BnC,IAAA,CAACoC,QAAQ;MACPhB,IAAI,EAAEf,OAAQ;MACdgC,UAAU,EAAE,SAAAA,WAAAC,IAAA;QAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;UAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;QAAA,OACxB1C,KAAA,CAACiC,IAAI;UAACC,KAAK,EAAE,CAACC,MAAM,CAACQ,OAAO,EAAED,KAAK,KAAK,CAAC,IAAIP,MAAM,CAACS,cAAc,CAAE;UAAAP,QAAA,GAElErC,KAAA,CAAC6C,IAAI;YAAAR,QAAA,GAAa,sBACA,EAACI,IAAI,CAAChB,YAAY,EAAC,MAAI,EAACgB,IAAI,CAAClB,WAAW,EAAC,MAAI,EAACkB,IAAI,CAACjB,SAAS;UAAA,GADnEkB,KAEL,CAAC,EAEPxC,IAAA,CAAC2C,IAAI;YAACX,KAAK,EAAEC,MAAM,CAACW,aAAc;YAAAT,QAAA,EAAEI,IAAI,CAACjB;UAAS,CAAO,CAAC;QAAA,CACtD,CAAC;MAAA,CACP;MACFuB,YAAY,EAAE,SAAAA,aAACN,IAAI;QAAA,OAAKA,IAAI,CAACX,EAAE;MAAA,CAAC;MAChCkB,qBAAqB,EAAEb,MAAM,CAACc;IAAc,CAC7C,CAAC,EACA/C,IAAA,CAAC+B,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACe,cAAe;MAAAb,QAAA,EACjCnC,IAAA,CAACiD,gBAAgB;QAACjB,KAAK,EAAEC,MAAM,CAACiB,eAAgB;QAAC1C,OAAO,EAAEA,OAAQ;QAAA2B,QAAA,EAChEnC,IAAA,CAAC2C,IAAI;UAACX,KAAK,EAAEC,MAAM,CAACkB,UAAW;UAAAhB,QAAA,EAAC;QAAgB,CAAM;MAAC,CACvC;IAAC,CACf,CAAC;EAAA,CACL,CAAC;AAEX,CAAC;AAED,eAAelC,IAAI;AAEnB,IAAMgC,MAAM,GAAGmB,UAAU,CAACC,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,iBAAiB,EAAE,EAAE;IACrBC,UAAU,EAAE;EACd,CAAC;EACDP,eAAe,EAAC;IACdQ,gBAAgB,EAAE,EAAE;IACpBH,eAAe,EAAE,OAAO;IACxBI,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDV,UAAU,EAAC;IACTW,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;EACb,CAAC;EACDjB,cAAc,EAAC;IACbkB,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAChB,CAAC;EACDC,gBAAgB,EAAE;IAChBd,IAAI,EAAE,CAAC;IACPe,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDvB,aAAa,EAAE;IACbwB,aAAa,EAAE;EACjB,CAAC;EACD9B,OAAO,EAAE;IACPc,eAAe,EAAE,SAAS;IAC1BW,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfP,YAAY,EAAE,CAAC;IACfY,SAAS,EAAE;EACb,CAAC;EACD9B,cAAc,EAAE;IACda,eAAe,EAAE,SAAS;IAC1BkB,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACf,CAAC;EACDC,OAAO,EAAE;IACPZ,QAAQ,EAAE,EAAE;IACZI,YAAY,EAAE,CAAC;IACfH,UAAU,EAAE;EACd,CAAC;EACDpB,aAAa,EAAE;IACbmB,QAAQ,EAAE,EAAE;IACZD,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}