{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { auth, db } from \"../firebase\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport * as LocalAuthentication from \"expo-local-authentication\";\nimport { useNavigation } from '@react-navigation/native';\nimport { AppContext } from \"../AppContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    emailVerified = _useState6[0],\n    setEmailVerified = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    biometricAvailable = _useState8[0],\n    setBiometricAvailable = _useState8[1];\n  var _ref2 = route.params || {},\n    showFingerprint = _ref2.showFingerprint;\n  var onPress = function onPress() {\n    navigation.navigate(\"Registrationpage\", {\n      showFingerprint: showFingerprint\n    });\n  };\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        setEmail(user.email);\n        setEmailVerified(user.emailVerified);\n        navigation.replace(\"Main\");\n        console.log(\"email verified: \", user.emailVerified);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  useEffect(function () {\n    var checkBiometricAvailability = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        var isHardwareAvailable = yield LocalAuthentication.hasHardwareAsync();\n        var isEnrolled = yield LocalAuthentication.isEnrolledAsync();\n        setBiometricAvailable(isHardwareAvailable && isEnrolled);\n      });\n      return function checkBiometricAvailability() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    checkBiometricAvailability();\n  }, []);\n  var handleBiometricAuth = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (showFingerprint) {\n        try {\n          var _yield$LocalAuthentic = yield LocalAuthentication.authenticateAsync(),\n            success = _yield$LocalAuthentic.success;\n          if (success) {\n            var storedEmail = yield AsyncStorage.getItem(\"email\");\n            var storedPassword = yield AsyncStorage.getItem(\"password\");\n            if (storedEmail && storedPassword) {\n              signInWithEmailAndPassword(auth, storedEmail, storedPassword).then(function () {\n                var user = auth.currentUser;\n                if (user.emailVerified) {\n                  navigation.navigate(\"Main\", {\n                    email: storedEmail\n                  });\n                } else {\n                  alert(\"Email not verified. Please verify your email to login.\");\n                  console.log(\"Email not verified\");\n                }\n              }).catch(function (error) {\n                var errorMessage = error.message;\n                alert(errorMessage);\n                console.log(errorMessage);\n              });\n            } else {\n              console.log(\"Stored email or password is missing.\");\n            }\n            console.log(\"Biometric authentication successful\");\n          } else {\n            console.log(\"Biometric authentication failed\");\n          }\n        } catch (error) {\n          console.log(\"Biometric authentication error:\", error);\n        }\n      } else {\n        console.log(\"Fingerprint login option is disabled\");\n      }\n    });\n    return function handleBiometricAuth() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleLogin = function handleLogin() {\n    if (email.trim() === \"\") {\n      alert(\"Please enter an email.\");\n      return;\n    }\n    if (password.trim() === \"\") {\n      alert(\"Please enter a password.\");\n      return;\n    }\n    signInWithEmailAndPassword(auth, email, password).then(function () {\n      var user = auth.currentUser;\n      if (user.emailVerified) {\n        AsyncStorage.setItem(\"email\", email);\n        AsyncStorage.setItem(\"password\", password);\n        navigation.navigate(\"Main\", {\n          email: email\n        });\n      } else {\n        alert(\"Email not verified. Please verify your email to login.\");\n        console.log(\"Email not verified\");\n      }\n    }).catch(function (error) {\n      var errorMessage = error.message;\n      alert(errorMessage);\n      console.log(errorMessage);\n    });\n  };\n  var handlePasswordChange = function handlePasswordChange(text) {\n    var numericValue = text.replace(/[^0-9]/g, \"\");\n    setPassword(numericValue);\n  };\n  var handleKeypadPress = function handleKeypadPress(value) {\n    var updatedPassword = password + value;\n    setPassword(updatedPassword);\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background1.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: [_jsx(View, {\n        style: styles.logoContainer,\n        children: _jsx(ImageBackground, {\n          style: styles.logo,\n          source: require(\"../assets/logo.png\")\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"LATO-LATO INC.\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n        value: email,\n        onChangeText: setEmail,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n        value: password,\n        maxLength: 6,\n        onChangeText: function onChangeText(text) {\n          var numericValue = text.replace(/[^0-9]/g, '');\n          setPassword(numericValue);\n        },\n        keyboardType: \"numeric\",\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleLogin,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      }), _jsx(Text, {\n        style: {\n          marginTop: 10,\n          textAlign: \"center\"\n        },\n        children: \"Already have an account?\"\n      }), _jsx(TouchableOpacity, {\n        onPress: onPress,\n        children: _jsx(View, {\n          style: styles.buttonText,\n          children: _jsx(Text, {\n            style: styles.buttonTextSignUp,\n            children: \"Signup here!\"\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleBiometricAuth,\n        disabled: !biometricAvailable,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login with Biometrics\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  logoContainer: {\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  logo: {\n    width: 100,\n    height: 100\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n    color: \"black\",\n    textAlign: \"center\",\n    marginBottom: 20\n  },\n  input: {\n    height: 40,\n    borderColor: \"black\",\n    borderWidth: 2,\n    borderRadius: 5,\n    marginBottom: 10,\n    paddingHorizontal: 15,\n    margin: 10,\n    fontFamily: \"Roboto\",\n    padding: 5,\n    backgroundColor: \"white\"\n  },\n  button: {\n    marginHorizontal: 80,\n    backgroundColor: \"#111827\",\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginTop: 15\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  buttonTextLogin: {\n    marginTop: 10,\n    color: \"black\",\n    fontSize: 13,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    textDecorationLine: \"underline\"\n  },\n  keypadContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: 10\n  },\n  keypadButton: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"gray\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 5,\n    borderRadius: 5\n  },\n  keypadButtonText: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  buttonTextSignUp: {\n    marginTop: 10,\n    color: \"black\",\n    fontSize: 13,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    textDecorationLine: \"underline\"\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","StyleSheet","TouchableOpacity","ImageBackground","AsyncStorage","auth","db","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","setDoc","doc","LocalAuthentication","useNavigation","AppContext","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","route","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","emailVerified","setEmailVerified","_useState7","_useState8","biometricAvailable","setBiometricAvailable","_ref2","params","showFingerprint","onPress","navigate","unsubscribe","user","replace","console","log","checkBiometricAvailability","_ref3","_asyncToGenerator","isHardwareAvailable","hasHardwareAsync","isEnrolled","isEnrolledAsync","apply","arguments","handleBiometricAuth","_ref4","_yield$LocalAuthentic","authenticateAsync","success","storedEmail","getItem","storedPassword","then","currentUser","alert","catch","error","errorMessage","message","handleLogin","trim","setItem","handlePasswordChange","text","numericValue","handleKeypadPress","value","updatedPassword","style","flex","justifyContent","children","source","require","resizeMode","styles","image","logoContainer","logo","title","input","placeholder","placeholderTextColor","onChangeText","keyboardType","autoCapitalize","maxLength","secureTextEntry","button","buttonText","marginTop","textAlign","buttonTextSignUp","disabled","create","alignItems","marginBottom","width","height","fontSize","fontWeight","color","borderColor","borderWidth","borderRadius","paddingHorizontal","margin","fontFamily","padding","backgroundColor","marginHorizontal","paddingVertical","buttonTextLogin","textDecorationLine","keypadContainer","flexDirection","keypadButton","keypadButtonText"],"sources":["C:/Users/User/E-wallet-GasTracker/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, ImageBackground } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\r\nimport { setDoc, doc } from \"firebase/firestore\";\r\nimport * as LocalAuthentication from \"expo-local-authentication\";\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { AppContext } from '../AppContext';\r\nconst Login = ({ navigation, route }) => {  \r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  const [biometricAvailable, setBiometricAvailable] = useState(false);\r\n  const { showFingerprint } = route.params || {};\r\n \r\n  const onPress = () => {\r\n    navigation.navigate(\"Registrationpage\", { showFingerprint}); // Replace `true` with the value you want to pass\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setEmail(user.email);\r\n        setEmailVerified(user.emailVerified);\r\n        navigation.replace(\"Main\");\r\n        console.log(\"email verified: \", user.emailVerified);\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const checkBiometricAvailability = async () => {\r\n      const isHardwareAvailable = await LocalAuthentication.hasHardwareAsync();\r\n      const isEnrolled = await LocalAuthentication.isEnrolledAsync();\r\n      setBiometricAvailable(isHardwareAvailable && isEnrolled);\r\n    };\r\n  \r\n    checkBiometricAvailability();\r\n  }, []);\r\n\r\n\r\n  const handleBiometricAuth = async () => {\r\n    if (showFingerprint) {\r\n    try {\r\n      const { success } = await LocalAuthentication.authenticateAsync();\r\n      if (success) {\r\n        const storedEmail = await AsyncStorage.getItem(\"email\");\r\n        const storedPassword = await AsyncStorage.getItem(\"password\");\r\n        if (storedEmail && storedPassword) {\r\n          signInWithEmailAndPassword(auth, storedEmail, storedPassword)\r\n            .then(() => {\r\n              const user = auth.currentUser;\r\n              if (user.emailVerified) {\r\n                navigation.navigate(\"Main\", { email: storedEmail });\r\n              } else {\r\n                alert(\"Email not verified. Please verify your email to login.\");\r\n                console.log(\"Email not verified\");\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              const errorMessage = error.message;\r\n              alert(errorMessage);\r\n              console.log(errorMessage);\r\n            });\r\n        } else {\r\n          console.log(\"Stored email or password is missing.\");\r\n        }\r\n        console.log(\"Biometric authentication successful\");\r\n      } else {\r\n        console.log(\"Biometric authentication failed\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Biometric authentication error:\", error);\r\n    }\r\n  } else {\r\n    console.log(\"Fingerprint login option is disabled\");\r\n  }\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    if (email.trim() === \"\") {\r\n      alert(\"Please enter an email.\");\r\n      return;\r\n    }\r\n    if (password.trim() === \"\") {\r\n      alert(\"Please enter a password.\");\r\n      return;\r\n    }\r\n\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(() => {\r\n        const user = auth.currentUser;\r\n        if (user.emailVerified) {\r\n          AsyncStorage.setItem(\"email\", email);\r\n          AsyncStorage.setItem(\"password\", password);\r\n          navigation.navigate(\"Main\", { email });\r\n        } else {\r\n          alert(\"Email not verified. Please verify your email to login.\");\r\n          console.log(\"Email not verified\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = error.message;\r\n        alert(errorMessage);\r\n        console.log(errorMessage);\r\n      });\r\n  };\r\n\r\n  const handlePasswordChange = (text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, \"\");\r\n    setPassword(numericValue);\r\n  };\r\n\r\n  const handleKeypadPress = (value) => {\r\n    const updatedPassword = password + value;\r\n    setPassword(updatedPassword);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n      <ImageBackground\r\n        source={require(\"../assets/background1.jpg\")}\r\n        resizeMode=\"cover\"\r\n        style={styles.image}\r\n      >\r\n        <View style={styles.logoContainer}>\r\n          <ImageBackground\r\n            style={styles.logo}\r\n            source={require(\"../assets/logo.png\")}\r\n          />\r\n        </View>\r\n\r\n        <Text style={styles.title}>LATO-LATO INC.</Text>\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Email\"\r\n          placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n        />\r\n             <TextInput\r\n  style={styles.input}\r\n  placeholder=\"Password\"\r\n  placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n  value={password}\r\n  maxLength={6}\r\n  onChangeText={(text) => {\r\n    const numericValue = text.replace(/[^0-9]/g, '');\r\n    setPassword(numericValue);\r\n\r\n  }}\r\n  keyboardType=\"numeric\" // Set the keyboard type to numeric\r\n  secureTextEntry\r\n/>\r\n        \r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={handleLogin}\r\n        >\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text style={{ marginTop: 10, textAlign: \"center\" }}>\r\n          Already have an account?\r\n        </Text>\r\n        <TouchableOpacity onPress={onPress}>\r\n          <View style={styles.buttonText}>\r\n            <Text style={styles.buttonTextSignUp}>Signup here!</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n  style={styles.button}\r\n  onPress={handleBiometricAuth}\r\n  disabled={!biometricAvailable} // Disable the button if biometric authentication is not available\r\n>\r\n  <Text style={styles.buttonText}>Login with Biometrics</Text>\r\n</TouchableOpacity>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  logoContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: \"bold\",\r\n    color: \"black\",\r\n    textAlign: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"black\",\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 15,\r\n    margin: 10,\r\n    fontFamily: \"Roboto\",\r\n    padding: 5,\r\n    backgroundColor: \"white\",\r\n  },\r\n  button: {\r\n    marginHorizontal: 80,\r\n    backgroundColor: \"#111827\",\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginTop: 15,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonTextLogin: {\r\n    marginTop: 10,\r\n    color: \"black\",\r\n    fontSize: 13,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n  keypadContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  keypadButton: {\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: \"gray\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginHorizontal: 5,\r\n    borderRadius: 5,\r\n  },\r\n  keypadButtonText: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonTextSignUp: {\r\n    marginTop: 10,\r\n    color: \"black\",\r\n    fontSize: 13,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}