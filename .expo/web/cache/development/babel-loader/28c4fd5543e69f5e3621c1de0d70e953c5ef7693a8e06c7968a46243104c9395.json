{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, getDoc, doc, getDocs, setDoc, addDoc, Timestamp, orderBy, limit } from \"firebase/firestore\";\nimport { auth, db, firebase } from \"../firebase\";\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut, signInWithPhoneNumber } from \"firebase/auth\";\nimport { encode } from 'base-64';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SendCash = function SendCash(_ref) {\n  var _route$params;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(5000),\n    _useState2 = _slicedToArray(_useState, 2),\n    balance = _useState2[0],\n    setBalance = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setUserInfo = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    fullname = _useState8[0],\n    setName = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    recipientEmail = _useState10[0],\n    setRecipientEmail = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    amount = _useState12[0],\n    setAmount = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    recentContacts = _useState14[0],\n    setRecentContacts = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    ConfirmPassword = _useState16[0],\n    setPassword = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    verificationCode = _useState18[0],\n    setVerificationCode = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    phoneNumber = _useState20[0],\n    setPhoneNumber = _useState20[1];\n  var scannedData = (_route$params = route.params) == null ? void 0 : _route$params.scannedData;\n  if (!global.btoa) {\n    global.btoa = encode;\n  }\n  var getRecipientUid = function () {\n    var _ref2 = _asyncToGenerator(function* (email) {\n      var usersRef = collection(db, 'users');\n      var q = query(usersRef, where('email', '==', email));\n      var querySnapshot = yield getDocs(q);\n      if (!querySnapshot.empty) {\n        var recipient = querySnapshot.docs[0];\n        return recipient.id;\n      }\n      throw new Error('Recipient not found');\n    });\n    return function getRecipientUid(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var ConfirmPin = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var currentUserUID = auth.currentUser.uid;\n      var userRef = doc(db, 'users', currentUserUID);\n      try {\n        var userDoc = yield getDoc(userRef);\n        if (userDoc.exists()) {\n          var _userDoc$data = userDoc.data(),\n            password = _userDoc$data.password;\n          if (password !== ConfirmPassword) {\n            console.log('Password does not match');\n          }\n        } else {\n          console.log('User document not found');\n        }\n      } catch (error) {\n        console.error('Error retrieving password:', error);\n      }\n    });\n    return function ConfirmPin() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var loadRecentTransactions = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var currentUserUID = auth.currentUser.uid;\n      var recentTransactionsRef = collection(db, 'users', currentUserUID, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent');\n      var phoneNumber = collection(db, 'users', currentUserUID, 'contact');\n      onSnapshot(query(recentTransactionsRef, orderBy('Timestamp', 'desc'), limit(5)), function (snapshot) {\n        var emailSet = new Set();\n        snapshot.forEach(function (doc) {\n          var _doc$data = doc.data(),\n            ReceiverEmail = _doc$data.ReceiverEmail;\n          emailSet.add(ReceiverEmail);\n        });\n        var recentContacts = Array.from(emailSet);\n        setRecentContacts(recentContacts);\n      }, function (error) {\n        console.error('Error fetching recent transactions:', error);\n      });\n    });\n    return function loadRecentTransactions() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var transferFunds = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var user = auth.currentUser;\n      if (user && user.emailVerified) {\n        try {\n          var recipientUid = yield getRecipientUid(recipientEmail);\n          var sfDocRef = doc(db, 'users', recipientUid);\n          yield runTransaction(db, function () {\n            var _ref6 = _asyncToGenerator(function* (transaction) {\n              var sfDoc = yield transaction.get(sfDocRef);\n              if (!sfDoc.exists()) {\n                throw new Error('Document does not exist!');\n              }\n              var newWallet = sfDoc.data().wallet + Number(amount);\n              transaction.update(sfDocRef, {\n                wallet: newWallet\n              });\n            });\n            return function (_x2) {\n              return _ref6.apply(this, arguments);\n            };\n          }());\n          console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\n          var deduct = function () {\n            var _ref7 = _asyncToGenerator(function* () {\n              var user = auth.currentUser.uid;\n              if (user) {\n                var uid = user;\n                try {\n                  yield runTransaction(db, function () {\n                    var _ref8 = _asyncToGenerator(function* (transaction) {\n                      var userRef = firebase.firestore().collection('users').doc(uid);\n                      var sf = yield transaction.get(userRef);\n                      if (!sf.exists) {\n                        throw new Error('Document does not exist!');\n                      }\n                      var deductedWallet = sf.data().wallet - Number(amount);\n                      transaction.update(userRef, {\n                        wallet: deductedWallet\n                      });\n                      alert('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\n                      console.log('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\n                    });\n                    return function (_x3) {\n                      return _ref8.apply(this, arguments);\n                    };\n                  }());\n                } catch (error) {\n                  alert('Error updating wallet:', error);\n                  console.error('Error updating wallet:', error);\n                }\n              }\n            });\n            return function deduct() {\n              return _ref7.apply(this, arguments);\n            };\n          }();\n          yield deduct();\n          var _user = auth.currentUser.uid;\n          if (_user) {\n            var uid = _user;\n            var SenderEmail = auth.currentUser.email;\n            var newTransactions = function () {\n              var _ref9 = _asyncToGenerator(function* () {\n                yield addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\n                  transactions: amount,\n                  Timestamp: new Date(),\n                  ReceiverUid: recipientUid,\n                  ReceiverEmail: recipientEmail\n                });\n              });\n              return function newTransactions() {\n                return _ref9.apply(this, arguments);\n              };\n            }();\n            yield newTransactions();\n            var receivedHis = function () {\n              var _ref10 = _asyncToGenerator(function* () {\n                yield addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\n                  transactions: amount,\n                  Timestamp: new Date(),\n                  Sender: uid,\n                  SenderEmail: SenderEmail\n                });\n              });\n              return function receivedHis() {\n                return _ref10.apply(this, arguments);\n              };\n            }();\n            yield receivedHis();\n            var isRecipientInContacts = recentContacts.includes(recipientEmail);\n            if (!isRecipientInContacts) {\n              var updatedContacts = [recipientEmail].concat(_toConsumableArray(recentContacts.slice(0, 4)));\n              setRecentContacts(updatedContacts);\n            }\n          }\n        } catch (error) {\n          console.error('Error transferring funds:', error);\n        }\n      }\n    });\n    return function transferFunds() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        var uid = user.uid;\n        setEmail(user.email);\n        var getWallet = function () {\n          var _ref11 = _asyncToGenerator(function* () {\n            var docRef = doc(db, 'users', uid);\n            var unsubscribe = onSnapshot(docRef, function (docSnap) {\n              if (docSnap.exists()) {\n                console.log('Document data:', docSnap.data());\n                var data = docSnap.data();\n                setUserInfo(data);\n              } else {\n                console.log('No such document!');\n              }\n            });\n            return unsubscribe;\n          });\n          return function getWallet() {\n            return _ref11.apply(this, arguments);\n          };\n        }();\n        var unsubscribe = getWallet();\n        return function () {\n          unsubscribe();\n        };\n      } else {\n        navigation.navigate('Login');\n      }\n    });\n  }, []);\n  useEffect(function () {\n    loadRecentTransactions();\n    setRecipientEmail(scannedData);\n  }, []);\n  var handleTransferFunds = function handleTransferFunds() {\n    setBalance(balance - 100);\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background1.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: [_jsxs(View, {\n        style: styles.balanceContainer,\n        children: [_jsx(Text, {\n          style: styles.balanceText,\n          children: \"Current Balance\"\n        }), _jsx(View, {\n          style: styles.currentBalanceContainer,\n          children: _jsxs(Text, {\n            style: styles.amountText,\n            children: [\"\\u20B1 \", userInfo.wallet]\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.recentContactsContainer,\n        children: [_jsx(Text, {\n          style: styles.recentContactsText,\n          children: \"Recent Contacts:\"\n        }), _jsx(View, {\n          style: styles.recentContactsRow\n        }), _jsx(FlatList, {\n          data: recentContacts,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref12) {\n            var item = _ref12.item;\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setRecipientEmail(item);\n              },\n              children: _jsxs(View, {\n                style: styles.contactIconContainer,\n                children: [_jsx(Ionicons, {\n                  name: \"person-circle-outline\",\n                  size: 24,\n                  color: \"white\"\n                }), _jsx(Text, {\n                  style: styles.recentContactText,\n                  children: item\n                })]\n              })\n            });\n          }\n        })]\n      }), _jsxs(View, {\n        style: {\n          padding: 20\n        },\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Input Recipient's Email: \",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          value: recipientEmail,\n          onChangeText: setRecipientEmail\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Input Amount: \",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          value: amount,\n          onChangeText: setAmount\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter Password\",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          secureTextEntry: true,\n          value: ConfirmPassword,\n          onChangeText: setPassword\n        }), _jsx(TouchableOpacity, {\n          style: styles.transferButton,\n          onPress: ConfirmPin,\n          children: _jsx(Text, {\n            style: styles.transferButtonText,\n            children: \"Send Funds\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  balanceContainer: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  balanceText: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#fff',\n    fontFamily: 'Roboto'\n  },\n  currentBalanceContainer: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  amountText: {\n    fontSize: 23,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  recentContactsContainer: {\n    alignItems: 'center'\n  },\n  recentContactsText: {\n    fontSize: 16,\n    color: '#fff',\n    marginBottom: 5\n  },\n  recentContactText: {\n    fontSize: 14,\n    color: '#fff',\n    marginBottom: 3\n  },\n  input: {\n    height: 40,\n    borderColor: \"black\",\n    borderWidth: 2,\n    borderRadius: 5,\n    marginBottom: 10,\n    padding: 10,\n    margin: 10,\n    fontFamily: 'Roboto',\n    backgroundColor: 'white'\n  },\n  transferButton: {\n    marginHorizontal: 80,\n    backgroundColor: \"#111827\",\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  transferButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  recentContactsRow: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  contactIconContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 10\n  }\n});\nexport default SendCash;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","TextInput","ImageBackground","FlatList","AsyncStorage","Ionicons","collection","query","where","onSnapshot","writeBatch","runTransaction","getDoc","doc","getDocs","setDoc","addDoc","Timestamp","orderBy","limit","auth","db","firebase","onAuthStateChanged","signInWithEmailAndPassword","signOut","signInWithPhoneNumber","encode","jsx","_jsx","jsxs","_jsxs","SendCash","_ref","_route$params","route","navigation","_useState","_useState2","_slicedToArray","balance","setBalance","_useState3","_useState4","email","setEmail","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","fullname","setName","_useState9","_useState10","recipientEmail","setRecipientEmail","_useState11","_useState12","amount","setAmount","_useState13","_useState14","recentContacts","setRecentContacts","_useState15","_useState16","ConfirmPassword","setPassword","_useState17","_useState18","verificationCode","setVerificationCode","_useState19","_useState20","phoneNumber","setPhoneNumber","scannedData","params","global","btoa","getRecipientUid","_ref2","_asyncToGenerator","usersRef","q","querySnapshot","empty","recipient","docs","id","Error","_x","apply","arguments","ConfirmPin","_ref3","currentUserUID","currentUser","uid","userRef","userDoc","exists","_userDoc$data","data","password","console","log","error","loadRecentTransactions","_ref4","recentTransactionsRef","snapshot","emailSet","Set","forEach","_doc$data","ReceiverEmail","add","Array","from","transferFunds","_ref5","user","emailVerified","recipientUid","sfDocRef","_ref6","transaction","sfDoc","get","newWallet","wallet","Number","update","_x2","deduct","_ref7","_ref8","firestore","sf","deductedWallet","alert","_x3","SenderEmail","newTransactions","_ref9","transactions","Date","ReceiverUid","receivedHis","_ref10","Sender","isRecipientInContacts","includes","updatedContacts","concat","_toConsumableArray","slice","getWallet","_ref11","docRef","unsubscribe","docSnap","navigate","handleTransferFunds","style","flex","justifyContent","children","source","require","resizeMode","styles","image","balanceContainer","balanceText","currentBalanceContainer","amountText","recentContactsContainer","recentContactsText","recentContactsRow","keyExtractor","item","index","toString","renderItem","_ref12","onPress","contactIconContainer","name","size","color","recentContactText","padding","input","placeholder","placeholderTextColor","value","onChangeText","secureTextEntry","transferButton","transferButtonText","create","alignItems","marginBottom","fontSize","fontWeight","fontFamily","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","height","borderColor","borderWidth","margin","marginHorizontal","marginTop","flexDirection","marginRight"],"sources":["C:/Users/User/E-wallet-GasTracker/screens/SendCash.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, ImageBackground, FlatList } from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction,getDoc, doc, getDocs, setDoc, addDoc, Timestamp, orderBy, limit } from \"firebase/firestore\";\r\nimport { auth, db, firebase } from \"../firebase\";\r\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut, signInWithPhoneNumber } from \"firebase/auth\";\r\n\r\nimport { encode } from 'base-64';\r\n\r\n\r\nconst SendCash = ({ route, navigation }) => {\r\n  const [balance, setBalance] = useState(5000); // Initial balance\r\n  const [email, setEmail] = useState();\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [fullname, setName] = useState();\r\n  const [recipientEmail, setRecipientEmail] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [recentContacts, setRecentContacts] = useState([]);\r\n  const [ConfirmPassword, setPassword] = useState(\"\");\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  \r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n\r\n  \r\n\r\n  const scannedData = route.params?.scannedData\r\n  if (!global.btoa) {\r\n    global.btoa = encode;\r\n  }\r\n\r\n  \r\n\r\n  const getRecipientUid = async (email) => {\r\n    const usersRef = collection(db, 'users');\r\n    const q = query(usersRef, where('email', '==', email));\r\n    const querySnapshot = await getDocs(q);\r\n    if (!querySnapshot.empty) {\r\n      const recipient = querySnapshot.docs[0];\r\n      return recipient.id;\r\n    }\r\n    throw new Error('Recipient not found');\r\n  };\r\n\r\nconst ConfirmPin = async () => {\r\n  const currentUserUID = auth.currentUser.uid;\r\n  const userRef = doc(db, 'users', currentUserUID);\r\n  \r\n  try {\r\n    const userDoc = await getDoc(userRef);\r\n    if (userDoc.exists()) {\r\n      const { password } = userDoc.data();\r\n      if(password!== ConfirmPassword) {\r\n        console.log('Password does not match');\r\n      }  \r\n    } else {\r\n      console.log('User document not found');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error retrieving password:', error);\r\n  }\r\n\r\n \r\n};\r\n\r\n  const loadRecentTransactions = async () => {\r\n    const currentUserUID = auth.currentUser.uid;\r\n    const recentTransactionsRef = collection(\r\n      db,\r\n      'users',\r\n      currentUserUID,\r\n      'history',\r\n      'DUgVrFDJhas4wAuX07re',\r\n      'Sent'\r\n    );\r\n    const phoneNumber = collection(\r\n      db,\r\n      'users',\r\n      currentUserUID,\r\n      'contact'\r\n    );\r\n  \r\n    onSnapshot(\r\n      query(recentTransactionsRef, orderBy('Timestamp', 'desc'), limit(5)),\r\n      (snapshot) => {\r\n        const emailSet = new Set(); // Use a Set to store unique emails\r\n        snapshot.forEach((doc) => {\r\n          const { ReceiverEmail } = doc.data();\r\n          emailSet.add(ReceiverEmail); // Add email to the Set\r\n        });\r\n        const recentContacts = Array.from(emailSet); // Convert Set back to an array\r\n        setRecentContacts(recentContacts);\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching recent transactions:', error);\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n  const transferFunds = async () => {\r\n    const user = auth.currentUser;\r\n  if (user && user.emailVerified) {\r\n    try {\r\n      const recipientUid = await getRecipientUid(recipientEmail);\r\n      const sfDocRef = doc(db, 'users', recipientUid);\r\n\r\n      await runTransaction(db, async (transaction) => {\r\n        const sfDoc = await transaction.get(sfDocRef);\r\n        if (!sfDoc.exists()) {\r\n          throw new Error('Document does not exist!');\r\n        }\r\n        const newWallet = sfDoc.data().wallet + Number(amount);\r\n        transaction.update(sfDocRef, { wallet: newWallet });\r\n      });\r\n      console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\r\n\r\n      const deduct = async () => {\r\n        const user = auth.currentUser.uid;\r\n        if (user) {\r\n          const uid = user;\r\n          try {\r\n            await runTransaction(db, async (transaction) => {\r\n              const userRef = firebase.firestore().collection('users').doc(uid);\r\n              const sf = await transaction.get(userRef);\r\n              if (!sf.exists) {\r\n                throw new Error('Document does not exist!');\r\n              }\r\n              const deductedWallet = sf.data().wallet - Number(amount);\r\n              transaction.update(userRef, {\r\n                wallet: deductedWallet,\r\n              });\r\n              alert('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\r\n              console.log('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\r\n            });\r\n          } catch (error) {\r\n            alert('Error updating wallet:', error);\r\n            console.error('Error updating wallet:', error);\r\n          }\r\n        }\r\n      };\r\n      await deduct();\r\n\r\n\r\n\r\n      const user = auth.currentUser.uid;\r\n      if (user) {\r\n        const uid = user;\r\n        const SenderEmail = auth.currentUser.email;\r\n        const newTransactions = async () => {\r\n          await addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\r\n            transactions: amount,\r\n            Timestamp: new Date(),\r\n            ReceiverUid: recipientUid,\r\n            ReceiverEmail: recipientEmail,\r\n          });\r\n        };\r\n        await newTransactions();\r\n\r\n        const receivedHis = async () => {\r\n          await addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\r\n            transactions: amount,\r\n            Timestamp: new Date(),\r\n            Sender: uid,\r\n            SenderEmail: SenderEmail,\r\n          });\r\n        };\r\n        await receivedHis();\r\n\r\n           // Check if the recipient's email is already in the recent contacts list\r\n      const isRecipientInContacts = recentContacts.includes(recipientEmail);\r\n      if (!isRecipientInContacts) {\r\n        const updatedContacts = [recipientEmail, ...recentContacts.slice(0, 4)];\r\n        setRecentContacts(updatedContacts);\r\n      }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error transferring funds:', error);\r\n    }\r\n  }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        const uid = user.uid;\r\n        setEmail(user.email);\r\n\r\n        const getWallet = async () => {\r\n          const docRef = doc(db, 'users', uid);\r\n          const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n              console.log('Document data:', docSnap.data());\r\n              const data = docSnap.data();\r\n              setUserInfo(data);\r\n            } else {\r\n              console.log('No such document!');\r\n            }\r\n          });\r\n\r\n          return unsubscribe;\r\n        };\r\n\r\n        const unsubscribe = getWallet();\r\n\r\n        return () =>{\r\n          unsubscribe();\r\n        };\r\n      } else {\r\n        navigation.navigate('Login');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadRecentTransactions();\r\n    setRecipientEmail(scannedData);\r\n  }, []);\r\n\r\n  const handleTransferFunds = () => {\r\n    setBalance(balance - 100);\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center' }}>\r\n      <ImageBackground source={require('../assets/background1.jpg')} resizeMode=\"cover\" style={styles.image}>\r\n        <View style={styles.balanceContainer}>\r\n          <Text style={styles.balanceText}>Current Balance</Text>\r\n          <View style={styles.currentBalanceContainer}>\r\n            <Text style={styles.amountText}>₱ {userInfo.wallet}</Text>\r\n          </View>\r\n \r\n        </View>\r\n        <View style={styles.recentContactsContainer}>\r\n            <Text style={styles.recentContactsText}>Recent Contacts:</Text>\r\n            \r\n            <View style={styles.recentContactsRow}></View>\r\n  <FlatList\r\n            data={recentContacts}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity onPress={() => setRecipientEmail(item)}>\r\n                <View style={styles.contactIconContainer}>\r\n                  <Ionicons name=\"person-circle-outline\" size={24} color=\"white\" />\r\n                  <Text style={styles.recentContactText}>{item}</Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n          />\r\n          </View>\r\n        <View style={{ padding: 20 }}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Input Recipient's Email: \"\r\n            placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n            value={recipientEmail}\r\n            onChangeText={setRecipientEmail}\r\n          />\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Input Amount: \"\r\n            placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n            value={amount}\r\n            onChangeText={setAmount}\r\n          />\r\n          {/* <TextInput\r\n            style={{ borderWidth: 1, padding: 10 }}\r\n            placeholder=\"Enter Phone Numbe\"\r\n            value={phoneNumber}\r\n            \r\n          /> */}\r\n\r\n<TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter Password\"\r\n            placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n            secureTextEntry\r\n            value={ConfirmPassword}\r\n            onChangeText={setPassword}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.transferButton}\r\n            onPress={ConfirmPin}\r\n          \r\n          >\r\n            <Text style={styles.transferButtonText}>Send Funds</Text>\r\n\r\n          </TouchableOpacity>\r\n         \r\n        </View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  balanceContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 30,\r\n  },\r\n  balanceText: {\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: '#fff',\r\n    fontFamily: 'Roboto',\r\n  },\r\n  currentBalanceContainer: {\r\n    backgroundColor: '#fff',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  amountText: {\r\n    fontSize: 23,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  recentContactsContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  recentContactsText: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n    marginBottom: 5,\r\n  },\r\n  recentContactText: {\r\n    fontSize: 14,\r\n    color: '#fff',\r\n    marginBottom: 3,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"black\",\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n    margin: 10,\r\n    fontFamily: 'Roboto',\r\n    backgroundColor: 'white'\r\n  },\r\n  transferButton: {\r\n    marginHorizontal: 80,\r\n    backgroundColor: \"#111827\",\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginTop: 15,\r\n    alignItems: 'center'\r\n  },\r\n  transferButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  recentContactsRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  contactIconContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginRight: 10,\r\n  },\r\n\r\n});\r\n\r\nexport default SendCash;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}