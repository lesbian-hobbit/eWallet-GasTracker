{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/core';\nimport { auth, firebase } from \"../firebase\";\nimport { onSnapshot, orderBy } from 'firebase/firestore';\nimport { Color, FontFamily } from \"../GlobalStyles\";\nimport * as NotificationsExpo from 'expo-notifications';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Notifications = function Notifications() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    logInfo = _useState2[0],\n    setLogs = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedTransaction = _useState4[0],\n    setSelectedTransaction = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    modalVisible = _useState6[0],\n    setModalVisible = _useState6[1];\n  var navigation = useNavigation();\n  var registerForPushNotifications = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var _yield$Permissions$as = yield Permissions.askAsync(Permissions.NOTIFICATIONS),\n        status = _yield$Permissions$as.status;\n      if (status !== 'granted') {\n        console.log('Permission not granted!');\n        return;\n      }\n      var token = yield Notifications.getExpoPushTokenAsync();\n      console.log('Notification token:', token);\n    });\n    return function registerForPushNotifications() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var listenForNotifications = function listenForNotifications() {\n    Notifications.addListener(function (notification) {\n      console.log('Received notification:', notification);\n    });\n  };\n  var onPress = function onPress() {\n    navigation.navigate('Main');\n  };\n  var openModal = function openModal(transaction) {\n    setSelectedTransaction(transaction);\n    setModalVisible(true);\n  };\n  var closeModal = function closeModal() {\n    setSelectedTransaction(null);\n    setModalVisible(false);\n  };\n  useEffect(function () {\n    var user = firebase.auth().currentUser;\n    if (user) {\n      var uid = user.uid;\n      var receivedMessagesRef = firebase.firestore().collection('users').doc(uid).collection('notes').doc('messages').collection('receivedMessages');\n      var unsubscribe = receivedMessagesRef.onSnapshot(function (snapshot) {\n        snapshot.docChanges().forEach(function (change) {\n          if (change.type === 'added') {\n            var _change$doc$data = change.doc.data(),\n              transactions = _change$doc$data.transactions,\n              SenderEmail = _change$doc$data.SenderEmail,\n              Note = _change$doc$data.Note;\n            sendNotification(transactions, SenderEmail, Note);\n          }\n        });\n      });\n      return function () {\n        return unsubscribe();\n      };\n    }\n  }, []);\n  var sendNotification = function sendNotification(transactions, senderEmail, note) {\n    var localNotification = {\n      title: 'New Message',\n      body: \"You just received \\u20B1\" + transactions + \" from \" + senderEmail + (note ? \" with a note: \" + note : ''),\n      android: {\n        sound: true\n      },\n      ios: {\n        sound: true\n      }\n    };\n    NotificationsExpo.presentLocalNotificationAsync(localNotification);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      showsVerticalScrollIndicator: false,\n      style: styles.flatlistContainer,\n      data: logInfo,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n          index = _ref2.index;\n        return _jsxs(TouchableOpacity, {\n          style: [styles.logItem, index === 0 && styles.highlightedLog],\n          onPress: function onPress() {\n            return openModal(item);\n          },\n          children: [_jsx(Text, {}, index), _jsxs(Text, {\n            style: styles.pesoText,\n            children: [\"Received from \", item.SenderEmail, item.Note ? \"\\n Note:\\n \" + item.Note : '']\n          }), _jsxs(Text, {\n            style: styles.pesoMoney,\n            children: [\"+\\u20B1\", item.transactions]\n          }), _jsx(Text, {\n            style: styles.timestampText,\n            children: item.Timestamp\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      contentContainerStyle: styles.listContainer\n    }), _jsx(View, {\n      style: styles.receivedButton,\n      children: _jsx(TouchableOpacity, {\n        style: styles.ButtonContainer,\n        onPress: onPress,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Go Back Home\"\n        })\n      })\n    }), _jsx(Modal, {\n      visible: modalVisible,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: closeModal,\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: selectedTransaction && _jsxs(View, {\n          style: styles.transactionModal,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Transaction Details\"\n          }), _jsxs(Text, {\n            style: styles.modTrans,\n            children: [\"Transaction: \\u20B1\", selectedTransaction.transactions]\n          }), _jsxs(Text, {\n            style: styles.modTrans,\n            children: [\"Sender: \", selectedTransaction.SenderEmail]\n          }), _jsxs(Text, {\n            style: styles.modTrans,\n            children: [\"Time: \", selectedTransaction.Timestamp]\n          }), _jsxs(Text, {\n            style: styles.modTrans,\n            children: [\"Note: \", selectedTransaction.Note]\n          }), _jsx(TouchableOpacity, {\n            style: styles.closeButton,\n            onPress: closeModal,\n            children: _jsx(Text, {\n              style: styles.closeButtonText,\n              children: \"Close\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default Notifications;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    backgroundColor: Color.blackModePrimaryDark,\n    justifyContent: \"center\",\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  ButtonContainer: {\n    marginHorizontal: 80,\n    backgroundColor: \"#7B61FF\",\n    paddingVertical: 10,\n    borderRadius: 15,\n    marginTop: 15\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 16,\n    fontFamily: FontFamily.poppinsMedium,\n    textAlign: \"center\"\n  },\n  receivedButton: {\n    padding: 10,\n    marginBottom: 10\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  flatlistContainer: {\n    padding: 20\n  },\n  listContainer: {\n    paddingBottom: 16\n  },\n  logItem: {\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n    padding: 16,\n    marginBottom: 8,\n    borderRadius: 8,\n    elevation: 2\n  },\n  highlightedLog: {\n    backgroundColor: '#7B61FF',\n    borderWidth: 2,\n    borderColor: '#FFA500'\n  },\n  image: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  logText: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: 'bold'\n  },\n  timestampText: {\n    fontSize: 12,\n    color: 'white',\n    alignSelf: 'flex-end'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  transactionModal: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 8,\n    width: '80%'\n  },\n  modalText: {\n    fontSize: 18,\n    marginBottom: 10,\n    fontFamily: FontFamily.poppinsBold\n  },\n  closeButton: {\n    marginTop: 20,\n    backgroundColor: '#7B61FF',\n    padding: 10,\n    borderRadius: 8,\n    alignSelf: 'flex-end'\n  },\n  closeButtonText: {\n    color: 'white',\n    fontFamily: FontFamily.poppinsMedium\n  },\n  pesoText: {\n    color: \"white\",\n    fontFamily: FontFamily.poppinsMedium\n  },\n  pesoMoney: {\n    color: '#7CFC00',\n    alignSelf: 'flex-end',\n    fontSize: 20\n  },\n  modTrans: {\n    fontFamily: FontFamily.poppinsMedium,\n    fontSize: 13\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useNavigation","auth","firebase","onSnapshot","orderBy","Color","FontFamily","NotificationsExpo","jsx","_jsx","jsxs","_jsxs","Notifications","_useState","_useState2","_slicedToArray","logInfo","setLogs","_useState3","_useState4","selectedTransaction","setSelectedTransaction","_useState5","_useState6","modalVisible","setModalVisible","navigation","registerForPushNotifications","_ref","_asyncToGenerator","_yield$Permissions$as","Permissions","askAsync","NOTIFICATIONS","status","console","log","token","getExpoPushTokenAsync","apply","arguments","listenForNotifications","addListener","notification","onPress","navigate","openModal","transaction","closeModal","user","currentUser","uid","receivedMessagesRef","firestore","collection","doc","unsubscribe","snapshot","docChanges","forEach","change","type","_change$doc$data","data","transactions","SenderEmail","Note","sendNotification","senderEmail","note","localNotification","title","body","android","sound","ios","presentLocalNotificationAsync","View","style","styles","container","children","FlatList","showsVerticalScrollIndicator","flatlistContainer","renderItem","_ref2","item","index","TouchableOpacity","logItem","highlightedLog","Text","pesoText","pesoMoney","timestampText","Timestamp","keyExtractor","id","contentContainerStyle","listContainer","receivedButton","ButtonContainer","buttonText","Modal","visible","animationType","transparent","onRequestClose","modalContainer","transactionModal","modalText","modTrans","closeButton","closeButtonText","StyleSheet","create","flexDirection","justifyContent","backgroundColor","blackModePrimaryDark","position","top","bottom","left","right","marginHorizontal","paddingVertical","borderRadius","marginTop","color","fontSize","fontFamily","poppinsMedium","textAlign","padding","marginBottom","loadingContainer","flex","alignItems","paddingBottom","elevation","borderWidth","borderColor","image","logText","fontWeight","alignSelf","width","poppinsBold"],"sources":["C:/Users/User/Pictures/E-Wallet-Project/screens/Notifications.js"],"sourcesContent":["import { View, Text, FlatList, StyleSheet, TouchableOpacity, ImageBackground, Modal } from 'react-native';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { auth, firebase } from '../firebase';\r\nimport { onSnapshot, orderBy } from 'firebase/firestore';\r\nimport {Color, FontFamily} from '../GlobalStyles'\r\n\r\nimport * as NotificationsExpo from 'expo-notifications';\r\n\r\n\r\n\r\nconst Notifications = () => {\r\n  const [logInfo, setLogs] = useState([]);\r\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const navigation = useNavigation();\r\n\r\n\r\n  const registerForPushNotifications = async () => {\r\n    const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\r\n    if (status !== 'granted') {\r\n      console.log('Permission not granted!');\r\n      return;\r\n    }\r\n  \r\n    const token = await Notifications.getExpoPushTokenAsync();\r\n    console.log('Notification token:', token);\r\n    // Save the token to your backend or use it to send notifications\r\n  };\r\n\r\n  const listenForNotifications = () => {\r\n    Notifications.addListener(notification => {\r\n      console.log('Received notification:', notification);\r\n      // Handle the received notification\r\n    });\r\n  };\r\n\r\n\r\n  const onPress = () => {\r\n    navigation.navigate('Main');\r\n  };\r\n\r\n  const openModal = (transaction) => {\r\n    setSelectedTransaction(transaction);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedTransaction(null);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const user = firebase.auth().currentUser;\r\n    if (user) {\r\n      const uid = user.uid;\r\n      const receivedMessagesRef = firebase\r\n        .firestore()\r\n        .collection('users')\r\n        .doc(uid)\r\n        .collection('notes')\r\n        .doc('messages')\r\n        .collection('receivedMessages');\r\n  \r\n      const unsubscribe = receivedMessagesRef.onSnapshot(snapshot => {\r\n        snapshot.docChanges().forEach(change => {\r\n          if (change.type === 'added') {\r\n            const { transactions, SenderEmail, Note } = change.doc.data();\r\n            // Trigger a notification when a new message is added\r\n            sendNotification(transactions, SenderEmail, Note);\r\n          }\r\n        });\r\n      });\r\n  \r\n      return () => unsubscribe();\r\n    }\r\n  }, []);\r\n  \r\n  const sendNotification = (transactions, senderEmail, note) => {\r\n    const localNotification = {\r\n      title: 'New Message',\r\n      body: `You just received ₱${transactions} from ${senderEmail}${note ? ` with a note: ${note}` : ''}`,\r\n      android: {\r\n        sound: true,\r\n      },\r\n      ios: {\r\n        sound: true,\r\n      },\r\n    };\r\n  \r\n    NotificationsExpo.presentLocalNotificationAsync(localNotification);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n        <FlatList\r\n          showsVerticalScrollIndicator={false}\r\n          style={styles.flatlistContainer}\r\n          data={logInfo}\r\n          renderItem={({ item, index }) => (\r\n            <TouchableOpacity\r\n              style={[styles.logItem, index === 0 && styles.highlightedLog]}\r\n              onPress={() => openModal(item)}\r\n            >\r\n              <Text key={index}></Text><Text style={styles.pesoText}>Received from {item.SenderEmail} \r\n              {item.Note ? `\\n Note:\\n ${item.Note}` : ''}</Text>\r\n              <Text style={styles.pesoMoney} >+₱{item.transactions}</Text>\r\n              <Text style={styles.timestampText}>{item.Timestamp}</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          keyExtractor={(item) => item.id}\r\n          contentContainerStyle={styles.listContainer}\r\n        />\r\n        <View style={styles.receivedButton}>\r\n          <TouchableOpacity style={styles.ButtonContainer} onPress={onPress}>\r\n            <Text style={styles.buttonText}>Go Back Home</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Modal\r\n          visible={modalVisible}\r\n          animationType=\"slide\"\r\n          transparent={true}  \r\n          onRequestClose={closeModal}\r\n        >\r\n          <View style={styles.modalContainer}>\r\n            {selectedTransaction && (\r\n              <View style={styles.transactionModal}>\r\n                <Text style={styles.modalText}>Transaction Details</Text>\r\n                <Text style= {styles.modTrans}>Transaction: ₱{selectedTransaction.transactions}</Text>\r\n                <Text style= {styles.modTrans}>Sender: {selectedTransaction.SenderEmail}</Text>\r\n                <Text style= {styles.modTrans}>Time: {selectedTransaction.Timestamp}</Text>\r\n                <Text style= {styles.modTrans}>Note: {selectedTransaction.Note}</Text>\r\n                <TouchableOpacity style={styles.closeButton} onPress={closeModal}>\r\n                  <Text style={styles.closeButtonText}>Close</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          </View>\r\n        </Modal>\r\n    \r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    backgroundColor: Color.blackModePrimaryDark,\r\n    justifyContent: \"center\",\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  ButtonContainer: {\r\n    marginHorizontal: 80,\r\n    backgroundColor: \"#7B61FF\",\r\n    paddingVertical: 10,\r\n    borderRadius: 15,\r\n    marginTop: 15,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontFamily:FontFamily.poppinsMedium,\r\n    textAlign: \"center\",\r\n  },\r\n  receivedButton: {\r\n    padding: 10,\r\n    marginBottom: 10\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  flatlistContainer: {\r\n    padding: 20,\r\n  },\r\n  listContainer: {\r\n    paddingBottom: 16,\r\n  },\r\n  logItem: {\r\n     backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n    padding: 16,\r\n    marginBottom: 8,\r\n    borderRadius: 8,\r\n    elevation: 2,\r\n  },\r\n  highlightedLog: {\r\n    backgroundColor: '#7B61FF',\r\n    borderWidth: 2,\r\n    borderColor: '#FFA500',\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  logText: {\r\n    fontSize: 16,\r\n    marginBottom: 8,\r\n    fontWeight: 'bold',\r\n  },\r\n  timestampText: {\r\n    fontSize: 12,\r\n    color: 'white',\r\n    alignSelf:'flex-end',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  transactionModal: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    borderRadius: 8,\r\n    width: '80%',\r\n  },\r\n  modalText: {\r\n    fontSize: 18,\r\n    marginBottom: 10,\r\n    fontFamily: FontFamily.poppinsBold,\r\n  },\r\n  closeButton: {\r\n    marginTop: 20,\r\n    backgroundColor: '#7B61FF',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  closeButtonText: {\r\n    color: 'white',\r\n    fontFamily: FontFamily.poppinsMedium,\r\n\r\n  },\r\n  pesoText:{\r\n    color: \"white\",\r\n    fontFamily:FontFamily.poppinsMedium,\r\n  },\r\n  pesoMoney:{\r\n    color: '#7CFC00',\r\n    alignSelf: 'flex-end',\r\n    fontSize: 20,\r\n    },\r\n    modTrans:{\r\n      fontFamily: FontFamily.poppinsMedium,\r\n      fontSize: 13,\r\n    },\r\n});\r\n"],"mappings":";;;;;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,IAAI,EAAEC,QAAQ;AACvB,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,SAAQC,KAAK,EAAEC,UAAU;AAEzB,OAAO,KAAKC,iBAAiB,MAAM,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIxD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,IAAAC,SAAA,GAA2Bf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhCG,OAAO,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACvB,IAAAI,UAAA,GAAsDpB,QAAQ,CAAC,IAAI,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7DE,mBAAmB,GAAAD,UAAA;IAAEE,sBAAsB,GAAAF,UAAA;EAClD,IAAAG,UAAA,GAAwCxB,QAAQ,CAAC,KAAK,CAAC;IAAAyB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAhDE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAMG,UAAU,GAAG1B,aAAa,CAAC,CAAC;EAGlC,IAAM2B,4BAA4B;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/C,IAAAC,qBAAA,SAAyBC,WAAW,CAACC,QAAQ,CAACD,WAAW,CAACE,aAAa,CAAC;QAAhEC,MAAM,GAAAJ,qBAAA,CAANI,MAAM;MACd,IAAIA,MAAM,KAAK,SAAS,EAAE;QACxBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtC;MACF;MAEA,IAAMC,KAAK,SAASzB,aAAa,CAAC0B,qBAAqB,CAAC,CAAC;MACzDH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,KAAK,CAAC;IAE3C,CAAC;IAAA,gBAVKV,4BAA4BA,CAAA;MAAA,OAAAC,IAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUjC;EAED,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA,EAAS;IACnC7B,aAAa,CAAC8B,WAAW,CAAC,UAAAC,YAAY,EAAI;MACxCR,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEO,YAAY,CAAC;IAErD,CAAC,CAAC;EACJ,CAAC;EAGD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBlB,UAAU,CAACmB,QAAQ,CAAC,MAAM,CAAC;EAC7B,CAAC;EAED,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,WAAW,EAAK;IACjC1B,sBAAsB,CAAC0B,WAAW,CAAC;IACnCtB,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,IAAMuB,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvB3B,sBAAsB,CAAC,IAAI,CAAC;IAC5BI,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED1B,SAAS,CAAC,YAAM;IACd,IAAMkD,IAAI,GAAG/C,QAAQ,CAACD,IAAI,CAAC,CAAC,CAACiD,WAAW;IACxC,IAAID,IAAI,EAAE;MACR,IAAME,GAAG,GAAGF,IAAI,CAACE,GAAG;MACpB,IAAMC,mBAAmB,GAAGlD,QAAQ,CACjCmD,SAAS,CAAC,CAAC,CACXC,UAAU,CAAC,OAAO,CAAC,CACnBC,GAAG,CAACJ,GAAG,CAAC,CACRG,UAAU,CAAC,OAAO,CAAC,CACnBC,GAAG,CAAC,UAAU,CAAC,CACfD,UAAU,CAAC,kBAAkB,CAAC;MAEjC,IAAME,WAAW,GAAGJ,mBAAmB,CAACjD,UAAU,CAAC,UAAAsD,QAAQ,EAAI;QAC7DA,QAAQ,CAACC,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,UAAAC,MAAM,EAAI;UACtC,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;YAC3B,IAAAC,gBAAA,GAA4CF,MAAM,CAACL,GAAG,CAACQ,IAAI,CAAC,CAAC;cAArDC,YAAY,GAAAF,gBAAA,CAAZE,YAAY;cAAEC,WAAW,GAAAH,gBAAA,CAAXG,WAAW;cAAEC,IAAI,GAAAJ,gBAAA,CAAJI,IAAI;YAEvCC,gBAAgB,CAACH,YAAY,EAAEC,WAAW,EAAEC,IAAI,CAAC;UACnD;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,OAAO;QAAA,OAAMV,WAAW,CAAC,CAAC;MAAA;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMW,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIH,YAAY,EAAEI,WAAW,EAAEC,IAAI,EAAK;IAC5D,IAAMC,iBAAiB,GAAG;MACxBC,KAAK,EAAE,aAAa;MACpBC,IAAI,+BAAwBR,YAAY,cAASI,WAAW,IAAGC,IAAI,sBAAoBA,IAAI,GAAK,EAAE,CAAE;MACpGI,OAAO,EAAE;QACPC,KAAK,EAAE;MACT,CAAC;MACDC,GAAG,EAAE;QACHD,KAAK,EAAE;MACT;IACF,CAAC;IAEDnE,iBAAiB,CAACqE,6BAA6B,CAACN,iBAAiB,CAAC;EACpE,CAAC;EAED,OACE3D,KAAA,CAACkE,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BxE,IAAA,CAACyE,QAAQ;MACPC,4BAA4B,EAAE,KAAM;MACpCL,KAAK,EAAEC,MAAM,CAACK,iBAAkB;MAChCrB,IAAI,EAAE/C,OAAQ;MACdqE,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;UAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;QAAA,OACxB7E,KAAA,CAAC8E,gBAAgB;UACfX,KAAK,EAAE,CAACC,MAAM,CAACW,OAAO,EAAEF,KAAK,KAAK,CAAC,IAAIT,MAAM,CAACY,cAAc,CAAE;UAC9D/C,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAME,SAAS,CAACyC,IAAI,CAAC;UAAA,CAAC;UAAAN,QAAA,GAE/BxE,IAAA,CAACmF,IAAI,MAAMJ,KAAa,CAAC,EAAA7E,KAAA,CAACiF,IAAI;YAACd,KAAK,EAAEC,MAAM,CAACc,QAAS;YAAAZ,QAAA,GAAC,gBAAc,EAACM,IAAI,CAACtB,WAAW,EACrFsB,IAAI,CAACrB,IAAI,mBAAiBqB,IAAI,CAACrB,IAAI,GAAK,EAAE;UAAA,CAAO,CAAC,EACnDvD,KAAA,CAACiF,IAAI;YAACd,KAAK,EAAEC,MAAM,CAACe,SAAU;YAAAb,QAAA,GAAE,SAAE,EAACM,IAAI,CAACvB,YAAY;UAAA,CAAO,CAAC,EAC5DvD,IAAA,CAACmF,IAAI;YAACd,KAAK,EAAEC,MAAM,CAACgB,aAAc;YAAAd,QAAA,EAAEM,IAAI,CAACS;UAAS,CAAO,CAAC;QAAA,CAC1C,CAAC;MAAA,CACnB;MACFC,YAAY,EAAE,SAAAA,aAACV,IAAI;QAAA,OAAKA,IAAI,CAACW,EAAE;MAAA,CAAC;MAChCC,qBAAqB,EAAEpB,MAAM,CAACqB;IAAc,CAC7C,CAAC,EACF3F,IAAA,CAACoE,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACsB,cAAe;MAAApB,QAAA,EACjCxE,IAAA,CAACgF,gBAAgB;QAACX,KAAK,EAAEC,MAAM,CAACuB,eAAgB;QAAC1D,OAAO,EAAEA,OAAQ;QAAAqC,QAAA,EAChExE,IAAA,CAACmF,IAAI;UAACd,KAAK,EAAEC,MAAM,CAACwB,UAAW;UAAAtB,QAAA,EAAC;QAAY,CAAM;MAAC,CACnC;IAAC,CACf,CAAC,EACPxE,IAAA,CAAC+F,KAAK;MACJC,OAAO,EAAEjF,YAAa;MACtBkF,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAE,IAAK;MAClBC,cAAc,EAAE5D,UAAW;MAAAiC,QAAA,EAE3BxE,IAAA,CAACoE,IAAI;QAACC,KAAK,EAAEC,MAAM,CAAC8B,cAAe;QAAA5B,QAAA,EAChC7D,mBAAmB,IAClBT,KAAA,CAACkE,IAAI;UAACC,KAAK,EAAEC,MAAM,CAAC+B,gBAAiB;UAAA7B,QAAA,GACnCxE,IAAA,CAACmF,IAAI;YAACd,KAAK,EAAEC,MAAM,CAACgC,SAAU;YAAA9B,QAAA,EAAC;UAAmB,CAAM,CAAC,EACzDtE,KAAA,CAACiF,IAAI;YAACd,KAAK,EAAGC,MAAM,CAACiC,QAAS;YAAA/B,QAAA,GAAC,qBAAc,EAAC7D,mBAAmB,CAAC4C,YAAY;UAAA,CAAO,CAAC,EACtFrD,KAAA,CAACiF,IAAI;YAACd,KAAK,EAAGC,MAAM,CAACiC,QAAS;YAAA/B,QAAA,GAAC,UAAQ,EAAC7D,mBAAmB,CAAC6C,WAAW;UAAA,CAAO,CAAC,EAC/EtD,KAAA,CAACiF,IAAI;YAACd,KAAK,EAAGC,MAAM,CAACiC,QAAS;YAAA/B,QAAA,GAAC,QAAM,EAAC7D,mBAAmB,CAAC4E,SAAS;UAAA,CAAO,CAAC,EAC3ErF,KAAA,CAACiF,IAAI;YAACd,KAAK,EAAGC,MAAM,CAACiC,QAAS;YAAA/B,QAAA,GAAC,QAAM,EAAC7D,mBAAmB,CAAC8C,IAAI;UAAA,CAAO,CAAC,EACtEzD,IAAA,CAACgF,gBAAgB;YAACX,KAAK,EAAEC,MAAM,CAACkC,WAAY;YAACrE,OAAO,EAAEI,UAAW;YAAAiC,QAAA,EAC/DxE,IAAA,CAACmF,IAAI;cAACd,KAAK,EAAEC,MAAM,CAACmC,eAAgB;cAAAjC,QAAA,EAAC;YAAK,CAAM;UAAC,CACjC,CAAC;QAAA,CACf;MACP,CACG;IAAC,CACF,CAAC;EAAA,CAEN,CAAC;AAEX,CAAC;AAED,eAAerE,aAAa;AAE5B,IAAMmE,MAAM,GAAGoC,UAAU,CAACC,MAAM,CAAC;EAC/BpC,SAAS,EAAE;IACTqC,aAAa,EAAE,QAAQ;IACvBC,cAAc,EAAE,YAAY;IAC5BC,eAAe,EAAElH,KAAK,CAACmH,oBAAoB;IAC3CF,cAAc,EAAE,QAAQ;IACxBG,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE;EACT,CAAC;EACDvB,eAAe,EAAE;IACfwB,gBAAgB,EAAE,EAAE;IACpBP,eAAe,EAAE,SAAS;IAC1BQ,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACD1B,UAAU,EAAE;IACV2B,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAC9H,UAAU,CAAC+H,aAAa;IACnCC,SAAS,EAAE;EACb,CAAC;EACDjC,cAAc,EAAE;IACdkC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAChB,CAAC;EACDC,gBAAgB,EAAE;IAChBC,IAAI,EAAE,CAAC;IACPpB,cAAc,EAAE,QAAQ;IACxBqB,UAAU,EAAE;EACd,CAAC;EACDvD,iBAAiB,EAAE;IACjBmD,OAAO,EAAE;EACX,CAAC;EACDnC,aAAa,EAAE;IACbwC,aAAa,EAAE;EACjB,CAAC;EACDlD,OAAO,EAAE;IACN6B,eAAe,EAAE,2BAA2B;IAC7CgB,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfR,YAAY,EAAE,CAAC;IACfa,SAAS,EAAE;EACb,CAAC;EACDlD,cAAc,EAAE;IACd4B,eAAe,EAAE,SAAS;IAC1BuB,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACf,CAAC;EACDC,KAAK,EAAE;IACLN,IAAI,EAAE,CAAC;IACPpB,cAAc,EAAE;EAClB,CAAC;EACD2B,OAAO,EAAE;IACPd,QAAQ,EAAE,EAAE;IACZK,YAAY,EAAE,CAAC;IACfU,UAAU,EAAE;EACd,CAAC;EACDnD,aAAa,EAAE;IACboC,QAAQ,EAAE,EAAE;IACZD,KAAK,EAAE,OAAO;IACdiB,SAAS,EAAC;EACZ,CAAC;EACDtC,cAAc,EAAE;IACd6B,IAAI,EAAE,CAAC;IACPpB,cAAc,EAAE,QAAQ;IACxBqB,UAAU,EAAE,QAAQ;IACpBpB,eAAe,EAAE;EACnB,CAAC;EACDT,gBAAgB,EAAE;IAChBS,eAAe,EAAE,OAAO;IACxBgB,OAAO,EAAE,EAAE;IACXP,YAAY,EAAE,CAAC;IACfoB,KAAK,EAAE;EACT,CAAC;EACDrC,SAAS,EAAE;IACToB,QAAQ,EAAE,EAAE;IACZK,YAAY,EAAE,EAAE;IAChBJ,UAAU,EAAE9H,UAAU,CAAC+I;EACzB,CAAC;EACDpC,WAAW,EAAE;IACXgB,SAAS,EAAE,EAAE;IACbV,eAAe,EAAE,SAAS;IAC1BgB,OAAO,EAAE,EAAE;IACXP,YAAY,EAAE,CAAC;IACfmB,SAAS,EAAE;EACb,CAAC;EACDjC,eAAe,EAAE;IACfgB,KAAK,EAAE,OAAO;IACdE,UAAU,EAAE9H,UAAU,CAAC+H;EAEzB,CAAC;EACDxC,QAAQ,EAAC;IACPqC,KAAK,EAAE,OAAO;IACdE,UAAU,EAAC9H,UAAU,CAAC+H;EACxB,CAAC;EACDvC,SAAS,EAAC;IACRoC,KAAK,EAAE,SAAS;IAChBiB,SAAS,EAAE,UAAU;IACrBhB,QAAQ,EAAE;EACV,CAAC;EACDnB,QAAQ,EAAC;IACPoB,UAAU,EAAE9H,UAAU,CAAC+H,aAAa;IACpCF,QAAQ,EAAE;EACZ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}