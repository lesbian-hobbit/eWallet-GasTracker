{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { firebase } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Logs = function Logs() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    logInfo = _useState2[0],\n    setLogs = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var todoRef = firebase.firestore().collection('users').doc('LlsVwIQz9hMMDtHgQLlT').collection('Logs');\n    var unsubscribe = todoRef.onSnapshot(function (querySnapshot) {\n      var logs = [];\n      querySnapshot.forEach(function (doc) {\n        var _doc$data = doc.data(),\n          ReceiverUid = _doc$data.ReceiverUid,\n          Timestamp = _doc$data.Timestamp,\n          transactions = _doc$data.transactions;\n        var formattedTimestamp = Timestamp.toDate().toLocaleString();\n        logs.push({\n          id: doc.id,\n          ReceiverUid: ReceiverUid,\n          Timestamp: formattedTimestamp,\n          transactions: transactions\n        });\n      });\n      setLogs(logs);\n      setLoading(false);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    }) : _jsx(FlatList, {\n      data: logInfo,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(View, {\n          style: styles.logItem,\n          children: _jsxs(Text, {\n            style: styles.logText,\n            children: [\"Sent: $\", item.transactions, \" To \", item.ReceiverUid, \" in \", item.Timestamp]\n          })\n        });\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 16\n  },\n  logItem: {\n    marginBottom: 10,\n    padding: 10,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 5\n  },\n  logText: {\n    fontSize: 16\n  }\n});\nexport default Logs;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","ActivityIndicator","StyleSheet","Alert","Pressable","firebase","jsx","_jsx","jsxs","_jsxs","Logs","_useState","_useState2","_slicedToArray","logInfo","setLogs","_useState3","_useState4","loading","setLoading","todoRef","firestore","collection","doc","unsubscribe","onSnapshot","querySnapshot","logs","forEach","_doc$data","data","ReceiverUid","Timestamp","transactions","formattedTimestamp","toDate","toLocaleString","push","id","style","styles","container","children","size","color","keyExtractor","item","renderItem","_ref","logItem","logText","create","flex","justifyContent","paddingHorizontal","marginBottom","padding","backgroundColor","borderRadius","fontSize"],"sources":["C:/Users/mamit/OneDrive/Desktop/mobile_Team_Progress_june15/screens/Logs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, FlatList, ActivityIndicator, StyleSheet, Alert, Pressable } from 'react-native';\r\nimport { firebase } from '../firebase';\r\n\r\nconst Logs = () => {\r\n  const [logInfo, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const todoRef = firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .doc('LlsVwIQz9hMMDtHgQLlT')\r\n      .collection('Logs');\r\n\r\n    const unsubscribe = todoRef.onSnapshot((querySnapshot) => {\r\n      const logs = [];\r\n      querySnapshot.forEach((doc) => {\r\n        const { ReceiverUid, Timestamp, transactions } = doc.data();\r\n        const formattedTimestamp = Timestamp.toDate().toLocaleString();\r\n        logs.push({\r\n          id: doc.id,\r\n          ReceiverUid,\r\n          Timestamp: formattedTimestamp,\r\n          transactions,\r\n        });\r\n      });\r\n      setLogs(logs);\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n      ) : (\r\n        <FlatList\r\n          data={logInfo}\r\n          keyExtractor={(item) => item.id}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.logItem}>\r\n              <Text style={styles.logText}>\r\n                Sent: ${item.transactions} To {item.ReceiverUid} in {item.Timestamp}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 16,\r\n  },\r\n  logItem: {\r\n    marginBottom: 10,\r\n    padding: 10,\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: 5,\r\n  },\r\n  logText: {\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default Logs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}