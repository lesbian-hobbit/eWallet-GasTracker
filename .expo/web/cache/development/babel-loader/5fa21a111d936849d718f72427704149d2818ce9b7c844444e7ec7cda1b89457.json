{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, doc, getDocs, setDoc, addDoc, Timestamp } from \"firebase/firestore\";\nimport { auth, db, firebase } from \"../firebase\";\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport * as SMS from \"expo-sms\";\nimport axios from 'axios';\nimport { encode } from 'base-64';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SendCash = function SendCash(_ref) {\n  var _route$params;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(5000),\n    _useState2 = _slicedToArray(_useState, 2),\n    balance = _useState2[0],\n    setBalance = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setUserInfo = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    transactions = _useState8[0],\n    setTransactions = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    fullname = _useState10[0],\n    setName = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    recipientEmail = _useState12[0],\n    setRecipientEmail = _useState12[1];\n  var _useState13 = useState(),\n    _useState14 = _slicedToArray(_useState13, 2),\n    amount = _useState14[0],\n    setAmount = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    recentContacts = _useState16[0],\n    setRecentContacts = _useState16[1];\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    ConfirmPassword = _useState18[0],\n    setPassword = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    password = _useState20[0],\n    setPin = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    phoneNumber = _useState22[0],\n    setPhoneNumber = _useState22[1];\n  var _useState23 = useState(''),\n    _useState24 = _slicedToArray(_useState23, 2),\n    otp = _useState24[0],\n    setOTP = _useState24[1];\n  var phoneNumber2 = \"+639166655582\";\n  var phoneNumber4 = \"+639166655582\";\n  var scannedData = (_route$params = route.params) == null ? void 0 : _route$params.scannedData;\n  if (!global.btoa) {\n    global.btoa = encode;\n  }\n  var twilioAccountSid = \"ACad63823e8efaa1803b3473082f3945b0\";\n  var twilioAuthToken = \"c6d17c5de96fdcb54f32e031fd0f3703\";\n  var saveDataToStorage = function () {\n    var _ref2 = _asyncToGenerator(function* (recipientEmail, recentContacts) {\n      try {\n        var data = JSON.stringify({\n          recipientEmail: recipientEmail,\n          recentContacts: recentContacts\n        });\n        yield AsyncStorage.setItem('userData', data);\n        console.log('Data saved to AsyncStorage');\n      } catch (error) {\n        console.log('Error saving data to AsyncStorage:', error);\n      }\n    });\n    return function saveDataToStorage(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loadDataFromStorage = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var data = yield AsyncStorage.getItem('userData');\n        if (data) {\n          var _JSON$parse = JSON.parse(data),\n            _recipientEmail = _JSON$parse.recipientEmail,\n            _recentContacts = _JSON$parse.recentContacts;\n          setRecipientEmail(_recipientEmail);\n          setRecentContacts(_recentContacts);\n          console.log('Data loaded from AsyncStorage');\n        }\n      } catch (error) {\n        console.log('Error loading data from AsyncStorage:', error);\n      }\n    });\n    return function loadDataFromStorage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    saveDataToStorage(recipientEmail, recentContacts);\n  }, [recipientEmail, recentContacts]);\n  var getRecipientUid = function () {\n    var _ref4 = _asyncToGenerator(function* (email) {\n      var usersRef = collection(db, 'users');\n      var q = query(usersRef, where('email', '==', email));\n      var querySnapshot = yield getDocs(q);\n      if (!querySnapshot.empty) {\n        var recipient = querySnapshot.docs[0];\n        return recipient.id;\n      }\n      throw new Error('Recipient not found');\n    });\n    return function getRecipientUid(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var ConfirmPin = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      onAuthStateChanged(auth, _asyncToGenerator(function* () {\n        var user = auth.currentUser;\n        if (user) {\n          var uid = user.uid;\n          setEmail(user.email);\n          var userCredential = yield signInWithEmailAndPassword(auth, user.email, ConfirmPassword).then(function (res) {\n            var user = auth.currentUser;\n            if (user.emailVerified) {\n              console.log(res);\n              var userData = userCredential.user;\n              console.log(\"User password:\", userData.password, uid, userData.email);\n            } else {\n              alert(\"Password does not match\");\n            }\n          });\n        }\n      }));\n      if (ConfirmPin) {\n        transferFunds();\n      }\n    });\n    return function ConfirmPin() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var transferFunds = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        var recipientUid = yield getRecipientUid(recipientEmail);\n        var sfDocRef = doc(db, 'users', recipientUid);\n        yield runTransaction(db, function () {\n          var _ref8 = _asyncToGenerator(function* (transaction) {\n            var sfDoc = yield transaction.get(sfDocRef);\n            if (!sfDoc.exists()) {\n              throw new Error('Document does not exist!');\n            }\n            var newWallet = sfDoc.data().wallet + Number(amount);\n            transaction.update(sfDocRef, {\n              wallet: newWallet\n            });\n          });\n          return function (_x4) {\n            return _ref8.apply(this, arguments);\n          };\n        }());\n        console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\n        var deduct = function () {\n          var _ref9 = _asyncToGenerator(function* () {\n            var user = auth.currentUser.uid;\n            if (user) {\n              var uid = user;\n              try {\n                yield runTransaction(db, function () {\n                  var _ref10 = _asyncToGenerator(function* (transaction) {\n                    var userRef = firebase.firestore().collection('users').doc(uid);\n                    var sf = yield transaction.get(userRef);\n                    if (!sf.exists) {\n                      throw new Error('Document does not exist!');\n                    }\n                    var deductedWallet = sf.data().wallet - Number(amount);\n                    transaction.update(userRef, {\n                      wallet: deductedWallet\n                    });\n                    alert('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\n                    console.log('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\n                  });\n                  return function (_x5) {\n                    return _ref10.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                alert('Error updating wallet:', error);\n                console.error('Error updating wallet:', error);\n              }\n            }\n          });\n          return function deduct() {\n            return _ref9.apply(this, arguments);\n          };\n        }();\n        yield deduct();\n        var user = auth.currentUser.uid;\n        if (user) {\n          var uid = user;\n          var SenderEmail = auth.currentUser.email;\n          var newTransactions = function () {\n            var _ref11 = _asyncToGenerator(function* () {\n              yield addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\n                transactions: amount,\n                Timestamp: new Date(),\n                ReceiverUid: recipientUid,\n                ReceiverEmail: recipientEmail\n              });\n            });\n            return function newTransactions() {\n              return _ref11.apply(this, arguments);\n            };\n          }();\n          yield newTransactions();\n          var recievedHis = function () {\n            var _ref12 = _asyncToGenerator(function* () {\n              yield addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\n                transactions: amount,\n                Timestamp: new Date(),\n                Sender: uid,\n                SenderEmail: SenderEmail\n              });\n            });\n            return function recievedHis() {\n              return _ref12.apply(this, arguments);\n            };\n          }();\n          yield recievedHis();\n          var updatedContacts = [recipientEmail].concat(_toConsumableArray(recentContacts.slice(0, 4)));\n          setRecentContacts(updatedContacts);\n          saveDataToStorage(recipientEmail, updatedContacts);\n        }\n      } catch (error) {\n        console.error('Error transferring funds:', error);\n      }\n    });\n    return function transferFunds() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        var uid = user.uid;\n        setEmail(user.email);\n        var getWallet = function () {\n          var _ref13 = _asyncToGenerator(function* () {\n            var docRef = doc(db, 'users', uid);\n            var unsubscribe = onSnapshot(docRef, function (docSnap) {\n              if (docSnap.exists()) {\n                console.log('Document data:', docSnap.data());\n                var data = docSnap.data();\n                setUserInfo(data);\n              } else {\n                console.log('No such document!');\n              }\n            });\n            return unsubscribe;\n          });\n          return function getWallet() {\n            return _ref13.apply(this, arguments);\n          };\n        }();\n        var unsubscribe = getWallet();\n        return function () {\n          unsubscribe();\n        };\n      } else {\n        navigation.navigate('Login');\n      }\n    });\n  }, []);\n  var handleTransferFunds = function handleTransferFunds() {\n    setBalance(balance - 100);\n  };\n  useEffect(function () {\n    loadDataFromStorage();\n    setRecipientEmail(scannedData);\n  }, []);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background1.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: [_jsxs(View, {\n        style: styles.balanceContainer,\n        children: [_jsx(Text, {\n          style: styles.balanceText,\n          children: \"Current Balance\"\n        }), _jsx(View, {\n          style: styles.currentBalanceContainer,\n          children: _jsxs(Text, {\n            style: styles.amountText,\n            children: [\"\\u20B1 \", userInfo.wallet]\n          })\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Recent Contacts\"\n        }), _jsx(Text, {\n          children: scannedData\n        }), _jsx(View, {\n          style: styles.recentContactsContainer,\n          children: _jsx(FlatList, {\n            data: recentContacts,\n            horizontal: true,\n            renderItem: function renderItem(_ref14) {\n              var item = _ref14.item;\n              return _jsxs(TouchableOpacity, {\n                style: [styles.mediumButtonContainer, {\n                  marginLeft: 10,\n                  marginTop: 10,\n                  marginBottom: 10\n                }],\n                onPress: function onPress() {\n                  return setRecipientEmail(item.recipientEmail);\n                },\n                children: [_jsx(View, {\n                  style: styles.circle,\n                  children: _jsx(Ionicons, {\n                    name: \"person\",\n                    size: 15,\n                    color: \"white\"\n                  })\n                }), _jsx(Text, {\n                  numberOfLines: 1,\n                  style: {\n                    fontSize: 1\n                  },\n                  children: item.receiverName\n                })]\n              });\n            }\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          padding: 20\n        },\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Input Recipient's Email: \",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          value: recipientEmail,\n          onChangeText: setRecipientEmail\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Input Amount: \",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          value: amount,\n          onChangeText: setAmount\n        }), _jsx(TextInput, {\n          style: {\n            borderWidth: 1,\n            padding: 10\n          },\n          placeholder: \"Enter Phone Number\",\n          value: phoneNumber,\n          onChangeText: setPhoneNumber\n        }), _jsx(TouchableOpacity, {\n          style: styles.transferButton,\n          onPress: ConfirmPin,\n          children: _jsx(Text, {\n            style: styles.transferButtonText,\n            children: \"Send Funds\"\n          })\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter Password\",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          secureTextEntry: true,\n          value: ConfirmPassword,\n          onChangeText: setPassword\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  balanceContainer: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  balanceText: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#fff',\n    fontFamily: 'Roboto'\n  },\n  currentBalanceContainer: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  amountText: {\n    fontSize: 23,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  recentContactsContainer: {\n    alignItems: 'center'\n  },\n  recentContactsText: {\n    fontSize: 16,\n    color: '#fff',\n    marginBottom: 5\n  },\n  recentContactText: {\n    fontSize: 14,\n    color: '#fff',\n    marginBottom: 3\n  },\n  input: {\n    height: 40,\n    borderColor: \"black\",\n    borderWidth: 2,\n    borderRadius: 5,\n    marginBottom: 10,\n    padding: 10,\n    margin: 10,\n    fontFamily: 'Roboto',\n    backgroundColor: 'white'\n  },\n  transferButton: {\n    marginHorizontal: 80,\n    backgroundColor: \"#111827\",\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  transferButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  recentContactsRow: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  contactIconContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 10\n  }\n});\nexport default SendCash;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","TextInput","ImageBackground","Alert","FlatList","AsyncStorage","Ionicons","collection","query","where","onSnapshot","writeBatch","runTransaction","doc","getDocs","setDoc","addDoc","Timestamp","auth","db","firebase","onAuthStateChanged","signInWithEmailAndPassword","signOut","SMS","axios","encode","jsx","_jsx","jsxs","_jsxs","SendCash","_ref","_route$params","route","navigation","_useState","_useState2","_slicedToArray","balance","setBalance","_useState3","_useState4","email","setEmail","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","transactions","setTransactions","_useState9","_useState10","fullname","setName","_useState11","_useState12","recipientEmail","setRecipientEmail","_useState13","_useState14","amount","setAmount","_useState15","_useState16","recentContacts","setRecentContacts","_useState17","_useState18","ConfirmPassword","setPassword","_useState19","_useState20","password","setPin","_useState21","_useState22","phoneNumber","setPhoneNumber","_useState23","_useState24","otp","setOTP","phoneNumber2","phoneNumber4","scannedData","params","global","btoa","twilioAccountSid","twilioAuthToken","saveDataToStorage","_ref2","_asyncToGenerator","data","JSON","stringify","setItem","console","log","error","_x","_x2","apply","arguments","loadDataFromStorage","_ref3","getItem","_JSON$parse","parse","getRecipientUid","_ref4","usersRef","q","querySnapshot","empty","recipient","docs","id","Error","_x3","ConfirmPin","_ref5","user","currentUser","uid","userCredential","then","res","emailVerified","userData","alert","transferFunds","_ref7","recipientUid","sfDocRef","_ref8","transaction","sfDoc","get","exists","newWallet","wallet","Number","update","_x4","deduct","_ref9","_ref10","userRef","firestore","sf","deductedWallet","_x5","SenderEmail","newTransactions","_ref11","Date","ReceiverUid","ReceiverEmail","recievedHis","_ref12","Sender","updatedContacts","concat","_toConsumableArray","slice","getWallet","_ref13","docRef","unsubscribe","docSnap","navigate","handleTransferFunds","style","flex","justifyContent","children","source","require","resizeMode","styles","image","balanceContainer","balanceText","currentBalanceContainer","amountText","label","recentContactsContainer","horizontal","renderItem","_ref14","item","mediumButtonContainer","marginLeft","marginTop","marginBottom","onPress","circle","name","size","color","numberOfLines","fontSize","receiverName","padding","input","placeholder","placeholderTextColor","value","onChangeText","borderWidth","transferButton","transferButtonText","secureTextEntry","create","alignItems","fontWeight","fontFamily","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","recentContactsText","recentContactText","height","borderColor","margin","marginHorizontal","recentContactsRow","flexDirection","contactIconContainer","marginRight"],"sources":["C:/Users/User/E-wallet-GasTracker/screens/SendCash.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, ImageBackground, Alert, FlatList } from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, doc, getDocs, setDoc, addDoc, Timestamp } from \"firebase/firestore\";\r\nimport { auth, db, firebase } from \"../firebase\";\r\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\r\nimport * as SMS from \"expo-sms\";\r\nimport axios from 'axios';\r\nimport { encode } from 'base-64';\r\n\r\n\r\nconst SendCash = ({ route, navigation }) => {\r\n  const [balance, setBalance] = useState(5000); // Initial balance\r\n  const [email, setEmail] = useState();\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [transactions, setTransactions] = useState();\r\n  const [fullname, setName] = useState();\r\n  const [recipientEmail, setRecipientEmail] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [recentContacts, setRecentContacts] = useState([]);\r\n  const [ConfirmPassword, setPassword] = useState(\"\");\r\n  const [password, setPin] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [otp, setOTP] = useState('');\r\n  const phoneNumber2 = \"+639166655582\";\r\n  const phoneNumber4 = \"+639166655582\"; // Replace with the recipient's phone number\r\n  \r\n  const scannedData = route.params?.scannedData\r\n\r\n  if (!global.btoa) {\r\n    global.btoa = encode;\r\n  }\r\n\r\n  const twilioAccountSid = \"ACad63823e8efaa1803b3473082f3945b0\";\r\n  const twilioAuthToken = \"c6d17c5de96fdcb54f32e031fd0f3703\";\r\n\r\n\r\n\r\n  const saveDataToStorage = async (recipientEmail, recentContacts) => {\r\n    try {\r\n      const data = JSON.stringify({ recipientEmail, recentContacts });\r\n      await AsyncStorage.setItem('userData', data);\r\n      console.log('Data saved to AsyncStorage');\r\n    } catch (error) {\r\n      console.log('Error saving data to AsyncStorage:', error);\r\n    }\r\n  };\r\n\r\n  const loadDataFromStorage = async () => {\r\n    try {\r\n      const data = await AsyncStorage.getItem('userData');\r\n      if (data) {\r\n        const { recipientEmail, recentContacts } = JSON.parse(data);\r\n        setRecipientEmail(recipientEmail);\r\n        setRecentContacts(recentContacts);\r\n        console.log('Data loaded from AsyncStorage');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error loading data from AsyncStorage:', error);\r\n    }\r\n  };\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    saveDataToStorage(recipientEmail, recentContacts);\r\n  }, [recipientEmail, recentContacts]);\r\n\r\n  const getRecipientUid = async (email) => {\r\n    const usersRef = collection(db, 'users');\r\n    const q = query(usersRef, where('email', '==', email));\r\n    const querySnapshot = await getDocs(q);\r\n    if (!querySnapshot.empty) {\r\n      const recipient = querySnapshot.docs[0];\r\n      return recipient.id;\r\n    }\r\n    throw new Error('Recipient not found');\r\n  };\r\n\r\n  const ConfirmPin = async () => {\r\n    onAuthStateChanged(auth, async () => {\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        const uid = user.uid;\r\n        setEmail(user.email);\r\n        const userCredential = await signInWithEmailAndPassword(auth, user.email, ConfirmPassword).then((res) => {\r\n          const user = auth.currentUser;\r\n          if (user.emailVerified) {\r\n            console.log(res);\r\n            const userData = userCredential.user;\r\n            console.log(\"User password:\", userData.password, uid, userData.email);\r\n          } else {\r\n            alert(\"Password does not match\");\r\n          }\r\n        });\r\n       \r\n      }\r\n    });\r\n    if (ConfirmPin){\r\n      transferFunds();\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  // const generateOTP = () => {\r\n  //   const otpLength = 6;\r\n  //   const digits = \"0123456789\";\r\n  //   let otp = \"\";\r\n\r\n  //   for (let i = 0; i < otpLength; i++) {\r\n  //     otp += digits[Math.floor(Math.random() * digits.length)];\r\n  //   }\r\n\r\n  //   return otp;\r\n  // };\r\n\r\n  // const sendOTP = async () => {\r\n  //   const generatedOTP = generateOTP();\r\n\r\n  //   try {\r\n  //     const response = await axios.post(\r\n  //       `https://api.twilio.com/2010-04-01/Accounts/${twilioAccountSid}/Messages.json`,\r\n  //       {\r\n  //         To: \"+639166655582\",\r\n  //         From: \"+19123729424\",\r\n  //         Body: `Your OTP is: ${generatedOTP}`,\r\n  //       },\r\n  //       {\r\n  //         auth: {\r\n  //           username: twilioAccountSid,\r\n  //           password: twilioAuthToken,\r\n  //         },\r\n  //       }\r\n  //     );\r\n\r\n  //     console.log(\"OTP sent:\", response.data);\r\n  //     // Store the generatedOTP and phoneNumber for verification\r\n  //     // in the next step\r\n  //   } catch (error) {\r\n  //     console.error(\"Error sending OTP:\", error.response.data);\r\n  //   }\r\n  // };\r\n\r\n  // sendOTP(phoneNumber);\r\n\r\n  // const handleVerifyOTP = () => {\r\n  //   // Add your OTP verification logic here\r\n  //   if (otp === '') {\r\n  //     Alert.alert('Error', 'Please generate and enter the OTP first.');\r\n  //   } else if (otp === enteredOTP) {\r\n  //     Alert.alert('Success', 'OTP verification successful!');\r\n  //   } else {\r\n  //     Alert.alert('Error', 'Invalid OTP.');\r\n  //   }\r\n  // };\r\n\r\n\r\n  const transferFunds = async () => {\r\n    try {\r\n      const recipientUid = await getRecipientUid(recipientEmail);\r\n\r\n\r\n      const sfDocRef = doc(db, 'users', recipientUid);\r\n\r\n      await runTransaction(db, async (transaction) => {\r\n        const sfDoc = await transaction.get(sfDocRef);\r\n        if (!sfDoc.exists()) {\r\n          throw new Error('Document does not exist!');\r\n        }\r\n        const newWallet = sfDoc.data().wallet + Number(amount);\r\n        transaction.update(sfDocRef, { wallet: newWallet });\r\n      });\r\n      console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\r\n\r\n      const deduct = async () => {\r\n        const user = auth.currentUser.uid;\r\n        if (user) {\r\n          const uid = user;\r\n          try {\r\n            await runTransaction(db, async (transaction) => {\r\n              const userRef = firebase.firestore().collection('users').doc(uid);\r\n              const sf = await transaction.get(userRef);\r\n              if (!sf.exists) {\r\n                throw new Error('Document does not exist!');\r\n              }\r\n              const deductedWallet = sf.data().wallet - Number(amount);\r\n              transaction.update(userRef, {\r\n                wallet: deductedWallet,\r\n              });\r\n              alert('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\r\n              console.log('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\r\n            });\r\n          } catch (error) {\r\n            alert('Error updating wallet:', error);\r\n            console.error('Error updating wallet:', error);\r\n          }\r\n        }\r\n      };\r\n      await deduct();\r\n\r\n      const user = auth.currentUser.uid;\r\n      if (user) {\r\n        const uid = user;\r\n        const SenderEmail = auth.currentUser.email;\r\n        const newTransactions = async () => {\r\n          await addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\r\n            transactions: amount,\r\n            Timestamp: new Date(),\r\n            ReceiverUid: recipientUid,\r\n            ReceiverEmail: recipientEmail,\r\n          });\r\n        };\r\n        await newTransactions();\r\n\r\n        const recievedHis = async () => {\r\n          await addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\r\n            transactions: amount,\r\n            Timestamp: new Date(),\r\n            Sender: uid,\r\n            SenderEmail: SenderEmail,\r\n          });\r\n        };\r\n        await recievedHis();\r\n\r\n        const updatedContacts = [recipientEmail, ...recentContacts.slice(0, 4)];\r\n        setRecentContacts(updatedContacts);\r\n        saveDataToStorage(recipientEmail, updatedContacts);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error transferring funds:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        const uid = user.uid;\r\n        setEmail(user.email);\r\n\r\n        const getWallet = async () => {\r\n          const docRef = doc(db, 'users', uid);\r\n          const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n              console.log('Document data:', docSnap.data());\r\n              const data = docSnap.data();\r\n              setUserInfo(data);\r\n            } else {\r\n              console.log('No such document!');\r\n            }\r\n          });\r\n\r\n          return unsubscribe;\r\n        };\r\n\r\n        const unsubscribe = getWallet();\r\n\r\n        return () => {\r\n          unsubscribe();\r\n        };\r\n      } else {\r\n        navigation.navigate('Login');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleTransferFunds = () => {\r\n    setBalance(balance - 100);\r\n  };\r\n  useEffect(() => {\r\n    loadDataFromStorage();\r\n    setRecipientEmail(scannedData);\r\n}, []);\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center' }}>\r\n      <ImageBackground source={require('../assets/background1.jpg')} resizeMode=\"cover\" style={styles.image}>\r\n        <View style={styles.balanceContainer}>\r\n          <Text style={styles.balanceText}>Current Balance</Text>\r\n          <View style={styles.currentBalanceContainer}>\r\n            <Text style={styles.amountText}>₱ {userInfo.wallet}</Text>\r\n          </View>\r\n\r\n          \r\n          <Text style={styles.label}>Recent Contacts</Text>\r\n          <Text>{scannedData}</Text>\r\n          <View style={styles.recentContactsContainer}>\r\n            <FlatList\r\n              data={recentContacts}\r\n              horizontal={true}\r\n              renderItem={({ item }) => (\r\n                <TouchableOpacity\r\n                  style={[\r\n                    styles.mediumButtonContainer,\r\n                    { marginLeft: 10, marginTop: 10, marginBottom: 10 },\r\n                  ]}\r\n                  onPress={() => setRecipientEmail(item.recipientEmail)}\r\n                >\r\n                  <View style={styles.circle}>\r\n                    <Ionicons name=\"person\" size={15} color=\"white\" />\r\n                  </View>\r\n                  <Text numberOfLines={1} style={{ fontSize: 1 }}>\r\n                    {item.receiverName}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          </View>\r\n\r\n\r\n        </View>\r\n        <View style={{ padding: 20 }}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Input Recipient's Email: \"\r\n            placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n            value={recipientEmail}\r\n            onChangeText={setRecipientEmail}\r\n          />\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Input Amount: \"\r\n            placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n            value={amount}\r\n            onChangeText={setAmount}\r\n          />\r\n          <TextInput\r\n            style={{ borderWidth: 1, padding: 10 }}\r\n            placeholder=\"Enter Phone Number\"\r\n            value={phoneNumber}\r\n            onChangeText={setPhoneNumber}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.transferButton}\r\n            onPress={ConfirmPin}\r\n          >\r\n            <Text style={styles.transferButtonText}>Send Funds</Text>\r\n          </TouchableOpacity>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter Password\"\r\n            placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n            secureTextEntry\r\n            value={ConfirmPassword}\r\n            onChangeText={setPassword}\r\n          />\r\n        </View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  balanceContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 30,\r\n  },\r\n  balanceText: {\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: '#fff',\r\n    fontFamily: 'Roboto',\r\n  },\r\n  currentBalanceContainer: {\r\n    backgroundColor: '#fff',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  amountText: {\r\n    fontSize: 23,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  recentContactsContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  recentContactsText: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n    marginBottom: 5,\r\n  },\r\n  recentContactText: {\r\n    fontSize: 14,\r\n    color: '#fff',\r\n    marginBottom: 3,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"black\",\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n    margin: 10,\r\n    fontFamily: 'Roboto',\r\n    backgroundColor: 'white'\r\n  },\r\n  transferButton: {\r\n    marginHorizontal: 80,\r\n    backgroundColor: \"#111827\",\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginTop: 15,\r\n    alignItems: 'center'\r\n  },\r\n  transferButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  recentContactsRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  contactIconContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginRight: 10,\r\n  },\r\n\r\n});\r\n\r\nexport default SendCash;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAEnD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,UAAU,EAAEC,cAAc,EAAEC,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AAC9I,SAASC,IAAI,EAAEC,EAAE,EAAEC,QAAQ;AAC3B,SAASC,kBAAkB,EAAEC,0BAA0B,EAAEC,OAAO,QAAQ,eAAe;AACvF,OAAO,KAAKC,GAAG,MAAM,UAAU;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjC,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAA8B;EAAA,IAAAC,aAAA;EAAA,IAAxBC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,UAAU,GAAAH,IAAA,CAAVG,UAAU;EACnC,IAAAC,SAAA,GAA8BzC,QAAQ,CAAC,IAAI,CAAC;IAAA0C,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA0B9C,QAAQ,CAAC,CAAC;IAAA+C,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAgClD,QAAQ,CAAC,EAAE,CAAC;IAAAmD,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAwCtD,QAAQ,CAAC,CAAC;IAAAuD,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA3CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA4B1D,QAAQ,CAAC,CAAC;IAAA2D,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAA/BE,QAAQ,GAAAD,WAAA;IAAEE,OAAO,GAAAF,WAAA;EACxB,IAAAG,WAAA,GAA4C9D,QAAQ,CAAC,CAAC;IAAA+D,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAA/CE,cAAc,GAAAD,WAAA;IAAEE,iBAAiB,GAAAF,WAAA;EACxC,IAAAG,WAAA,GAA4BlE,QAAQ,CAAC,CAAC;IAAAmE,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAA/BE,MAAM,GAAAD,WAAA;IAAEE,SAAS,GAAAF,WAAA;EACxB,IAAAG,WAAA,GAA4CtE,QAAQ,CAAC,EAAE,CAAC;IAAAuE,WAAA,GAAA5B,cAAA,CAAA2B,WAAA;IAAjDE,cAAc,GAAAD,WAAA;IAAEE,iBAAiB,GAAAF,WAAA;EACxC,IAAAG,WAAA,GAAuC1E,QAAQ,CAAC,EAAE,CAAC;IAAA2E,WAAA,GAAAhC,cAAA,CAAA+B,WAAA;IAA5CE,eAAe,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EACnC,IAAAG,WAAA,GAA2B9E,QAAQ,CAAC,EAAE,CAAC;IAAA+E,WAAA,GAAApC,cAAA,CAAAmC,WAAA;IAAhCE,QAAQ,GAAAD,WAAA;IAAEE,MAAM,GAAAF,WAAA;EACvB,IAAAG,WAAA,GAAsClF,QAAQ,CAAC,EAAE,CAAC;IAAAmF,WAAA,GAAAxC,cAAA,CAAAuC,WAAA;IAA3CE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAAG,WAAA,GAAsBtF,QAAQ,CAAC,EAAE,CAAC;IAAAuF,WAAA,GAAA5C,cAAA,CAAA2C,WAAA;IAA3BE,GAAG,GAAAD,WAAA;IAAEE,MAAM,GAAAF,WAAA;EAClB,IAAMG,YAAY,GAAG,eAAe;EACpC,IAAMC,YAAY,GAAG,eAAe;EAEpC,IAAMC,WAAW,IAAAtD,aAAA,GAAGC,KAAK,CAACsD,MAAM,qBAAZvD,aAAA,CAAcsD,WAAW;EAE7C,IAAI,CAACE,MAAM,CAACC,IAAI,EAAE;IAChBD,MAAM,CAACC,IAAI,GAAGhE,MAAM;EACtB;EAEA,IAAMiE,gBAAgB,GAAG,oCAAoC;EAC7D,IAAMC,eAAe,GAAG,kCAAkC;EAI1D,IAAMC,iBAAiB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAOpC,cAAc,EAAEQ,cAAc,EAAK;MAClE,IAAI;QACF,IAAM6B,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;UAAEvC,cAAc,EAAdA,cAAc;UAAEQ,cAAc,EAAdA;QAAe,CAAC,CAAC;QAC/D,MAAM9D,YAAY,CAAC8F,OAAO,CAAC,UAAU,EAAEH,IAAI,CAAC;QAC5CI,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEC,KAAK,CAAC;MAC1D;IACF,CAAC;IAAA,gBARKT,iBAAiBA,CAAAU,EAAA,EAAAC,GAAA;MAAA,OAAAV,KAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQtB;EAED,IAAMC,mBAAmB;IAAA,IAAAC,KAAA,GAAAb,iBAAA,CAAG,aAAY;MACtC,IAAI;QACF,IAAMC,IAAI,SAAS3F,YAAY,CAACwG,OAAO,CAAC,UAAU,CAAC;QACnD,IAAIb,IAAI,EAAE;UACR,IAAAc,WAAA,GAA2Cb,IAAI,CAACc,KAAK,CAACf,IAAI,CAAC;YAAnDrC,eAAc,GAAAmD,WAAA,CAAdnD,cAAc;YAAEQ,eAAc,GAAA2C,WAAA,CAAd3C,cAAc;UACtCP,iBAAiB,CAACD,eAAc,CAAC;UACjCS,iBAAiB,CAACD,eAAc,CAAC;UACjCiC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEC,KAAK,CAAC;MAC7D;IACF,CAAC;IAAA,gBAZKK,mBAAmBA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYxB;EAID9G,SAAS,CAAC,YAAM;IACdiG,iBAAiB,CAAClC,cAAc,EAAEQ,cAAc,CAAC;EACnD,CAAC,EAAE,CAACR,cAAc,EAAEQ,cAAc,CAAC,CAAC;EAEpC,IAAM6C,eAAe;IAAA,IAAAC,KAAA,GAAAlB,iBAAA,CAAG,WAAOpD,KAAK,EAAK;MACvC,IAAMuE,QAAQ,GAAG3G,UAAU,CAACY,EAAE,EAAE,OAAO,CAAC;MACxC,IAAMgG,CAAC,GAAG3G,KAAK,CAAC0G,QAAQ,EAAEzG,KAAK,CAAC,OAAO,EAAE,IAAI,EAAEkC,KAAK,CAAC,CAAC;MACtD,IAAMyE,aAAa,SAAStG,OAAO,CAACqG,CAAC,CAAC;MACtC,IAAI,CAACC,aAAa,CAACC,KAAK,EAAE;QACxB,IAAMC,SAAS,GAAGF,aAAa,CAACG,IAAI,CAAC,CAAC,CAAC;QACvC,OAAOD,SAAS,CAACE,EAAE;MACrB;MACA,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACxC,CAAC;IAAA,gBATKT,eAAeA,CAAAU,GAAA;MAAA,OAAAT,KAAA,CAAAR,KAAA,OAAAC,SAAA;IAAA;EAAA,GASpB;EAED,IAAMiB,UAAU;IAAA,IAAAC,KAAA,GAAA7B,iBAAA,CAAG,aAAY;MAC7B1E,kBAAkB,CAACH,IAAI,EAAA6E,iBAAA,CAAE,aAAY;QACnC,IAAM8B,IAAI,GAAG3G,IAAI,CAAC4G,WAAW;QAC7B,IAAID,IAAI,EAAE;UACR,IAAME,GAAG,GAAGF,IAAI,CAACE,GAAG;UACpBnF,QAAQ,CAACiF,IAAI,CAAClF,KAAK,CAAC;UACpB,IAAMqF,cAAc,SAAS1G,0BAA0B,CAACJ,IAAI,EAAE2G,IAAI,CAAClF,KAAK,EAAE4B,eAAe,CAAC,CAAC0D,IAAI,CAAC,UAACC,GAAG,EAAK;YACvG,IAAML,IAAI,GAAG3G,IAAI,CAAC4G,WAAW;YAC7B,IAAID,IAAI,CAACM,aAAa,EAAE;cACtB/B,OAAO,CAACC,GAAG,CAAC6B,GAAG,CAAC;cAChB,IAAME,QAAQ,GAAGJ,cAAc,CAACH,IAAI;cACpCzB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE+B,QAAQ,CAACzD,QAAQ,EAAEoD,GAAG,EAAEK,QAAQ,CAACzF,KAAK,CAAC;YACvE,CAAC,MAAM;cACL0F,KAAK,CAAC,yBAAyB,CAAC;YAClC;UACF,CAAC,CAAC;QAEJ;MACF,CAAC,EAAC;MACF,IAAIV,UAAU,EAAC;QACbW,aAAa,CAAC,CAAC;MACjB;IACF,CAAC;IAAA,gBAtBKX,UAAUA,CAAA;MAAA,OAAAC,KAAA,CAAAnB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAsBf;EA0DD,IAAM4B,aAAa;IAAA,IAAAC,KAAA,GAAAxC,iBAAA,CAAG,aAAY;MAChC,IAAI;QACF,IAAMyC,YAAY,SAASxB,eAAe,CAACrD,cAAc,CAAC;QAG1D,IAAM8E,QAAQ,GAAG5H,GAAG,CAACM,EAAE,EAAE,OAAO,EAAEqH,YAAY,CAAC;QAE/C,MAAM5H,cAAc,CAACO,EAAE;UAAA,IAAAuH,KAAA,GAAA3C,iBAAA,CAAE,WAAO4C,WAAW,EAAK;YAC9C,IAAMC,KAAK,SAASD,WAAW,CAACE,GAAG,CAACJ,QAAQ,CAAC;YAC7C,IAAI,CAACG,KAAK,CAACE,MAAM,CAAC,CAAC,EAAE;cACnB,MAAM,IAAIrB,KAAK,CAAC,0BAA0B,CAAC;YAC7C;YACA,IAAMsB,SAAS,GAAGH,KAAK,CAAC5C,IAAI,CAAC,CAAC,CAACgD,MAAM,GAAGC,MAAM,CAAClF,MAAM,CAAC;YACtD4E,WAAW,CAACO,MAAM,CAACT,QAAQ,EAAE;cAAEO,MAAM,EAAED;YAAU,CAAC,CAAC;UACrD,CAAC;UAAA,iBAAAI,GAAA;YAAA,OAAAT,KAAA,CAAAjC,KAAA,OAAAC,SAAA;UAAA;QAAA,IAAC;QACFN,OAAO,CAACC,GAAG,CAAC,uCAAuC,GAAG4C,MAAM,CAAClF,MAAM,CAAC,GAAG,GAAG,GAAGyE,YAAY,CAAC;QAE1F,IAAMY,MAAM;UAAA,IAAAC,KAAA,GAAAtD,iBAAA,CAAG,aAAY;YACzB,IAAM8B,IAAI,GAAG3G,IAAI,CAAC4G,WAAW,CAACC,GAAG;YACjC,IAAIF,IAAI,EAAE;cACR,IAAME,GAAG,GAAGF,IAAI;cAChB,IAAI;gBACF,MAAMjH,cAAc,CAACO,EAAE;kBAAA,IAAAmI,MAAA,GAAAvD,iBAAA,CAAE,WAAO4C,WAAW,EAAK;oBAC9C,IAAMY,OAAO,GAAGnI,QAAQ,CAACoI,SAAS,CAAC,CAAC,CAACjJ,UAAU,CAAC,OAAO,CAAC,CAACM,GAAG,CAACkH,GAAG,CAAC;oBACjE,IAAM0B,EAAE,SAASd,WAAW,CAACE,GAAG,CAACU,OAAO,CAAC;oBACzC,IAAI,CAACE,EAAE,CAACX,MAAM,EAAE;sBACd,MAAM,IAAIrB,KAAK,CAAC,0BAA0B,CAAC;oBAC7C;oBACA,IAAMiC,cAAc,GAAGD,EAAE,CAACzD,IAAI,CAAC,CAAC,CAACgD,MAAM,GAAGC,MAAM,CAAClF,MAAM,CAAC;oBACxD4E,WAAW,CAACO,MAAM,CAACK,OAAO,EAAE;sBAC1BP,MAAM,EAAEU;oBACV,CAAC,CAAC;oBACFrB,KAAK,CAAC,qBAAqB,GAAGY,MAAM,CAAClF,MAAM,CAAC,GAAG,MAAM,GAAGJ,cAAc,CAAC;oBACvEyC,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAG4C,MAAM,CAAClF,MAAM,CAAC,GAAG,MAAM,GAAGJ,cAAc,CAAC;kBAC/E,CAAC;kBAAA,iBAAAgG,GAAA;oBAAA,OAAAL,MAAA,CAAA7C,KAAA,OAAAC,SAAA;kBAAA;gBAAA,IAAC;cACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;gBACd+B,KAAK,CAAC,wBAAwB,EAAE/B,KAAK,CAAC;gBACtCF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;cAChD;YACF;UACF,CAAC;UAAA,gBAvBK8C,MAAMA,CAAA;YAAA,OAAAC,KAAA,CAAA5C,KAAA,OAAAC,SAAA;UAAA;QAAA,GAuBX;QACD,MAAM0C,MAAM,CAAC,CAAC;QAEd,IAAMvB,IAAI,GAAG3G,IAAI,CAAC4G,WAAW,CAACC,GAAG;QACjC,IAAIF,IAAI,EAAE;UACR,IAAME,GAAG,GAAGF,IAAI;UAChB,IAAM+B,WAAW,GAAG1I,IAAI,CAAC4G,WAAW,CAACnF,KAAK;UAC1C,IAAMkH,eAAe;YAAA,IAAAC,MAAA,GAAA/D,iBAAA,CAAG,aAAY;cAClC,MAAM/E,MAAM,CAACT,UAAU,CAACY,EAAE,EAAE,OAAO,EAAE4G,GAAG,EAAE,SAAS,EAAE,sBAAsB,EAAE,MAAM,CAAC,EAAE;gBACpF5E,YAAY,EAAEY,MAAM;gBACpB9C,SAAS,EAAE,IAAI8I,IAAI,CAAC,CAAC;gBACrBC,WAAW,EAAExB,YAAY;gBACzByB,aAAa,EAAEtG;cACjB,CAAC,CAAC;YACJ,CAAC;YAAA,gBAPKkG,eAAeA,CAAA;cAAA,OAAAC,MAAA,CAAArD,KAAA,OAAAC,SAAA;YAAA;UAAA,GAOpB;UACD,MAAMmD,eAAe,CAAC,CAAC;UAEvB,IAAMK,WAAW;YAAA,IAAAC,MAAA,GAAApE,iBAAA,CAAG,aAAY;cAC9B,MAAM/E,MAAM,CAACT,UAAU,CAACY,EAAE,EAAE,OAAO,EAAEqH,YAAY,EAAE,SAAS,EAAE,sBAAsB,EAAE,UAAU,CAAC,EAAE;gBACjGrF,YAAY,EAAEY,MAAM;gBACpB9C,SAAS,EAAE,IAAI8I,IAAI,CAAC,CAAC;gBACrBK,MAAM,EAAErC,GAAG;gBACX6B,WAAW,EAAEA;cACf,CAAC,CAAC;YACJ,CAAC;YAAA,gBAPKM,WAAWA,CAAA;cAAA,OAAAC,MAAA,CAAA1D,KAAA,OAAAC,SAAA;YAAA;UAAA,GAOhB;UACD,MAAMwD,WAAW,CAAC,CAAC;UAEnB,IAAMG,eAAe,IAAI1G,cAAc,EAAA2G,MAAA,CAAAC,kBAAA,CAAKpG,cAAc,CAACqG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;UACvEpG,iBAAiB,CAACiG,eAAe,CAAC;UAClCxE,iBAAiB,CAAClC,cAAc,EAAE0G,eAAe,CAAC;QACpD;MACF,CAAC,CAAC,OAAO/D,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAAA,gBA1EKgC,aAAaA,CAAA;MAAA,OAAAC,KAAA,CAAA9B,KAAA,OAAAC,SAAA;IAAA;EAAA,GA0ElB;EAED9G,SAAS,CAAC,YAAM;IACdyB,kBAAkB,CAACH,IAAI,EAAE,UAAC2G,IAAI,EAAK;MACjC,IAAIA,IAAI,EAAE;QACR,IAAME,GAAG,GAAGF,IAAI,CAACE,GAAG;QACpBnF,QAAQ,CAACiF,IAAI,CAAClF,KAAK,CAAC;QAEpB,IAAM8H,SAAS;UAAA,IAAAC,MAAA,GAAA3E,iBAAA,CAAG,aAAY;YAC5B,IAAM4E,MAAM,GAAG9J,GAAG,CAACM,EAAE,EAAE,OAAO,EAAE4G,GAAG,CAAC;YACpC,IAAM6C,WAAW,GAAGlK,UAAU,CAACiK,MAAM,EAAE,UAACE,OAAO,EAAK;cAClD,IAAIA,OAAO,CAAC/B,MAAM,CAAC,CAAC,EAAE;gBACpB1C,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEwE,OAAO,CAAC7E,IAAI,CAAC,CAAC,CAAC;gBAC7C,IAAMA,IAAI,GAAG6E,OAAO,CAAC7E,IAAI,CAAC,CAAC;gBAC3BhD,WAAW,CAACgD,IAAI,CAAC;cACnB,CAAC,MAAM;gBACLI,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;cAClC;YACF,CAAC,CAAC;YAEF,OAAOuE,WAAW;UACpB,CAAC;UAAA,gBAbKH,SAASA,CAAA;YAAA,OAAAC,MAAA,CAAAjE,KAAA,OAAAC,SAAA;UAAA;QAAA,GAad;QAED,IAAMkE,WAAW,GAAGH,SAAS,CAAC,CAAC;QAE/B,OAAO,YAAM;UACXG,WAAW,CAAC,CAAC;QACf,CAAC;MACH,CAAC,MAAM;QACLzI,UAAU,CAAC2I,QAAQ,CAAC,OAAO,CAAC;MAC9B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChCvI,UAAU,CAACD,OAAO,GAAG,GAAG,CAAC;EAC3B,CAAC;EACD3C,SAAS,CAAC,YAAM;IACd+G,mBAAmB,CAAC,CAAC;IACrB/C,iBAAiB,CAAC2B,WAAW,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEJ,OACE3D,IAAA,CAAC/B,IAAI;IAACmL,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,EACjDrJ,KAAA,CAAC5B,eAAe;MAACkL,MAAM,EAAEC,OAAO,4BAA4B,CAAE;MAACC,UAAU,EAAC,OAAO;MAACN,KAAK,EAAEO,MAAM,CAACC,KAAM;MAAAL,QAAA,GACpGrJ,KAAA,CAACjC,IAAI;QAACmL,KAAK,EAAEO,MAAM,CAACE,gBAAiB;QAAAN,QAAA,GACnCvJ,IAAA,CAAC9B,IAAI;UAACkL,KAAK,EAAEO,MAAM,CAACG,WAAY;UAAAP,QAAA,EAAC;QAAe,CAAM,CAAC,EACvDvJ,IAAA,CAAC/B,IAAI;UAACmL,KAAK,EAAEO,MAAM,CAACI,uBAAwB;UAAAR,QAAA,EAC1CrJ,KAAA,CAAChC,IAAI;YAACkL,KAAK,EAAEO,MAAM,CAACK,UAAW;YAAAT,QAAA,GAAC,SAAE,EAACpI,QAAQ,CAACiG,MAAM;UAAA,CAAO;QAAC,CACtD,CAAC,EAGPpH,IAAA,CAAC9B,IAAI;UAACkL,KAAK,EAAEO,MAAM,CAACM,KAAM;UAAAV,QAAA,EAAC;QAAe,CAAM,CAAC,EACjDvJ,IAAA,CAAC9B,IAAI;UAAAqL,QAAA,EAAE5F;QAAW,CAAO,CAAC,EAC1B3D,IAAA,CAAC/B,IAAI;UAACmL,KAAK,EAAEO,MAAM,CAACO,uBAAwB;UAAAX,QAAA,EAC1CvJ,IAAA,CAACxB,QAAQ;YACP4F,IAAI,EAAE7B,cAAe;YACrB4H,UAAU,EAAE,IAAK;YACjBC,UAAU,EAAE,SAAAA,WAAAC,MAAA;cAAA,IAAGC,IAAI,GAAAD,MAAA,CAAJC,IAAI;cAAA,OACjBpK,KAAA,CAAC9B,gBAAgB;gBACfgL,KAAK,EAAE,CACLO,MAAM,CAACY,qBAAqB,EAC5B;kBAAEC,UAAU,EAAE,EAAE;kBAAEC,SAAS,EAAE,EAAE;kBAAEC,YAAY,EAAE;gBAAG,CAAC,CACnD;gBACFC,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAM3I,iBAAiB,CAACsI,IAAI,CAACvI,cAAc,CAAC;gBAAA,CAAC;gBAAAwH,QAAA,GAEtDvJ,IAAA,CAAC/B,IAAI;kBAACmL,KAAK,EAAEO,MAAM,CAACiB,MAAO;kBAAArB,QAAA,EACzBvJ,IAAA,CAACtB,QAAQ;oBAACmM,IAAI,EAAC,QAAQ;oBAACC,IAAI,EAAE,EAAG;oBAACC,KAAK,EAAC;kBAAO,CAAE;gBAAC,CAC9C,CAAC,EACP/K,IAAA,CAAC9B,IAAI;kBAAC8M,aAAa,EAAE,CAAE;kBAAC5B,KAAK,EAAE;oBAAE6B,QAAQ,EAAE;kBAAE,CAAE;kBAAA1B,QAAA,EAC5Ce,IAAI,CAACY;gBAAY,CACd,CAAC;cAAA,CACS,CAAC;YAAA;UACnB,CACH;QAAC,CACE,CAAC;MAAA,CAGH,CAAC,EACPhL,KAAA,CAACjC,IAAI;QAACmL,KAAK,EAAE;UAAE+B,OAAO,EAAE;QAAG,CAAE;QAAA5B,QAAA,GAC3BvJ,IAAA,CAAC3B,SAAS;UACR+K,KAAK,EAAEO,MAAM,CAACyB,KAAM;UACpBC,WAAW,EAAC,2BAA2B;UACvCC,oBAAoB,EAAC,oBAAoB;UACzCC,KAAK,EAAExJ,cAAe;UACtByJ,YAAY,EAAExJ;QAAkB,CACjC,CAAC,EACFhC,IAAA,CAAC3B,SAAS;UACR+K,KAAK,EAAEO,MAAM,CAACyB,KAAM;UACpBC,WAAW,EAAC,gBAAgB;UAC5BC,oBAAoB,EAAC,oBAAoB;UACzCC,KAAK,EAAEpJ,MAAO;UACdqJ,YAAY,EAAEpJ;QAAU,CACzB,CAAC,EACFpC,IAAA,CAAC3B,SAAS;UACR+K,KAAK,EAAE;YAAEqC,WAAW,EAAE,CAAC;YAAEN,OAAO,EAAE;UAAG,CAAE;UACvCE,WAAW,EAAC,oBAAoB;UAChCE,KAAK,EAAEpI,WAAY;UACnBqI,YAAY,EAAEpI;QAAe,CAC9B,CAAC,EACFpD,IAAA,CAAC5B,gBAAgB;UACfgL,KAAK,EAAEO,MAAM,CAAC+B,cAAe;UAC7Bf,OAAO,EAAE5E,UAAW;UAAAwD,QAAA,EAEpBvJ,IAAA,CAAC9B,IAAI;YAACkL,KAAK,EAAEO,MAAM,CAACgC,kBAAmB;YAAApC,QAAA,EAAC;UAAU,CAAM;QAAC,CACzC,CAAC,EACnBvJ,IAAA,CAAC3B,SAAS;UACR+K,KAAK,EAAEO,MAAM,CAACyB,KAAM;UACpBC,WAAW,EAAC,gBAAgB;UAC5BC,oBAAoB,EAAC,oBAAoB;UACzCM,eAAe;UACfL,KAAK,EAAE5I,eAAgB;UACvB6I,YAAY,EAAE5I;QAAY,CAC3B,CAAC;MAAA,CACE,CAAC;IAAA,CACQ;EAAC,CACd,CAAC;AAEX,CAAC;AAED,IAAM+G,MAAM,GAAGxL,UAAU,CAAC0N,MAAM,CAAC;EAC/BjC,KAAK,EAAE;IACLP,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EAClB,CAAC;EACDO,gBAAgB,EAAE;IAChBiC,UAAU,EAAE,QAAQ;IACpBpB,YAAY,EAAE;EAChB,CAAC;EACDZ,WAAW,EAAE;IACXmB,QAAQ,EAAE,EAAE;IACZc,UAAU,EAAE,MAAM;IAClBrB,YAAY,EAAE,EAAE;IAChBK,KAAK,EAAE,MAAM;IACbiB,UAAU,EAAE;EACd,CAAC;EACDjC,uBAAuB,EAAE;IACvBkC,eAAe,EAAE,MAAM;IACvBC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,CAAC;IACf1B,YAAY,EAAE;EAChB,CAAC;EACDV,UAAU,EAAE;IACViB,QAAQ,EAAE,EAAE;IACZc,UAAU,EAAE,MAAM;IAClBhB,KAAK,EAAE;EACT,CAAC;EACDb,uBAAuB,EAAE;IACvB4B,UAAU,EAAE;EACd,CAAC;EACDO,kBAAkB,EAAE;IAClBpB,QAAQ,EAAE,EAAE;IACZF,KAAK,EAAE,MAAM;IACbL,YAAY,EAAE;EAChB,CAAC;EACD4B,iBAAiB,EAAE;IACjBrB,QAAQ,EAAE,EAAE;IACZF,KAAK,EAAE,MAAM;IACbL,YAAY,EAAE;EAChB,CAAC;EACDU,KAAK,EAAE;IACLmB,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,OAAO;IACpBf,WAAW,EAAE,CAAC;IACdW,YAAY,EAAE,CAAC;IACf1B,YAAY,EAAE,EAAE;IAChBS,OAAO,EAAE,EAAE;IACXsB,MAAM,EAAE,EAAE;IACVT,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDP,cAAc,EAAE;IACdgB,gBAAgB,EAAE,EAAE;IACpBT,eAAe,EAAE,SAAS;IAC1BE,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,CAAC;IACf3B,SAAS,EAAE,EAAE;IACbqB,UAAU,EAAE;EACd,CAAC;EACDH,kBAAkB,EAAE;IAClBZ,KAAK,EAAE,MAAM;IACbE,QAAQ,EAAE,EAAE;IACZc,UAAU,EAAE;EACd,CAAC;EACDY,iBAAiB,EAAE;IACjBC,aAAa,EAAE,KAAK;IACpBd,UAAU,EAAE;EACd,CAAC;EACDe,oBAAoB,EAAE;IACpBD,aAAa,EAAE,KAAK;IACpBd,UAAU,EAAE,QAAQ;IACpBgB,WAAW,EAAE;EACf;AAEF,CAAC,CAAC;AAEF,eAAe3M,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}