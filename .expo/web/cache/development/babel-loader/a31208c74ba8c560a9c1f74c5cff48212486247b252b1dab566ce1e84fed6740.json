{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ScanQR() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  var _useState5 = useState('Not yet scanned'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    text = _useState6[0],\n    setText = _useState6[1];\n  var navigation = useNavigation();\n  var askForCameraPermission = function askForCameraPermission() {\n    _asyncToGenerator(function* () {\n      var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n        status = _yield$BarCodeScanner.status;\n      setHasPermission(status === 'granted');\n    })();\n  };\n  useEffect(function () {\n    askForCameraPermission();\n  }, []);\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n      data = _ref2.data;\n    setScanned(true);\n    setText(data);\n    console.log('Type: ' + type + '\\nData: ' + data);\n  };\n  if (hasPermission === null) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: \"Requesting for camera permission\"\n      })\n    });\n  }\n  if (hasPermission === false) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: {\n          margin: 10\n        },\n        children: \"No access to camera\"\n      }), _jsx(Button, {\n        title: 'Allow Camera',\n        onPress: function onPress() {\n          return askForCameraPermission();\n        }\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.barcodebox,\n      children: _jsx(BarCodeScanner, {\n        onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n        style: {\n          height: 400,\n          width: 400\n        }\n      })\n    }), _jsx(Text, {\n      style: styles.maintext,\n      children: text\n    }), scanned && _jsx(Button, {\n      title: 'Scan again?',\n      onPress: function onPress() {\n        return setScanned(false);\n      },\n      color: \"tomato\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  maintext: {\n    fontSize: 16,\n    margin: 20\n  },\n  barcodebox: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 300,\n    width: 300,\n    overflow: 'hidden',\n    borderRadius: 30,\n    backgroundColor: 'tomato'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Text","View","StyleSheet","Button","BarCodeScanner","useNavigation","jsx","_jsx","jsxs","_jsxs","ScanQR","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","_useState4","scanned","setScanned","_useState5","_useState6","text","setText","navigation","askForCameraPermission","_asyncToGenerator","_yield$BarCodeScanner","requestPermissionsAsync","status","handleBarCodeScanned","_ref2","type","data","console","log","style","styles","container","children","margin","title","onPress","barcodebox","onBarCodeScanned","undefined","height","width","maintext","color","create","flex","backgroundColor","alignItems","justifyContent","fontSize","overflow","borderRadius"],"sources":["C:/Users/User/Pictures/E-Wallet-Project/screens/ScanQR.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, View, StyleSheet, Button } from 'react-native';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport { useNavigation } from '@react-navigation/native';\r\nexport default function ScanQR() {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n  const [text, setText] = useState('Not yet scanned')\r\n  const navigation = useNavigation()\r\n\r\n  const askForCameraPermission = () => {\r\n    (async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })()\r\n  }\r\n\r\n  // Request Camera Permission\r\n  useEffect(() => {\r\n    askForCameraPermission();\r\n  }, []);\r\n\r\n  // What happens when we scan the bar code\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setScanned(true);\r\n    setText(data)\r\n    console.log('Type: ' + type + '\\nData: ' + data)\r\n    // navigation.navigate(\"Send\", { scannedData: data });\r\n  };\r\n\r\n  // Check permissions and return the screens\r\n  if (hasPermission === null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>Requesting for camera permission</Text>\r\n      </View>)\r\n  }\r\n  if (hasPermission === false) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={{ margin: 10 }}>No access to camera</Text>\r\n        <Button title={'Allow Camera'} onPress={() => askForCameraPermission()} />\r\n      </View>)\r\n  }\r\n\r\n  // Return the View\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.barcodebox}>\r\n        <BarCodeScanner\r\n          onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n          style={{ height: 400, width: 400 }} />\r\n      </View>\r\n      <Text style={styles.maintext}>{text}</Text>\r\n\r\n      {scanned && <Button title={'Scan again?'} onPress={() => setScanned(false)} color='tomato' />}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  maintext: {\r\n    fontSize: 16,\r\n    margin: 20,\r\n  },\r\n  barcodebox: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: 300,\r\n    width: 300,\r\n    overflow: 'hidden',\r\n    borderRadius: 30,\r\n    backgroundColor: 'tomato'\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}