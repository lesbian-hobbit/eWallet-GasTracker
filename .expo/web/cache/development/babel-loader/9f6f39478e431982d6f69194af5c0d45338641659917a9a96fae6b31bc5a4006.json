{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, doc, getDocs, setDoc, addDoc, Timestamp, orderBy, limit } from \"firebase/firestore\";\nimport { auth, db, firebase } from \"../firebase\";\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut, signInWithPhoneNumber } from \"firebase/auth\";\nimport { encode } from 'base-64';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar SendCash = function SendCash(_ref) {\n  var _route$params;\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(5000),\n    _useState2 = _slicedToArray(_useState, 2),\n    balance = _useState2[0],\n    setBalance = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userInfo = _useState6[0],\n    setUserInfo = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    fullname = _useState8[0],\n    setName = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    recipientEmail = _useState10[0],\n    setRecipientEmail = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    amount = _useState12[0],\n    setAmount = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    recentContacts = _useState14[0],\n    setRecentContacts = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    ConfirmPassword = _useState16[0],\n    setPassword = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    verificationCode = _useState18[0],\n    setVerificationCode = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    verificationId = _useState20[0],\n    setVerificationId = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    phoneNumber = _useState22[0],\n    setPhoneNumber = _useState22[1];\n  var scannedData = (_route$params = route.params) == null ? void 0 : _route$params.scannedData;\n  if (!global.btoa) {\n    global.btoa = encode;\n  }\n  var sendOTP = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var auth1 = auth();\n      signInWithPhoneNumber(auth1, phoneNumber).then(function (confirmationResult) {\n        window.confirmationResult = confirmationResult;\n      }).catch(function (error) {});\n    });\n    return function sendOTP() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var verifyOTP = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var credential = auth.PhoneAuthProvider.credential(verificationId, verificationCode);\n        yield auth.currentUser.linkWithCredential(credential);\n        console.log('OTP verification successful!');\n      } catch (error) {\n        console.error('Error verifying OTP:', error);\n      }\n    });\n    return function verifyOTP() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var getRecipientUid = function () {\n    var _ref4 = _asyncToGenerator(function* (email) {\n      var usersRef = collection(db, 'users');\n      var q = query(usersRef, where('email', '==', email));\n      var querySnapshot = yield getDocs(q);\n      if (!querySnapshot.empty) {\n        var recipient = querySnapshot.docs[0];\n        return recipient.id;\n      }\n      throw new Error('Recipient not found');\n    });\n    return function getRecipientUid(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var ConfirmPin = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      onAuthStateChanged(auth, _asyncToGenerator(function* () {\n        var user = auth.currentUser;\n        if (user) {\n          var uid = user.uid;\n          setEmail(user.email);\n          var userCredential = yield signInWithEmailAndPassword(auth, user.email, ConfirmPassword).then(function (res) {\n            var user = auth.currentUser;\n            if (user.emailVerified) {\n              console.log(res);\n              var userData = userCredential.user;\n              console.log(\"User password:\", userData.password, uid, userData.email);\n            } else {\n              alert(\"Password does not match\");\n            }\n          });\n        }\n      }));\n      if (ConfirmPin) {\n        transferFunds();\n      }\n    });\n    return function ConfirmPin() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var loadRecentTransactions = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      var currentUserUID = auth.currentUser.uid;\n      var recentTransactionsRef = collection(db, 'users', currentUserUID, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent');\n      var phoneNumber = collection(db, 'users', currentUserUID, 'contact');\n      onSnapshot(query(recentTransactionsRef, orderBy('Timestamp', 'desc'), limit(5)), function (snapshot) {\n        var emailSet = new Set();\n        snapshot.forEach(function (doc) {\n          var _doc$data = doc.data(),\n            ReceiverEmail = _doc$data.ReceiverEmail;\n          emailSet.add(ReceiverEmail);\n        });\n        var recentContacts = Array.from(emailSet);\n        setRecentContacts(recentContacts);\n      }, function (error) {\n        console.error('Error fetching recent transactions:', error);\n      });\n    });\n    return function loadRecentTransactions() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var transferFunds = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      var user = auth.currentUser;\n      if (user && user.emailVerified) {\n        try {\n          var recipientUid = yield getRecipientUid(recipientEmail);\n          var sfDocRef = doc(db, 'users', recipientUid);\n          yield runTransaction(db, function () {\n            var _ref9 = _asyncToGenerator(function* (transaction) {\n              var sfDoc = yield transaction.get(sfDocRef);\n              if (!sfDoc.exists()) {\n                throw new Error('Document does not exist!');\n              }\n              var newWallet = sfDoc.data().wallet + Number(amount);\n              transaction.update(sfDocRef, {\n                wallet: newWallet\n              });\n            });\n            return function (_x2) {\n              return _ref9.apply(this, arguments);\n            };\n          }());\n          console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\n          var deduct = function () {\n            var _ref10 = _asyncToGenerator(function* () {\n              var user = auth.currentUser.uid;\n              if (user) {\n                var uid = user;\n                try {\n                  yield runTransaction(db, function () {\n                    var _ref11 = _asyncToGenerator(function* (transaction) {\n                      var userRef = firebase.firestore().collection('users').doc(uid);\n                      var sf = yield transaction.get(userRef);\n                      if (!sf.exists) {\n                        throw new Error('Document does not exist!');\n                      }\n                      var deductedWallet = sf.data().wallet - Number(amount);\n                      transaction.update(userRef, {\n                        wallet: deductedWallet\n                      });\n                      alert('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\n                      console.log('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\n                    });\n                    return function (_x3) {\n                      return _ref11.apply(this, arguments);\n                    };\n                  }());\n                } catch (error) {\n                  alert('Error updating wallet:', error);\n                  console.error('Error updating wallet:', error);\n                }\n              }\n            });\n            return function deduct() {\n              return _ref10.apply(this, arguments);\n            };\n          }();\n          yield deduct();\n          var _user = auth.currentUser.uid;\n          if (_user) {\n            var uid = _user;\n            var SenderEmail = auth.currentUser.email;\n            var newTransactions = function () {\n              var _ref12 = _asyncToGenerator(function* () {\n                yield addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\n                  transactions: amount,\n                  Timestamp: new Date(),\n                  ReceiverUid: recipientUid,\n                  ReceiverEmail: recipientEmail\n                });\n              });\n              return function newTransactions() {\n                return _ref12.apply(this, arguments);\n              };\n            }();\n            yield newTransactions();\n            var receivedHis = function () {\n              var _ref13 = _asyncToGenerator(function* () {\n                yield addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\n                  transactions: amount,\n                  Timestamp: new Date(),\n                  Sender: uid,\n                  SenderEmail: SenderEmail\n                });\n              });\n              return function receivedHis() {\n                return _ref13.apply(this, arguments);\n              };\n            }();\n            yield receivedHis();\n            var isRecipientInContacts = recentContacts.includes(recipientEmail);\n            if (!isRecipientInContacts) {\n              var updatedContacts = [recipientEmail].concat(_toConsumableArray(recentContacts.slice(0, 4)));\n              setRecentContacts(updatedContacts);\n            }\n          }\n        } catch (error) {\n          console.error('Error transferring funds:', error);\n        }\n      }\n    });\n    return function transferFunds() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        var uid = user.uid;\n        setEmail(user.email);\n        var getWallet = function () {\n          var _ref14 = _asyncToGenerator(function* () {\n            var docRef = doc(db, 'users', uid);\n            var unsubscribe = onSnapshot(docRef, function (docSnap) {\n              if (docSnap.exists()) {\n                console.log('Document data:', docSnap.data());\n                var data = docSnap.data();\n                setUserInfo(data);\n              } else {\n                console.log('No such document!');\n              }\n            });\n            return unsubscribe;\n          });\n          return function getWallet() {\n            return _ref14.apply(this, arguments);\n          };\n        }();\n        var unsubscribe = getWallet();\n        return function () {\n          unsubscribe();\n        };\n      } else {\n        navigation.navigate('Login');\n      }\n    });\n  }, []);\n  useEffect(function () {\n    loadRecentTransactions();\n    setRecipientEmail(scannedData);\n  }, []);\n  var handleTransferFunds = function handleTransferFunds() {\n    setBalance(balance - 100);\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    children: _jsxs(ImageBackground, {\n      source: require(\"../assets/background1.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: [_jsxs(View, {\n        style: styles.balanceContainer,\n        children: [_jsx(Text, {\n          style: styles.balanceText,\n          children: \"Current Balance\"\n        }), _jsx(View, {\n          style: styles.currentBalanceContainer,\n          children: _jsxs(Text, {\n            style: styles.amountText,\n            children: [\"\\u20B1 \", userInfo.wallet]\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.recentContactsContainer,\n        children: [_jsx(Text, {\n          style: styles.recentContactsText,\n          children: \"Recent Contacts:\"\n        }), _jsx(View, {\n          style: styles.recentContactsRow\n        }), _jsx(FlatList, {\n          data: recentContacts,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref15) {\n            var item = _ref15.item;\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setRecipientEmail(item);\n              },\n              children: _jsxs(View, {\n                style: styles.contactIconContainer,\n                children: [_jsx(Ionicons, {\n                  name: \"person-circle-outline\",\n                  size: 24,\n                  color: \"white\"\n                }), _jsx(Text, {\n                  style: styles.recentContactText,\n                  children: item\n                })]\n              })\n            });\n          }\n        })]\n      }), _jsxs(View, {\n        style: {\n          padding: 20\n        },\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Input Recipient's Email: \",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          value: recipientEmail,\n          onChangeText: setRecipientEmail\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Input Amount: \",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          value: amount,\n          onChangeText: setAmount\n        }), _jsx(TextInput, {\n          style: {\n            borderWidth: 1,\n            padding: 10\n          },\n          placeholder: \"Enter Phone Numbe\",\n          value: phoneNumber\n        }), _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"OTP Verification\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Phone Number\",\n            value: phoneNumber,\n            onChangeText: setPhoneNumber\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: sendOTP,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Send OTP\"\n            })\n          }), verificationId && _jsxs(_Fragment, {\n            children: [_jsx(TextInput, {\n              style: styles.input,\n              placeholder: \"Verification Code\",\n              value: verificationCode,\n              onChangeText: setVerificationCode\n            }), _jsx(TouchableOpacity, {\n              style: styles.button,\n              onPress: verifyOTP,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Verify OTP\"\n              })\n            })]\n          })]\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter Password\",\n          placeholderTextColor: \"rgba(0, 0, 0, 0.5)\",\n          secureTextEntry: true,\n          value: ConfirmPassword,\n          onChangeText: setPassword\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  balanceContainer: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  balanceText: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#fff',\n    fontFamily: 'Roboto'\n  },\n  currentBalanceContainer: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  amountText: {\n    fontSize: 23,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  recentContactsContainer: {\n    alignItems: 'center'\n  },\n  recentContactsText: {\n    fontSize: 16,\n    color: '#fff',\n    marginBottom: 5\n  },\n  recentContactText: {\n    fontSize: 14,\n    color: '#fff',\n    marginBottom: 3\n  },\n  input: {\n    height: 40,\n    borderColor: \"black\",\n    borderWidth: 2,\n    borderRadius: 5,\n    marginBottom: 10,\n    padding: 10,\n    margin: 10,\n    fontFamily: 'Roboto',\n    backgroundColor: 'white'\n  },\n  transferButton: {\n    marginHorizontal: 80,\n    backgroundColor: \"#111827\",\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  transferButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  recentContactsRow: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  contactIconContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 10\n  }\n});\nexport default SendCash;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","TextInput","ImageBackground","FlatList","AsyncStorage","Ionicons","collection","query","where","onSnapshot","writeBatch","runTransaction","doc","getDocs","setDoc","addDoc","Timestamp","orderBy","limit","auth","db","firebase","onAuthStateChanged","signInWithEmailAndPassword","signOut","signInWithPhoneNumber","encode","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SendCash","_ref","_route$params","route","navigation","_useState","_useState2","_slicedToArray","balance","setBalance","_useState3","_useState4","email","setEmail","_useState5","_useState6","userInfo","setUserInfo","_useState7","_useState8","fullname","setName","_useState9","_useState10","recipientEmail","setRecipientEmail","_useState11","_useState12","amount","setAmount","_useState13","_useState14","recentContacts","setRecentContacts","_useState15","_useState16","ConfirmPassword","setPassword","_useState17","_useState18","verificationCode","setVerificationCode","_useState19","_useState20","verificationId","setVerificationId","_useState21","_useState22","phoneNumber","setPhoneNumber","scannedData","params","global","btoa","sendOTP","_ref2","_asyncToGenerator","auth1","then","confirmationResult","window","catch","error","apply","arguments","verifyOTP","_ref3","credential","PhoneAuthProvider","currentUser","linkWithCredential","console","log","getRecipientUid","_ref4","usersRef","q","querySnapshot","empty","recipient","docs","id","Error","_x","ConfirmPin","_ref5","user","uid","userCredential","res","emailVerified","userData","password","alert","transferFunds","loadRecentTransactions","_ref7","currentUserUID","recentTransactionsRef","snapshot","emailSet","Set","forEach","_doc$data","data","ReceiverEmail","add","Array","from","_ref8","recipientUid","sfDocRef","_ref9","transaction","sfDoc","get","exists","newWallet","wallet","Number","update","_x2","deduct","_ref10","_ref11","userRef","firestore","sf","deductedWallet","_x3","SenderEmail","newTransactions","_ref12","transactions","Date","ReceiverUid","receivedHis","_ref13","Sender","isRecipientInContacts","includes","updatedContacts","concat","_toConsumableArray","slice","getWallet","_ref14","docRef","unsubscribe","docSnap","navigate","handleTransferFunds","style","flex","justifyContent","children","source","require","resizeMode","styles","image","balanceContainer","balanceText","currentBalanceContainer","amountText","recentContactsContainer","recentContactsText","recentContactsRow","keyExtractor","item","index","toString","renderItem","_ref15","onPress","contactIconContainer","name","size","color","recentContactText","padding","input","placeholder","placeholderTextColor","value","onChangeText","borderWidth","container","title","button","buttonText","secureTextEntry","create","alignItems","marginBottom","fontSize","fontWeight","fontFamily","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","height","borderColor","margin","transferButton","marginHorizontal","marginTop","transferButtonText","flexDirection","marginRight"],"sources":["C:/Users/User/E-wallet-GasTracker/screens/SendCash.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, TextInput, ImageBackground, FlatList } from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { collection, query, where, onSnapshot, writeBatch, runTransaction, doc, getDocs, setDoc, addDoc, Timestamp, orderBy, limit } from \"firebase/firestore\";\r\nimport { auth, db, firebase } from \"../firebase\";\r\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut, signInWithPhoneNumber } from \"firebase/auth\";\r\n\r\nimport { encode } from 'base-64';\r\n\r\n\r\nconst SendCash = ({ route, navigation }) => {\r\n  const [balance, setBalance] = useState(5000); // Initial balance\r\n  const [email, setEmail] = useState();\r\n  const [userInfo, setUserInfo] = useState([]);\r\n  const [fullname, setName] = useState();\r\n  const [recipientEmail, setRecipientEmail] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [recentContacts, setRecentContacts] = useState([]);\r\n  const [ConfirmPassword, setPassword] = useState(\"\");\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [verificationId, setVerificationId] = useState(null);\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const scannedData = route.params?.scannedData\r\n  if (!global.btoa) {\r\n    global.btoa = encode;\r\n  }\r\n\r\n  \r\n  // const currentUserUID = auth.currentUser.uid;\r\n  // const phoneNumber = collection(\r\n  //   db,\r\n  //   'users',\r\n  //   currentUserUID,\r\n  //   'contact'\r\n  // );\r\n  const sendOTP = async () => {\r\n    const auth1 = auth();\r\n    signInWithPhoneNumber(auth1, phoneNumber)\r\n        .then((confirmationResult) => {\r\n          // SMS sent. Prompt user to type the code from the message, then sign the\r\n          // user in with confirmationResult.confirm(code).\r\n          window.confirmationResult = confirmationResult;\r\n          // ...\r\n        }).catch((error) => {\r\n          // Error; SMS not sent\r\n          // ...\r\n        });\r\n  };\r\n\r\n  const verifyOTP = async () => {\r\n    try {\r\n      const credential = auth.PhoneAuthProvider.credential(\r\n        verificationId,\r\n        verificationCode\r\n      );\r\n      await auth.currentUser.linkWithCredential(credential);\r\n      console.log('OTP verification successful!');\r\n    } catch (error) {\r\n      console.error('Error verifying OTP:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const getRecipientUid = async (email) => {\r\n    const usersRef = collection(db, 'users');\r\n    const q = query(usersRef, where('email', '==', email));\r\n    const querySnapshot = await getDocs(q);\r\n    if (!querySnapshot.empty) {\r\n      const recipient = querySnapshot.docs[0];\r\n      return recipient.id;\r\n    }\r\n    throw new Error('Recipient not found');\r\n  };\r\n\r\n  const ConfirmPin = async () => {\r\n    onAuthStateChanged(auth, async () => {\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        const uid = user.uid;\r\n        setEmail(user.email);\r\n        const userCredential = await signInWithEmailAndPassword(auth, user.email, ConfirmPassword).then((res) => {\r\n          const user = auth.currentUser;\r\n          if (user.emailVerified) {\r\n            console.log(res);\r\n\r\n            const userData = userCredential.user;\r\n            console.log(\"User password:\", userData.password, uid, userData.email);\r\n          } else {\r\n            alert(\"Password does not match\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n    if (ConfirmPin) {\r\n      transferFunds();\r\n    }\r\n  };\r\n\r\n\r\n  const loadRecentTransactions = async () => {\r\n    const currentUserUID = auth.currentUser.uid;\r\n    const recentTransactionsRef = collection(\r\n      db,\r\n      'users',\r\n      currentUserUID,\r\n      'history',\r\n      'DUgVrFDJhas4wAuX07re',\r\n      'Sent'\r\n    );\r\n    const phoneNumber = collection(\r\n      db,\r\n      'users',\r\n      currentUserUID,\r\n      'contact'\r\n    );\r\n  \r\n    onSnapshot(\r\n      query(recentTransactionsRef, orderBy('Timestamp', 'desc'), limit(5)),\r\n      (snapshot) => {\r\n        const emailSet = new Set(); // Use a Set to store unique emails\r\n        snapshot.forEach((doc) => {\r\n          const { ReceiverEmail } = doc.data();\r\n          emailSet.add(ReceiverEmail); // Add email to the Set\r\n        });\r\n        const recentContacts = Array.from(emailSet); // Convert Set back to an array\r\n        setRecentContacts(recentContacts);\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching recent transactions:', error);\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n  const transferFunds = async () => {\r\n    const user = auth.currentUser;\r\n  if (user && user.emailVerified) {\r\n    try {\r\n      const recipientUid = await getRecipientUid(recipientEmail);\r\n      const sfDocRef = doc(db, 'users', recipientUid);\r\n\r\n      await runTransaction(db, async (transaction) => {\r\n        const sfDoc = await transaction.get(sfDocRef);\r\n        if (!sfDoc.exists()) {\r\n          throw new Error('Document does not exist!');\r\n        }\r\n        const newWallet = sfDoc.data().wallet + Number(amount);\r\n        transaction.update(sfDocRef, { wallet: newWallet });\r\n      });\r\n      console.log('Transaction successfully committed!: ' + Number(amount) + ' ' + recipientUid);\r\n\r\n      const deduct = async () => {\r\n        const user = auth.currentUser.uid;\r\n        if (user) {\r\n          const uid = user;\r\n          try {\r\n            await runTransaction(db, async (transaction) => {\r\n              const userRef = firebase.firestore().collection('users').doc(uid);\r\n              const sf = await transaction.get(userRef);\r\n              if (!sf.exists) {\r\n                throw new Error('Document does not exist!');\r\n              }\r\n              const deductedWallet = sf.data().wallet - Number(amount);\r\n              transaction.update(userRef, {\r\n                wallet: deductedWallet,\r\n              });\r\n              alert('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\r\n              console.log('Successfully sent ₱' + Number(amount) + ' to ' + recipientEmail);\r\n            });\r\n          } catch (error) {\r\n            alert('Error updating wallet:', error);\r\n            console.error('Error updating wallet:', error);\r\n          }\r\n        }\r\n      };\r\n      await deduct();\r\n\r\n\r\n\r\n      const user = auth.currentUser.uid;\r\n      if (user) {\r\n        const uid = user;\r\n        const SenderEmail = auth.currentUser.email;\r\n        const newTransactions = async () => {\r\n          await addDoc(collection(db, 'users', uid, 'history', 'DUgVrFDJhas4wAuX07re', 'Sent'), {\r\n            transactions: amount,\r\n            Timestamp: new Date(),\r\n            ReceiverUid: recipientUid,\r\n            ReceiverEmail: recipientEmail,\r\n          });\r\n        };\r\n        await newTransactions();\r\n\r\n        const receivedHis = async () => {\r\n          await addDoc(collection(db, 'users', recipientUid, 'history', 'DUgVrFDJhas4wAuX07re', 'Recieved'), {\r\n            transactions: amount,\r\n            Timestamp: new Date(),\r\n            Sender: uid,\r\n            SenderEmail: SenderEmail,\r\n          });\r\n        };\r\n        await receivedHis();\r\n\r\n           // Check if the recipient's email is already in the recent contacts list\r\n      const isRecipientInContacts = recentContacts.includes(recipientEmail);\r\n      if (!isRecipientInContacts) {\r\n        const updatedContacts = [recipientEmail, ...recentContacts.slice(0, 4)];\r\n        setRecentContacts(updatedContacts);\r\n      }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error transferring funds:', error);\r\n    }\r\n  }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        const uid = user.uid;\r\n        setEmail(user.email);\r\n\r\n        const getWallet = async () => {\r\n          const docRef = doc(db, 'users', uid);\r\n          const unsubscribe = onSnapshot(docRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n              console.log('Document data:', docSnap.data());\r\n              const data = docSnap.data();\r\n              setUserInfo(data);\r\n            } else {\r\n              console.log('No such document!');\r\n            }\r\n          });\r\n\r\n          return unsubscribe;\r\n        };\r\n\r\n        const unsubscribe = getWallet();\r\n\r\n        return () =>{\r\n          unsubscribe();\r\n        };\r\n      } else {\r\n        navigation.navigate('Login');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadRecentTransactions();\r\n    setRecipientEmail(scannedData);\r\n  }, []);\r\n\r\n  const handleTransferFunds = () => {\r\n    setBalance(balance - 100);\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center' }}>\r\n      <ImageBackground source={require('../assets/background1.jpg')} resizeMode=\"cover\" style={styles.image}>\r\n        <View style={styles.balanceContainer}>\r\n          <Text style={styles.balanceText}>Current Balance</Text>\r\n          <View style={styles.currentBalanceContainer}>\r\n            <Text style={styles.amountText}>₱ {userInfo.wallet}</Text>\r\n          </View>\r\n \r\n        </View>\r\n        <View style={styles.recentContactsContainer}>\r\n            <Text style={styles.recentContactsText}>Recent Contacts:</Text>\r\n            \r\n            <View style={styles.recentContactsRow}></View>\r\n  <FlatList\r\n            data={recentContacts}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity onPress={() => setRecipientEmail(item)}>\r\n                <View style={styles.contactIconContainer}>\r\n                  <Ionicons name=\"person-circle-outline\" size={24} color=\"white\" />\r\n                  <Text style={styles.recentContactText}>{item}</Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n          />\r\n          </View>\r\n        <View style={{ padding: 20 }}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Input Recipient's Email: \"\r\n            placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n            value={recipientEmail}\r\n            onChangeText={setRecipientEmail}\r\n          />\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Input Amount: \"\r\n            placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n            value={amount}\r\n            onChangeText={setAmount}\r\n          />\r\n          <TextInput\r\n            style={{ borderWidth: 1, padding: 10 }}\r\n            placeholder=\"Enter Phone Numbe\"\r\n            value={phoneNumber}\r\n            \r\n          />\r\n\r\n<View style={styles.container}>\r\n      <Text style={styles.title}>OTP Verification</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Phone Number\"\r\n        value={phoneNumber}\r\n        onChangeText={setPhoneNumber}\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={sendOTP}>\r\n        <Text style={styles.buttonText}>Send OTP</Text>\r\n      </TouchableOpacity>\r\n      {verificationId && (\r\n        <>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Verification Code\"\r\n            value={verificationCode}\r\n            onChangeText={setVerificationCode}\r\n          />\r\n          <TouchableOpacity style={styles.button} onPress={verifyOTP}>\r\n            <Text style={styles.buttonText}>Verify OTP</Text>\r\n          </TouchableOpacity>\r\n        </>\r\n      )}\r\n    </View>\r\n          {/* <TouchableOpacity\r\n            style={styles.transferButton}\r\n            // onPress={ConfirmPin}\r\n            onPress={sendOTP}\r\n          >\r\n            <Text style={styles.transferButtonText}>Send Funds</Text>\r\n          </TouchableOpacity> */}\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter Password\"\r\n            placeholderTextColor=\"rgba(0, 0, 0, 0.5)\"\r\n            secureTextEntry\r\n            value={ConfirmPassword}\r\n            onChangeText={setPassword}\r\n          />\r\n        </View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  balanceContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 30,\r\n  },\r\n  balanceText: {\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: '#fff',\r\n    fontFamily: 'Roboto',\r\n  },\r\n  currentBalanceContainer: {\r\n    backgroundColor: '#fff',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  amountText: {\r\n    fontSize: 23,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  recentContactsContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  recentContactsText: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n    marginBottom: 5,\r\n  },\r\n  recentContactText: {\r\n    fontSize: 14,\r\n    color: '#fff',\r\n    marginBottom: 3,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"black\",\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n    margin: 10,\r\n    fontFamily: 'Roboto',\r\n    backgroundColor: 'white'\r\n  },\r\n  transferButton: {\r\n    marginHorizontal: 80,\r\n    backgroundColor: \"#111827\",\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginTop: 15,\r\n    alignItems: 'center'\r\n  },\r\n  transferButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  recentContactsRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  contactIconContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginRight: 10,\r\n  },\r\n\r\n});\r\n\r\nexport default SendCash;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}